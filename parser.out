Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PROGRAM ID SEMICOLON agregarProg prog_1
Rule 2     agregarProg -> <empty>
Rule 3     prog_1 -> var cuadruploMain metodos mainEnd prog_2
Rule 4     prog_1 -> var cuadruploMain metodos
Rule 5     prog_1 -> prog_2
Rule 6     prog_2 -> main
Rule 7     main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END
Rule 8     cuadruploMain -> <empty>
Rule 9     mainEnd -> <empty>
Rule 10    type -> INT guardaTipoDeVariable
Rule 11    type -> FLOAT guardaTipoDeVariable
Rule 12    type -> CHAR guardaTipoDeVariable
Rule 13    guardaTipoDeVariable -> <empty>
Rule 14    var -> vars
Rule 15    var -> <empty>
Rule 16    vars -> VAR var_2
Rule 17    var_2 -> var_2 type var1 SEMICOLON agregarVar
Rule 18    var_2 -> <empty>
Rule 19    var1 -> ID
Rule 20    var1 -> ID COMMA var1 agregarVar
Rule 21    var1 -> ID arr
Rule 22    var1 -> ID arr COMMA var1 agregarVar
Rule 23    var1 -> ID mat COMMA var1 agregarVar
Rule 24    var1 -> ID mat
Rule 25    var1 -> ID mat especial
Rule 26    var1 -> empty
Rule 27    empty -> <empty>
Rule 28    agregarVar -> <empty>
Rule 29    especial -> TRANSPUESTA transpuestaNum
Rule 30    especial -> INVERSA
Rule 31    especial -> DETERMINANTE
Rule 32    transpuestaNum -> <empty>
Rule 33    arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo
Rule 34    arr -> LBRACKET exp RBRACKET arrQuad clearArreglo
Rule 35    clearArreglo -> <empty>
Rule 36    arrQuad -> <empty>
Rule 37    cuadruploMatriz -> <empty>
Rule 38    generaMatriz -> <empty>
Rule 39    clearMatriz -> <empty>
Rule 40    mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 41    mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 42    mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
Rule 43    mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET
Rule 44    metodos -> funcion metodos
Rule 45    metodos -> <empty>
Rule 46    funcion -> FUNCION VOID funcion_1
Rule 47    funcion -> FUNCION INT funcion_2
Rule 48    funcion -> FUNCION CHAR funcion_2
Rule 49    funcion -> FUNCION FLOAT funcion_2
Rule 50    funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
Rule 51    funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
Rule 52    guardaFuncion -> <empty>
Rule 53    funcionGOTO -> <empty>
Rule 54    endFuncion -> <empty>
Rule 55    operadorReturn -> <empty>
Rule 56    cuadruploReturn -> <empty>
Rule 57    estatutos -> estatutos_2 estatutos
Rule 58    estatutos -> <empty>
Rule 59    estatutos_2 -> asignacion SEMICOLON
Rule 60    estatutos_2 -> llamada SEMICOLON
Rule 61    estatutos_2 -> lectura SEMICOLON
Rule 62    estatutos_2 -> escritura SEMICOLON
Rule 63    estatutos_2 -> for
Rule 64    estatutos_2 -> if
Rule 65    estatutos_2 -> while
Rule 66    asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
Rule 67    asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
Rule 68    asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
Rule 69    guardaVariable_2 -> <empty>
Rule 70    addOperadorName -> <empty>
Rule 71    cuadruploAsignacion -> <empty>
Rule 72    param -> ID agregarParametro
Rule 73    param -> ID COMMA param agregarParametro
Rule 74    param -> ID arr
Rule 75    param -> ID arr COMMA param
Rule 76    param -> ID mat COMMA param
Rule 77    param -> ID mat
Rule 78    param -> ID mat especial
Rule 79    param -> <empty>
Rule 80    agregarParametro -> <empty>
Rule 81    param2 -> param2 type param
Rule 82    param2 -> <empty>
Rule 83    llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
Rule 84    llamadaEra -> <empty>
Rule 85    auxiliarExp -> exp
Rule 86    auxiliarExp -> exp COMMA exp
Rule 87    cuadruploParametros -> <empty>
Rule 88    cuadruploGoSub -> <empty>
Rule 89    endProcesoLlena -> <empty>
Rule 90    lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN
Rule 91    operadorRead -> <empty>
Rule 92    cuadruploRead -> <empty>
Rule 93    escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
Rule 94    escritura1 -> escritura2 COMMA escritura2
Rule 95    escritura1 -> escritura2
Rule 96    escritura2 -> COMILLA CTESTRING COMILLA
Rule 97    escritura2 -> exp cuadruploPrint
Rule 98    operadorPrint -> <empty>
Rule 99    cuadruploPrint -> <empty>
Rule 100   guardaCTE -> <empty>
Rule 101   for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
Rule 102   for1 -> FROM asignacion TO exp
Rule 103   operadorFor -> <empty>
Rule 104   cuadruploFor -> <empty>
Rule 105   endFor -> <empty>
Rule 106   if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
Rule 107   cuadruploIf -> <empty>
Rule 108   endIf -> <empty>
Rule 109   else -> ELSE cuadruploElse LCURLY estatutos RCURLY
Rule 110   else -> <empty>
Rule 111   cuadruploElse -> <empty>
Rule 112   while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
Rule 113   operadorWhile -> <empty>
Rule 114   cuadruploWhile -> <empty>
Rule 115   endWhile -> <empty>
Rule 116   exp -> nexp
Rule 117   exp -> exp OR addOperadorName nexp cuadruploOr
Rule 118   cuadruploOr -> <empty>
Rule 119   nexp -> compexp1
Rule 120   nexp -> nexp AND addOperadorName compexp1 cuadruploAnd
Rule 121   cuadruploAnd -> <empty>
Rule 122   compexp -> sumexp
Rule 123   compexp -> compexp1 sumexp
Rule 124   compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion
Rule 125   compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion
Rule 126   compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion
Rule 127   compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion
Rule 128   compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion
Rule 129   compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
Rule 130   compexp1 -> sumexp
Rule 131   cuadruploComparacion -> <empty>
Rule 132   sumexp -> mulexp
Rule 133   sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma
Rule 134   sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma
Rule 135   cuadruploSuma -> <empty>
Rule 136   mulexp -> pexp
Rule 137   mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion
Rule 138   mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion
Rule 139   cuadruploMultiplicacion -> <empty>
Rule 140   pexp -> var1 guardaID
Rule 141   pexp -> CTEI guardaCTE
Rule 142   pexp -> CTEF guardaCTE
Rule 143   pexp -> CTEC guardaCTE
Rule 144   pexp -> CTESTRING guardaCTE
Rule 145   pexp -> llamada
Rule 146   pexp -> LPAREN exp RPAREN
Rule 147   guardaID -> <empty>

Terminals, with rules where they appear

AND                  : 120
CHAR                 : 12 48
COMILLA              : 96 96
COMMA                : 20 22 23 73 75 76 86 94
COMPARE              : 129
CTEC                 : 143
CTEF                 : 142
CTEI                 : 33 40 40 42 43 141
CTESTRING            : 96 144
DETERMINANTE         : 31
DIV                  : 138
ELSE                 : 109
END                  : 7
EQUALS               : 66 67 68
FLOAT                : 11 49
FOR                  : 101
FROM                 : 102
FUNCION              : 46 47 48 49
GT                   : 124
GTE                  : 126
ID                   : 1 19 20 21 22 23 24 25 50 51 66 67 68 72 73 74 75 76 77 78 83
IF                   : 106
INT                  : 10 47
INVERSA              : 30
LBRACKET             : 33 34 40 40 41 41 42 42 43 43
LCURLY               : 7 50 51 101 106 109 112
LPAREN               : 7 50 51 83 90 93 101 106 112 146
LT                   : 125
LTE                  : 127
MAIN                 : 7
MINUS                : 134
MUL                  : 137
NE                   : 128
OR                   : 117
PLUS                 : 133
PRINT                : 93
PROGRAM              : 1
RBRACKET             : 33 34 40 40 41 41 42 42 43 43
RCURLY               : 7 50 51 101 106 109 112
READ                 : 90
RETURN               : 51
RPAREN               : 7 50 51 83 90 93 101 106 112 146
SEMICOLON            : 1 17 50 51 51 59 60 61 62
TO                   : 102
TRANSPUESTA          : 29
VAR                  : 16
VOID                 : 46
WHILE                : 112
error                : 

Nonterminals, with rules where they appear

addOperadorName      : 66 67 68 117 120 124 125 126 127 128 129 133 134 137 138
agregarParametro     : 72 73
agregarProg          : 1
agregarVar           : 17 20 22 23
arr                  : 21 22 67 74 75
arrQuad              : 33 34
asignacion           : 59 102
auxiliarExp          : 83
clearArreglo         : 33 34
clearMatriz          : 
compexp              : 
compexp1             : 119 120 123 124 125 126 127 128 129
cuadruploAnd         : 120
cuadruploAsignacion  : 66 67 68
cuadruploComparacion : 124 125 126 127 128 129
cuadruploElse        : 109
cuadruploFor         : 101
cuadruploGoSub       : 83
cuadruploIf          : 106
cuadruploMain        : 3 4
cuadruploMatriz      : 
cuadruploMultiplicacion : 137 138
cuadruploOr          : 117
cuadruploParametros  : 83
cuadruploPrint       : 93 97
cuadruploRead        : 90
cuadruploReturn      : 51
cuadruploSuma        : 133 134
cuadruploWhile       : 112
else                 : 106
empty                : 26
endFor               : 101
endFuncion           : 50 51
endIf                : 106
endProcesoLlena      : 83
endWhile             : 112
escritura            : 62
escritura1           : 93
escritura2           : 94 94 95
especial             : 25 78
estatutos            : 7 50 51 57 101 106 109 112
estatutos_2          : 57
exp                  : 34 41 41 42 43 51 66 67 68 85 86 86 90 97 102 106 112 117 146
for                  : 63
for1                 : 101
funcion              : 44
funcionGOTO          : 50 51
funcion_1            : 46
funcion_2            : 47 48 49
generaMatriz         : 
guardaCTE            : 141 142 143 144
guardaFuncion        : 7 50 51
guardaID             : 140
guardaTipoDeVariable : 10 11 12
guardaVariable_2     : 66 67 68
if                   : 64
lectura              : 61
llamada              : 60 145
llamadaEra           : 83
main                 : 6
mainEnd              : 3
mat                  : 23 24 25 68 76 77 78
metodos              : 3 4 44
mulexp               : 132 133 134 137 138
nexp                 : 116 117 120
operadorFor          : 101
operadorPrint        : 93
operadorRead         : 90
operadorReturn       : 51
operadorWhile        : 112
param                : 73 75 76 81
param2               : 7 50 51 81
pexp                 : 136 137 138
prog                 : 0
prog_1               : 1
prog_2               : 3 5
sumexp               : 122 123 124 125 126 127 128 129 130 133 134
transpuestaNum       : 29
type                 : 17 81
var                  : 3 4 7 50 51
var1                 : 17 20 22 23 140
var_2                : 16 17
vars                 : 14
while                : 65

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PROGRAM ID SEMICOLON agregarProg prog_1

    PROGRAM         shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> PROGRAM . ID SEMICOLON agregarProg prog_1

    ID              shift and go to state 3


state 3

    (1) prog -> PROGRAM ID . SEMICOLON agregarProg prog_1

    SEMICOLON       shift and go to state 4


state 4

    (1) prog -> PROGRAM ID SEMICOLON . agregarProg prog_1
    (2) agregarProg -> .

    VAR             reduce using rule 2 (agregarProg -> .)
    MAIN            reduce using rule 2 (agregarProg -> .)
    FUNCION         reduce using rule 2 (agregarProg -> .)
    $end            reduce using rule 2 (agregarProg -> .)

    agregarProg                    shift and go to state 5

state 5

    (1) prog -> PROGRAM ID SEMICOLON agregarProg . prog_1
    (3) prog_1 -> . var cuadruploMain metodos mainEnd prog_2
    (4) prog_1 -> . var cuadruploMain metodos
    (5) prog_1 -> . prog_2
    (14) var -> . vars
    (15) var -> .
    (6) prog_2 -> . main
    (16) vars -> . VAR var_2
    (7) main -> . MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END

  ! shift/reduce conflict for MAIN resolved as shift
    FUNCION         reduce using rule 15 (var -> .)
    $end            reduce using rule 15 (var -> .)
    VAR             shift and go to state 11
    MAIN            shift and go to state 12

  ! MAIN            [ reduce using rule 15 (var -> .) ]

    prog_1                         shift and go to state 6
    var                            shift and go to state 7
    prog_2                         shift and go to state 8
    vars                           shift and go to state 9
    main                           shift and go to state 10

state 6

    (1) prog -> PROGRAM ID SEMICOLON agregarProg prog_1 .

    $end            reduce using rule 1 (prog -> PROGRAM ID SEMICOLON agregarProg prog_1 .)


state 7

    (3) prog_1 -> var . cuadruploMain metodos mainEnd prog_2
    (4) prog_1 -> var . cuadruploMain metodos
    (8) cuadruploMain -> .

    FUNCION         reduce using rule 8 (cuadruploMain -> .)
    MAIN            reduce using rule 8 (cuadruploMain -> .)
    $end            reduce using rule 8 (cuadruploMain -> .)

    cuadruploMain                  shift and go to state 13

state 8

    (5) prog_1 -> prog_2 .

    $end            reduce using rule 5 (prog_1 -> prog_2 .)


state 9

    (14) var -> vars .

    FUNCION         reduce using rule 14 (var -> vars .)
    MAIN            reduce using rule 14 (var -> vars .)
    $end            reduce using rule 14 (var -> vars .)
    ID              reduce using rule 14 (var -> vars .)
    READ            reduce using rule 14 (var -> vars .)
    PRINT           reduce using rule 14 (var -> vars .)
    FOR             reduce using rule 14 (var -> vars .)
    IF              reduce using rule 14 (var -> vars .)
    WHILE           reduce using rule 14 (var -> vars .)
    RCURLY          reduce using rule 14 (var -> vars .)
    RETURN          reduce using rule 14 (var -> vars .)


state 10

    (6) prog_2 -> main .

    $end            reduce using rule 6 (prog_2 -> main .)


state 11

    (16) vars -> VAR . var_2
    (17) var_2 -> . var_2 type var1 SEMICOLON agregarVar
    (18) var_2 -> .

    INT             reduce using rule 18 (var_2 -> .)
    FLOAT           reduce using rule 18 (var_2 -> .)
    CHAR            reduce using rule 18 (var_2 -> .)
    FUNCION         reduce using rule 18 (var_2 -> .)
    MAIN            reduce using rule 18 (var_2 -> .)
    $end            reduce using rule 18 (var_2 -> .)
    ID              reduce using rule 18 (var_2 -> .)
    READ            reduce using rule 18 (var_2 -> .)
    PRINT           reduce using rule 18 (var_2 -> .)
    FOR             reduce using rule 18 (var_2 -> .)
    IF              reduce using rule 18 (var_2 -> .)
    WHILE           reduce using rule 18 (var_2 -> .)
    RCURLY          reduce using rule 18 (var_2 -> .)
    RETURN          reduce using rule 18 (var_2 -> .)

    var_2                          shift and go to state 14

state 12

    (7) main -> MAIN . guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END
    (52) guardaFuncion -> .

    LPAREN          reduce using rule 52 (guardaFuncion -> .)

    guardaFuncion                  shift and go to state 15

state 13

    (3) prog_1 -> var cuadruploMain . metodos mainEnd prog_2
    (4) prog_1 -> var cuadruploMain . metodos
    (44) metodos -> . funcion metodos
    (45) metodos -> .
    (46) funcion -> . FUNCION VOID funcion_1
    (47) funcion -> . FUNCION INT funcion_2
    (48) funcion -> . FUNCION CHAR funcion_2
    (49) funcion -> . FUNCION FLOAT funcion_2

    MAIN            reduce using rule 45 (metodos -> .)
    $end            reduce using rule 45 (metodos -> .)
    FUNCION         shift and go to state 18

    metodos                        shift and go to state 16
    funcion                        shift and go to state 17

state 14

    (16) vars -> VAR var_2 .
    (17) var_2 -> var_2 . type var1 SEMICOLON agregarVar
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    FUNCION         reduce using rule 16 (vars -> VAR var_2 .)
    MAIN            reduce using rule 16 (vars -> VAR var_2 .)
    $end            reduce using rule 16 (vars -> VAR var_2 .)
    ID              reduce using rule 16 (vars -> VAR var_2 .)
    READ            reduce using rule 16 (vars -> VAR var_2 .)
    PRINT           reduce using rule 16 (vars -> VAR var_2 .)
    FOR             reduce using rule 16 (vars -> VAR var_2 .)
    IF              reduce using rule 16 (vars -> VAR var_2 .)
    WHILE           reduce using rule 16 (vars -> VAR var_2 .)
    RCURLY          reduce using rule 16 (vars -> VAR var_2 .)
    RETURN          reduce using rule 16 (vars -> VAR var_2 .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    type                           shift and go to state 19

state 15

    (7) main -> MAIN guardaFuncion . LPAREN param2 RPAREN LCURLY var estatutos RCURLY END

    LPAREN          shift and go to state 23


state 16

    (3) prog_1 -> var cuadruploMain metodos . mainEnd prog_2
    (4) prog_1 -> var cuadruploMain metodos .
    (9) mainEnd -> .

    $end            reduce using rule 4 (prog_1 -> var cuadruploMain metodos .)
    MAIN            reduce using rule 9 (mainEnd -> .)

    mainEnd                        shift and go to state 24

state 17

    (44) metodos -> funcion . metodos
    (44) metodos -> . funcion metodos
    (45) metodos -> .
    (46) funcion -> . FUNCION VOID funcion_1
    (47) funcion -> . FUNCION INT funcion_2
    (48) funcion -> . FUNCION CHAR funcion_2
    (49) funcion -> . FUNCION FLOAT funcion_2

    MAIN            reduce using rule 45 (metodos -> .)
    $end            reduce using rule 45 (metodos -> .)
    FUNCION         shift and go to state 18

    funcion                        shift and go to state 17
    metodos                        shift and go to state 25

state 18

    (46) funcion -> FUNCION . VOID funcion_1
    (47) funcion -> FUNCION . INT funcion_2
    (48) funcion -> FUNCION . CHAR funcion_2
    (49) funcion -> FUNCION . FLOAT funcion_2

    VOID            shift and go to state 26
    INT             shift and go to state 27
    CHAR            shift and go to state 28
    FLOAT           shift and go to state 29


state 19

    (17) var_2 -> var_2 type . var1 SEMICOLON agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (27) empty -> .

    ID              shift and go to state 31
    SEMICOLON       reduce using rule 27 (empty -> .)

    var1                           shift and go to state 30
    empty                          shift and go to state 32

state 20

    (10) type -> INT . guardaTipoDeVariable
    (13) guardaTipoDeVariable -> .

    ID              reduce using rule 13 (guardaTipoDeVariable -> .)
    SEMICOLON       reduce using rule 13 (guardaTipoDeVariable -> .)
    RPAREN          reduce using rule 13 (guardaTipoDeVariable -> .)
    INT             reduce using rule 13 (guardaTipoDeVariable -> .)
    FLOAT           reduce using rule 13 (guardaTipoDeVariable -> .)
    CHAR            reduce using rule 13 (guardaTipoDeVariable -> .)

    guardaTipoDeVariable           shift and go to state 33

state 21

    (11) type -> FLOAT . guardaTipoDeVariable
    (13) guardaTipoDeVariable -> .

    ID              reduce using rule 13 (guardaTipoDeVariable -> .)
    SEMICOLON       reduce using rule 13 (guardaTipoDeVariable -> .)
    RPAREN          reduce using rule 13 (guardaTipoDeVariable -> .)
    INT             reduce using rule 13 (guardaTipoDeVariable -> .)
    FLOAT           reduce using rule 13 (guardaTipoDeVariable -> .)
    CHAR            reduce using rule 13 (guardaTipoDeVariable -> .)

    guardaTipoDeVariable           shift and go to state 34

state 22

    (12) type -> CHAR . guardaTipoDeVariable
    (13) guardaTipoDeVariable -> .

    ID              reduce using rule 13 (guardaTipoDeVariable -> .)
    SEMICOLON       reduce using rule 13 (guardaTipoDeVariable -> .)
    RPAREN          reduce using rule 13 (guardaTipoDeVariable -> .)
    INT             reduce using rule 13 (guardaTipoDeVariable -> .)
    FLOAT           reduce using rule 13 (guardaTipoDeVariable -> .)
    CHAR            reduce using rule 13 (guardaTipoDeVariable -> .)

    guardaTipoDeVariable           shift and go to state 35

state 23

    (7) main -> MAIN guardaFuncion LPAREN . param2 RPAREN LCURLY var estatutos RCURLY END
    (81) param2 -> . param2 type param
    (82) param2 -> .

    RPAREN          reduce using rule 82 (param2 -> .)
    INT             reduce using rule 82 (param2 -> .)
    FLOAT           reduce using rule 82 (param2 -> .)
    CHAR            reduce using rule 82 (param2 -> .)

    param2                         shift and go to state 36

state 24

    (3) prog_1 -> var cuadruploMain metodos mainEnd . prog_2
    (6) prog_2 -> . main
    (7) main -> . MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END

    MAIN            shift and go to state 12

    prog_2                         shift and go to state 37
    main                           shift and go to state 10

state 25

    (44) metodos -> funcion metodos .

    MAIN            reduce using rule 44 (metodos -> funcion metodos .)
    $end            reduce using rule 44 (metodos -> funcion metodos .)


state 26

    (46) funcion -> FUNCION VOID . funcion_1
    (50) funcion_1 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion

    ID              shift and go to state 39

    funcion_1                      shift and go to state 38

state 27

    (47) funcion -> FUNCION INT . funcion_2
    (51) funcion_2 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    ID              shift and go to state 41

    funcion_2                      shift and go to state 40

state 28

    (48) funcion -> FUNCION CHAR . funcion_2
    (51) funcion_2 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    ID              shift and go to state 41

    funcion_2                      shift and go to state 42

state 29

    (49) funcion -> FUNCION FLOAT . funcion_2
    (51) funcion_2 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    ID              shift and go to state 41

    funcion_2                      shift and go to state 43

state 30

    (17) var_2 -> var_2 type var1 . SEMICOLON agregarVar

    SEMICOLON       shift and go to state 44


state 31

    (19) var1 -> ID .
    (20) var1 -> ID . COMMA var1 agregarVar
    (21) var1 -> ID . arr
    (22) var1 -> ID . arr COMMA var1 agregarVar
    (23) var1 -> ID . mat COMMA var1 agregarVar
    (24) var1 -> ID . mat
    (25) var1 -> ID . mat especial
    (33) arr -> . LBRACKET CTEI RBRACKET arrQuad clearArreglo
    (34) arr -> . LBRACKET exp RBRACKET arrQuad clearArreglo
    (40) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (41) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (42) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (43) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 19 (var1 -> ID .)
    MUL             reduce using rule 19 (var1 -> ID .)
    DIV             reduce using rule 19 (var1 -> ID .)
    PLUS            reduce using rule 19 (var1 -> ID .)
    MINUS           reduce using rule 19 (var1 -> ID .)
    GT              reduce using rule 19 (var1 -> ID .)
    LT              reduce using rule 19 (var1 -> ID .)
    GTE             reduce using rule 19 (var1 -> ID .)
    LTE             reduce using rule 19 (var1 -> ID .)
    NE              reduce using rule 19 (var1 -> ID .)
    COMPARE         reduce using rule 19 (var1 -> ID .)
    AND             reduce using rule 19 (var1 -> ID .)
    RBRACKET        reduce using rule 19 (var1 -> ID .)
    OR              reduce using rule 19 (var1 -> ID .)
    RPAREN          reduce using rule 19 (var1 -> ID .)
    TO              reduce using rule 19 (var1 -> ID .)
    COMMA           shift and go to state 45
    LBRACKET        shift and go to state 48

  ! COMMA           [ reduce using rule 19 (var1 -> ID .) ]

    arr                            shift and go to state 46
    mat                            shift and go to state 47

state 32

    (26) var1 -> empty .

    SEMICOLON       reduce using rule 26 (var1 -> empty .)
    MUL             reduce using rule 26 (var1 -> empty .)
    DIV             reduce using rule 26 (var1 -> empty .)
    PLUS            reduce using rule 26 (var1 -> empty .)
    MINUS           reduce using rule 26 (var1 -> empty .)
    GT              reduce using rule 26 (var1 -> empty .)
    LT              reduce using rule 26 (var1 -> empty .)
    GTE             reduce using rule 26 (var1 -> empty .)
    LTE             reduce using rule 26 (var1 -> empty .)
    NE              reduce using rule 26 (var1 -> empty .)
    COMPARE         reduce using rule 26 (var1 -> empty .)
    AND             reduce using rule 26 (var1 -> empty .)
    RBRACKET        reduce using rule 26 (var1 -> empty .)
    OR              reduce using rule 26 (var1 -> empty .)
    RPAREN          reduce using rule 26 (var1 -> empty .)
    COMMA           reduce using rule 26 (var1 -> empty .)
    TO              reduce using rule 26 (var1 -> empty .)


state 33

    (10) type -> INT guardaTipoDeVariable .

    ID              reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    SEMICOLON       reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    RPAREN          reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    INT             reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    FLOAT           reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    CHAR            reduce using rule 10 (type -> INT guardaTipoDeVariable .)


state 34

    (11) type -> FLOAT guardaTipoDeVariable .

    ID              reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    SEMICOLON       reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    RPAREN          reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    INT             reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    FLOAT           reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    CHAR            reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)


state 35

    (12) type -> CHAR guardaTipoDeVariable .

    ID              reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    SEMICOLON       reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    RPAREN          reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    INT             reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    FLOAT           reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    CHAR            reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)


state 36

    (7) main -> MAIN guardaFuncion LPAREN param2 . RPAREN LCURLY var estatutos RCURLY END
    (81) param2 -> param2 . type param
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    RPAREN          shift and go to state 49
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    type                           shift and go to state 50

state 37

    (3) prog_1 -> var cuadruploMain metodos mainEnd prog_2 .

    $end            reduce using rule 3 (prog_1 -> var cuadruploMain metodos mainEnd prog_2 .)


state 38

    (46) funcion -> FUNCION VOID funcion_1 .

    FUNCION         reduce using rule 46 (funcion -> FUNCION VOID funcion_1 .)
    MAIN            reduce using rule 46 (funcion -> FUNCION VOID funcion_1 .)
    $end            reduce using rule 46 (funcion -> FUNCION VOID funcion_1 .)


state 39

    (50) funcion_1 -> ID . guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
    (52) guardaFuncion -> .

    LPAREN          reduce using rule 52 (guardaFuncion -> .)

    guardaFuncion                  shift and go to state 51

state 40

    (47) funcion -> FUNCION INT funcion_2 .

    FUNCION         reduce using rule 47 (funcion -> FUNCION INT funcion_2 .)
    MAIN            reduce using rule 47 (funcion -> FUNCION INT funcion_2 .)
    $end            reduce using rule 47 (funcion -> FUNCION INT funcion_2 .)


state 41

    (51) funcion_2 -> ID . guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (52) guardaFuncion -> .

    LPAREN          reduce using rule 52 (guardaFuncion -> .)

    guardaFuncion                  shift and go to state 52

state 42

    (48) funcion -> FUNCION CHAR funcion_2 .

    FUNCION         reduce using rule 48 (funcion -> FUNCION CHAR funcion_2 .)
    MAIN            reduce using rule 48 (funcion -> FUNCION CHAR funcion_2 .)
    $end            reduce using rule 48 (funcion -> FUNCION CHAR funcion_2 .)


state 43

    (49) funcion -> FUNCION FLOAT funcion_2 .

    FUNCION         reduce using rule 49 (funcion -> FUNCION FLOAT funcion_2 .)
    MAIN            reduce using rule 49 (funcion -> FUNCION FLOAT funcion_2 .)
    $end            reduce using rule 49 (funcion -> FUNCION FLOAT funcion_2 .)


state 44

    (17) var_2 -> var_2 type var1 SEMICOLON . agregarVar
    (28) agregarVar -> .

    INT             reduce using rule 28 (agregarVar -> .)
    FLOAT           reduce using rule 28 (agregarVar -> .)
    CHAR            reduce using rule 28 (agregarVar -> .)
    FUNCION         reduce using rule 28 (agregarVar -> .)
    MAIN            reduce using rule 28 (agregarVar -> .)
    $end            reduce using rule 28 (agregarVar -> .)
    ID              reduce using rule 28 (agregarVar -> .)
    READ            reduce using rule 28 (agregarVar -> .)
    PRINT           reduce using rule 28 (agregarVar -> .)
    FOR             reduce using rule 28 (agregarVar -> .)
    IF              reduce using rule 28 (agregarVar -> .)
    WHILE           reduce using rule 28 (agregarVar -> .)
    RCURLY          reduce using rule 28 (agregarVar -> .)
    RETURN          reduce using rule 28 (agregarVar -> .)

    agregarVar                     shift and go to state 53

state 45

    (20) var1 -> ID COMMA . var1 agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (27) empty -> .

    ID              shift and go to state 31
    SEMICOLON       reduce using rule 27 (empty -> .)
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    var1                           shift and go to state 54
    empty                          shift and go to state 32

state 46

    (21) var1 -> ID arr .
    (22) var1 -> ID arr . COMMA var1 agregarVar

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 21 (var1 -> ID arr .)
    MUL             reduce using rule 21 (var1 -> ID arr .)
    DIV             reduce using rule 21 (var1 -> ID arr .)
    PLUS            reduce using rule 21 (var1 -> ID arr .)
    MINUS           reduce using rule 21 (var1 -> ID arr .)
    GT              reduce using rule 21 (var1 -> ID arr .)
    LT              reduce using rule 21 (var1 -> ID arr .)
    GTE             reduce using rule 21 (var1 -> ID arr .)
    LTE             reduce using rule 21 (var1 -> ID arr .)
    NE              reduce using rule 21 (var1 -> ID arr .)
    COMPARE         reduce using rule 21 (var1 -> ID arr .)
    AND             reduce using rule 21 (var1 -> ID arr .)
    RBRACKET        reduce using rule 21 (var1 -> ID arr .)
    OR              reduce using rule 21 (var1 -> ID arr .)
    RPAREN          reduce using rule 21 (var1 -> ID arr .)
    TO              reduce using rule 21 (var1 -> ID arr .)
    COMMA           shift and go to state 55

  ! COMMA           [ reduce using rule 21 (var1 -> ID arr .) ]


state 47

    (23) var1 -> ID mat . COMMA var1 agregarVar
    (24) var1 -> ID mat .
    (25) var1 -> ID mat . especial
    (29) especial -> . TRANSPUESTA transpuestaNum
    (30) especial -> . INVERSA
    (31) especial -> . DETERMINANTE

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 56
    SEMICOLON       reduce using rule 24 (var1 -> ID mat .)
    MUL             reduce using rule 24 (var1 -> ID mat .)
    DIV             reduce using rule 24 (var1 -> ID mat .)
    PLUS            reduce using rule 24 (var1 -> ID mat .)
    MINUS           reduce using rule 24 (var1 -> ID mat .)
    GT              reduce using rule 24 (var1 -> ID mat .)
    LT              reduce using rule 24 (var1 -> ID mat .)
    GTE             reduce using rule 24 (var1 -> ID mat .)
    LTE             reduce using rule 24 (var1 -> ID mat .)
    NE              reduce using rule 24 (var1 -> ID mat .)
    COMPARE         reduce using rule 24 (var1 -> ID mat .)
    AND             reduce using rule 24 (var1 -> ID mat .)
    RBRACKET        reduce using rule 24 (var1 -> ID mat .)
    OR              reduce using rule 24 (var1 -> ID mat .)
    RPAREN          reduce using rule 24 (var1 -> ID mat .)
    TO              reduce using rule 24 (var1 -> ID mat .)
    TRANSPUESTA     shift and go to state 58
    INVERSA         shift and go to state 59
    DETERMINANTE    shift and go to state 60

  ! COMMA           [ reduce using rule 24 (var1 -> ID mat .) ]

    especial                       shift and go to state 57

state 48

    (33) arr -> LBRACKET . CTEI RBRACKET arrQuad clearArreglo
    (34) arr -> LBRACKET . exp RBRACKET arrQuad clearArreglo
    (40) mat -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET
    (41) mat -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (42) mat -> LBRACKET . exp RBRACKET LBRACKET CTEI RBRACKET
    (43) mat -> LBRACKET . CTEI RBRACKET LBRACKET exp RBRACKET
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 61
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 62
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 49

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN . LCURLY var estatutos RCURLY END

    LCURLY          shift and go to state 75


state 50

    (81) param2 -> param2 type . param
    (72) param -> . ID agregarParametro
    (73) param -> . ID COMMA param agregarParametro
    (74) param -> . ID arr
    (75) param -> . ID arr COMMA param
    (76) param -> . ID mat COMMA param
    (77) param -> . ID mat
    (78) param -> . ID mat especial
    (79) param -> .

    ID              shift and go to state 77
    RPAREN          reduce using rule 79 (param -> .)
    INT             reduce using rule 79 (param -> .)
    FLOAT           reduce using rule 79 (param -> .)
    CHAR            reduce using rule 79 (param -> .)

    param                          shift and go to state 76

state 51

    (50) funcion_1 -> ID guardaFuncion . LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion

    LPAREN          shift and go to state 78


state 52

    (51) funcion_2 -> ID guardaFuncion . LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    LPAREN          shift and go to state 79


state 53

    (17) var_2 -> var_2 type var1 SEMICOLON agregarVar .

    INT             reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    FLOAT           reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    CHAR            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    FUNCION         reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    MAIN            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    $end            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    ID              reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    READ            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    PRINT           reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    FOR             reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    IF              reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    WHILE           reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    RCURLY          reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    RETURN          reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)


state 54

    (20) var1 -> ID COMMA var1 . agregarVar
    (28) agregarVar -> .

    SEMICOLON       reduce using rule 28 (agregarVar -> .)
    MUL             reduce using rule 28 (agregarVar -> .)
    DIV             reduce using rule 28 (agregarVar -> .)
    PLUS            reduce using rule 28 (agregarVar -> .)
    MINUS           reduce using rule 28 (agregarVar -> .)
    GT              reduce using rule 28 (agregarVar -> .)
    LT              reduce using rule 28 (agregarVar -> .)
    GTE             reduce using rule 28 (agregarVar -> .)
    LTE             reduce using rule 28 (agregarVar -> .)
    NE              reduce using rule 28 (agregarVar -> .)
    COMPARE         reduce using rule 28 (agregarVar -> .)
    AND             reduce using rule 28 (agregarVar -> .)
    RBRACKET        reduce using rule 28 (agregarVar -> .)
    OR              reduce using rule 28 (agregarVar -> .)
    RPAREN          reduce using rule 28 (agregarVar -> .)
    COMMA           reduce using rule 28 (agregarVar -> .)
    TO              reduce using rule 28 (agregarVar -> .)

    agregarVar                     shift and go to state 80

state 55

    (22) var1 -> ID arr COMMA . var1 agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (27) empty -> .

    ID              shift and go to state 31
    SEMICOLON       reduce using rule 27 (empty -> .)
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    var1                           shift and go to state 81
    empty                          shift and go to state 32

state 56

    (23) var1 -> ID mat COMMA . var1 agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (27) empty -> .

    ID              shift and go to state 31
    SEMICOLON       reduce using rule 27 (empty -> .)
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    var1                           shift and go to state 82
    empty                          shift and go to state 32

state 57

    (25) var1 -> ID mat especial .

    SEMICOLON       reduce using rule 25 (var1 -> ID mat especial .)
    MUL             reduce using rule 25 (var1 -> ID mat especial .)
    DIV             reduce using rule 25 (var1 -> ID mat especial .)
    PLUS            reduce using rule 25 (var1 -> ID mat especial .)
    MINUS           reduce using rule 25 (var1 -> ID mat especial .)
    GT              reduce using rule 25 (var1 -> ID mat especial .)
    LT              reduce using rule 25 (var1 -> ID mat especial .)
    GTE             reduce using rule 25 (var1 -> ID mat especial .)
    LTE             reduce using rule 25 (var1 -> ID mat especial .)
    NE              reduce using rule 25 (var1 -> ID mat especial .)
    COMPARE         reduce using rule 25 (var1 -> ID mat especial .)
    AND             reduce using rule 25 (var1 -> ID mat especial .)
    RBRACKET        reduce using rule 25 (var1 -> ID mat especial .)
    OR              reduce using rule 25 (var1 -> ID mat especial .)
    RPAREN          reduce using rule 25 (var1 -> ID mat especial .)
    COMMA           reduce using rule 25 (var1 -> ID mat especial .)
    TO              reduce using rule 25 (var1 -> ID mat especial .)


state 58

    (29) especial -> TRANSPUESTA . transpuestaNum
    (32) transpuestaNum -> .

    SEMICOLON       reduce using rule 32 (transpuestaNum -> .)
    MUL             reduce using rule 32 (transpuestaNum -> .)
    DIV             reduce using rule 32 (transpuestaNum -> .)
    PLUS            reduce using rule 32 (transpuestaNum -> .)
    MINUS           reduce using rule 32 (transpuestaNum -> .)
    GT              reduce using rule 32 (transpuestaNum -> .)
    LT              reduce using rule 32 (transpuestaNum -> .)
    GTE             reduce using rule 32 (transpuestaNum -> .)
    LTE             reduce using rule 32 (transpuestaNum -> .)
    NE              reduce using rule 32 (transpuestaNum -> .)
    COMPARE         reduce using rule 32 (transpuestaNum -> .)
    AND             reduce using rule 32 (transpuestaNum -> .)
    RBRACKET        reduce using rule 32 (transpuestaNum -> .)
    OR              reduce using rule 32 (transpuestaNum -> .)
    RPAREN          reduce using rule 32 (transpuestaNum -> .)
    COMMA           reduce using rule 32 (transpuestaNum -> .)
    TO              reduce using rule 32 (transpuestaNum -> .)
    INT             reduce using rule 32 (transpuestaNum -> .)
    FLOAT           reduce using rule 32 (transpuestaNum -> .)
    CHAR            reduce using rule 32 (transpuestaNum -> .)

    transpuestaNum                 shift and go to state 83

state 59

    (30) especial -> INVERSA .

    SEMICOLON       reduce using rule 30 (especial -> INVERSA .)
    MUL             reduce using rule 30 (especial -> INVERSA .)
    DIV             reduce using rule 30 (especial -> INVERSA .)
    PLUS            reduce using rule 30 (especial -> INVERSA .)
    MINUS           reduce using rule 30 (especial -> INVERSA .)
    GT              reduce using rule 30 (especial -> INVERSA .)
    LT              reduce using rule 30 (especial -> INVERSA .)
    GTE             reduce using rule 30 (especial -> INVERSA .)
    LTE             reduce using rule 30 (especial -> INVERSA .)
    NE              reduce using rule 30 (especial -> INVERSA .)
    COMPARE         reduce using rule 30 (especial -> INVERSA .)
    AND             reduce using rule 30 (especial -> INVERSA .)
    RBRACKET        reduce using rule 30 (especial -> INVERSA .)
    OR              reduce using rule 30 (especial -> INVERSA .)
    RPAREN          reduce using rule 30 (especial -> INVERSA .)
    COMMA           reduce using rule 30 (especial -> INVERSA .)
    TO              reduce using rule 30 (especial -> INVERSA .)
    INT             reduce using rule 30 (especial -> INVERSA .)
    FLOAT           reduce using rule 30 (especial -> INVERSA .)
    CHAR            reduce using rule 30 (especial -> INVERSA .)


state 60

    (31) especial -> DETERMINANTE .

    SEMICOLON       reduce using rule 31 (especial -> DETERMINANTE .)
    MUL             reduce using rule 31 (especial -> DETERMINANTE .)
    DIV             reduce using rule 31 (especial -> DETERMINANTE .)
    PLUS            reduce using rule 31 (especial -> DETERMINANTE .)
    MINUS           reduce using rule 31 (especial -> DETERMINANTE .)
    GT              reduce using rule 31 (especial -> DETERMINANTE .)
    LT              reduce using rule 31 (especial -> DETERMINANTE .)
    GTE             reduce using rule 31 (especial -> DETERMINANTE .)
    LTE             reduce using rule 31 (especial -> DETERMINANTE .)
    NE              reduce using rule 31 (especial -> DETERMINANTE .)
    COMPARE         reduce using rule 31 (especial -> DETERMINANTE .)
    AND             reduce using rule 31 (especial -> DETERMINANTE .)
    RBRACKET        reduce using rule 31 (especial -> DETERMINANTE .)
    OR              reduce using rule 31 (especial -> DETERMINANTE .)
    RPAREN          reduce using rule 31 (especial -> DETERMINANTE .)
    COMMA           reduce using rule 31 (especial -> DETERMINANTE .)
    TO              reduce using rule 31 (especial -> DETERMINANTE .)
    INT             reduce using rule 31 (especial -> DETERMINANTE .)
    FLOAT           reduce using rule 31 (especial -> DETERMINANTE .)
    CHAR            reduce using rule 31 (especial -> DETERMINANTE .)


state 61

    (33) arr -> LBRACKET CTEI . RBRACKET arrQuad clearArreglo
    (40) mat -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET
    (43) mat -> LBRACKET CTEI . RBRACKET LBRACKET exp RBRACKET
    (141) pexp -> CTEI . guardaCTE
    (100) guardaCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 84
    MUL             reduce using rule 100 (guardaCTE -> .)
    DIV             reduce using rule 100 (guardaCTE -> .)
    PLUS            reduce using rule 100 (guardaCTE -> .)
    MINUS           reduce using rule 100 (guardaCTE -> .)
    GT              reduce using rule 100 (guardaCTE -> .)
    LT              reduce using rule 100 (guardaCTE -> .)
    GTE             reduce using rule 100 (guardaCTE -> .)
    LTE             reduce using rule 100 (guardaCTE -> .)
    NE              reduce using rule 100 (guardaCTE -> .)
    COMPARE         reduce using rule 100 (guardaCTE -> .)
    AND             reduce using rule 100 (guardaCTE -> .)
    OR              reduce using rule 100 (guardaCTE -> .)

  ! RBRACKET        [ reduce using rule 100 (guardaCTE -> .) ]

    guardaCTE                      shift and go to state 85

state 62

    (34) arr -> LBRACKET exp . RBRACKET arrQuad clearArreglo
    (41) mat -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET
    (42) mat -> LBRACKET exp . RBRACKET LBRACKET CTEI RBRACKET
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr

    RBRACKET        shift and go to state 86
    OR              shift and go to state 87


state 63

    (116) exp -> nexp .
    (120) nexp -> nexp . AND addOperadorName compexp1 cuadruploAnd

    RBRACKET        reduce using rule 116 (exp -> nexp .)
    OR              reduce using rule 116 (exp -> nexp .)
    RPAREN          reduce using rule 116 (exp -> nexp .)
    COMMA           reduce using rule 116 (exp -> nexp .)
    SEMICOLON       reduce using rule 116 (exp -> nexp .)
    TO              reduce using rule 116 (exp -> nexp .)
    AND             shift and go to state 88


state 64

    (119) nexp -> compexp1 .
    (124) compexp1 -> compexp1 . GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> compexp1 . LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> compexp1 . GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> compexp1 . LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> compexp1 . NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> compexp1 . COMPARE addOperadorName sumexp cuadruploComparacion

    AND             reduce using rule 119 (nexp -> compexp1 .)
    RBRACKET        reduce using rule 119 (nexp -> compexp1 .)
    OR              reduce using rule 119 (nexp -> compexp1 .)
    RPAREN          reduce using rule 119 (nexp -> compexp1 .)
    COMMA           reduce using rule 119 (nexp -> compexp1 .)
    SEMICOLON       reduce using rule 119 (nexp -> compexp1 .)
    TO              reduce using rule 119 (nexp -> compexp1 .)
    GT              shift and go to state 89
    LT              shift and go to state 90
    GTE             shift and go to state 91
    LTE             shift and go to state 92
    NE              shift and go to state 93
    COMPARE         shift and go to state 94


state 65

    (130) compexp1 -> sumexp .
    (133) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma

    GT              reduce using rule 130 (compexp1 -> sumexp .)
    LT              reduce using rule 130 (compexp1 -> sumexp .)
    GTE             reduce using rule 130 (compexp1 -> sumexp .)
    LTE             reduce using rule 130 (compexp1 -> sumexp .)
    NE              reduce using rule 130 (compexp1 -> sumexp .)
    COMPARE         reduce using rule 130 (compexp1 -> sumexp .)
    AND             reduce using rule 130 (compexp1 -> sumexp .)
    RBRACKET        reduce using rule 130 (compexp1 -> sumexp .)
    OR              reduce using rule 130 (compexp1 -> sumexp .)
    RPAREN          reduce using rule 130 (compexp1 -> sumexp .)
    COMMA           reduce using rule 130 (compexp1 -> sumexp .)
    SEMICOLON       reduce using rule 130 (compexp1 -> sumexp .)
    TO              reduce using rule 130 (compexp1 -> sumexp .)
    PLUS            shift and go to state 95
    MINUS           shift and go to state 96


state 66

    (132) sumexp -> mulexp .
    (137) mulexp -> mulexp . MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> mulexp . DIV addOperadorName pexp cuadruploMultiplicacion

    PLUS            reduce using rule 132 (sumexp -> mulexp .)
    MINUS           reduce using rule 132 (sumexp -> mulexp .)
    GT              reduce using rule 132 (sumexp -> mulexp .)
    LT              reduce using rule 132 (sumexp -> mulexp .)
    GTE             reduce using rule 132 (sumexp -> mulexp .)
    LTE             reduce using rule 132 (sumexp -> mulexp .)
    NE              reduce using rule 132 (sumexp -> mulexp .)
    COMPARE         reduce using rule 132 (sumexp -> mulexp .)
    AND             reduce using rule 132 (sumexp -> mulexp .)
    RBRACKET        reduce using rule 132 (sumexp -> mulexp .)
    OR              reduce using rule 132 (sumexp -> mulexp .)
    RPAREN          reduce using rule 132 (sumexp -> mulexp .)
    COMMA           reduce using rule 132 (sumexp -> mulexp .)
    SEMICOLON       reduce using rule 132 (sumexp -> mulexp .)
    TO              reduce using rule 132 (sumexp -> mulexp .)
    MUL             shift and go to state 97
    DIV             shift and go to state 98


state 67

    (136) mulexp -> pexp .

    MUL             reduce using rule 136 (mulexp -> pexp .)
    DIV             reduce using rule 136 (mulexp -> pexp .)
    PLUS            reduce using rule 136 (mulexp -> pexp .)
    MINUS           reduce using rule 136 (mulexp -> pexp .)
    GT              reduce using rule 136 (mulexp -> pexp .)
    LT              reduce using rule 136 (mulexp -> pexp .)
    GTE             reduce using rule 136 (mulexp -> pexp .)
    LTE             reduce using rule 136 (mulexp -> pexp .)
    NE              reduce using rule 136 (mulexp -> pexp .)
    COMPARE         reduce using rule 136 (mulexp -> pexp .)
    AND             reduce using rule 136 (mulexp -> pexp .)
    RBRACKET        reduce using rule 136 (mulexp -> pexp .)
    OR              reduce using rule 136 (mulexp -> pexp .)
    RPAREN          reduce using rule 136 (mulexp -> pexp .)
    COMMA           reduce using rule 136 (mulexp -> pexp .)
    SEMICOLON       reduce using rule 136 (mulexp -> pexp .)
    TO              reduce using rule 136 (mulexp -> pexp .)


state 68

    (140) pexp -> var1 . guardaID
    (147) guardaID -> .

    MUL             reduce using rule 147 (guardaID -> .)
    DIV             reduce using rule 147 (guardaID -> .)
    PLUS            reduce using rule 147 (guardaID -> .)
    MINUS           reduce using rule 147 (guardaID -> .)
    GT              reduce using rule 147 (guardaID -> .)
    LT              reduce using rule 147 (guardaID -> .)
    GTE             reduce using rule 147 (guardaID -> .)
    LTE             reduce using rule 147 (guardaID -> .)
    NE              reduce using rule 147 (guardaID -> .)
    COMPARE         reduce using rule 147 (guardaID -> .)
    AND             reduce using rule 147 (guardaID -> .)
    RBRACKET        reduce using rule 147 (guardaID -> .)
    OR              reduce using rule 147 (guardaID -> .)
    RPAREN          reduce using rule 147 (guardaID -> .)
    COMMA           reduce using rule 147 (guardaID -> .)
    SEMICOLON       reduce using rule 147 (guardaID -> .)
    TO              reduce using rule 147 (guardaID -> .)

    guardaID                       shift and go to state 99

state 69

    (142) pexp -> CTEF . guardaCTE
    (100) guardaCTE -> .

    MUL             reduce using rule 100 (guardaCTE -> .)
    DIV             reduce using rule 100 (guardaCTE -> .)
    PLUS            reduce using rule 100 (guardaCTE -> .)
    MINUS           reduce using rule 100 (guardaCTE -> .)
    GT              reduce using rule 100 (guardaCTE -> .)
    LT              reduce using rule 100 (guardaCTE -> .)
    GTE             reduce using rule 100 (guardaCTE -> .)
    LTE             reduce using rule 100 (guardaCTE -> .)
    NE              reduce using rule 100 (guardaCTE -> .)
    COMPARE         reduce using rule 100 (guardaCTE -> .)
    AND             reduce using rule 100 (guardaCTE -> .)
    RBRACKET        reduce using rule 100 (guardaCTE -> .)
    OR              reduce using rule 100 (guardaCTE -> .)
    RPAREN          reduce using rule 100 (guardaCTE -> .)
    COMMA           reduce using rule 100 (guardaCTE -> .)
    SEMICOLON       reduce using rule 100 (guardaCTE -> .)
    TO              reduce using rule 100 (guardaCTE -> .)

    guardaCTE                      shift and go to state 100

state 70

    (143) pexp -> CTEC . guardaCTE
    (100) guardaCTE -> .

    MUL             reduce using rule 100 (guardaCTE -> .)
    DIV             reduce using rule 100 (guardaCTE -> .)
    PLUS            reduce using rule 100 (guardaCTE -> .)
    MINUS           reduce using rule 100 (guardaCTE -> .)
    GT              reduce using rule 100 (guardaCTE -> .)
    LT              reduce using rule 100 (guardaCTE -> .)
    GTE             reduce using rule 100 (guardaCTE -> .)
    LTE             reduce using rule 100 (guardaCTE -> .)
    NE              reduce using rule 100 (guardaCTE -> .)
    COMPARE         reduce using rule 100 (guardaCTE -> .)
    AND             reduce using rule 100 (guardaCTE -> .)
    RBRACKET        reduce using rule 100 (guardaCTE -> .)
    OR              reduce using rule 100 (guardaCTE -> .)
    RPAREN          reduce using rule 100 (guardaCTE -> .)
    COMMA           reduce using rule 100 (guardaCTE -> .)
    SEMICOLON       reduce using rule 100 (guardaCTE -> .)
    TO              reduce using rule 100 (guardaCTE -> .)

    guardaCTE                      shift and go to state 101

state 71

    (144) pexp -> CTESTRING . guardaCTE
    (100) guardaCTE -> .

    MUL             reduce using rule 100 (guardaCTE -> .)
    DIV             reduce using rule 100 (guardaCTE -> .)
    PLUS            reduce using rule 100 (guardaCTE -> .)
    MINUS           reduce using rule 100 (guardaCTE -> .)
    GT              reduce using rule 100 (guardaCTE -> .)
    LT              reduce using rule 100 (guardaCTE -> .)
    GTE             reduce using rule 100 (guardaCTE -> .)
    LTE             reduce using rule 100 (guardaCTE -> .)
    NE              reduce using rule 100 (guardaCTE -> .)
    COMPARE         reduce using rule 100 (guardaCTE -> .)
    AND             reduce using rule 100 (guardaCTE -> .)
    RBRACKET        reduce using rule 100 (guardaCTE -> .)
    OR              reduce using rule 100 (guardaCTE -> .)
    RPAREN          reduce using rule 100 (guardaCTE -> .)
    COMMA           reduce using rule 100 (guardaCTE -> .)
    SEMICOLON       reduce using rule 100 (guardaCTE -> .)
    TO              reduce using rule 100 (guardaCTE -> .)

    guardaCTE                      shift and go to state 102

state 72

    (145) pexp -> llamada .

    MUL             reduce using rule 145 (pexp -> llamada .)
    DIV             reduce using rule 145 (pexp -> llamada .)
    PLUS            reduce using rule 145 (pexp -> llamada .)
    MINUS           reduce using rule 145 (pexp -> llamada .)
    GT              reduce using rule 145 (pexp -> llamada .)
    LT              reduce using rule 145 (pexp -> llamada .)
    GTE             reduce using rule 145 (pexp -> llamada .)
    LTE             reduce using rule 145 (pexp -> llamada .)
    NE              reduce using rule 145 (pexp -> llamada .)
    COMPARE         reduce using rule 145 (pexp -> llamada .)
    AND             reduce using rule 145 (pexp -> llamada .)
    RBRACKET        reduce using rule 145 (pexp -> llamada .)
    OR              reduce using rule 145 (pexp -> llamada .)
    RPAREN          reduce using rule 145 (pexp -> llamada .)
    COMMA           reduce using rule 145 (pexp -> llamada .)
    SEMICOLON       reduce using rule 145 (pexp -> llamada .)
    TO              reduce using rule 145 (pexp -> llamada .)


state 73

    (146) pexp -> LPAREN . exp RPAREN
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 103
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 74

    (19) var1 -> ID .
    (20) var1 -> ID . COMMA var1 agregarVar
    (21) var1 -> ID . arr
    (22) var1 -> ID . arr COMMA var1 agregarVar
    (23) var1 -> ID . mat COMMA var1 agregarVar
    (24) var1 -> ID . mat
    (25) var1 -> ID . mat especial
    (83) llamada -> ID . llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (33) arr -> . LBRACKET CTEI RBRACKET arrQuad clearArreglo
    (34) arr -> . LBRACKET exp RBRACKET arrQuad clearArreglo
    (40) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (41) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (42) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (43) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET
    (84) llamadaEra -> .

  ! shift/reduce conflict for COMMA resolved as shift
    MUL             reduce using rule 19 (var1 -> ID .)
    DIV             reduce using rule 19 (var1 -> ID .)
    PLUS            reduce using rule 19 (var1 -> ID .)
    MINUS           reduce using rule 19 (var1 -> ID .)
    GT              reduce using rule 19 (var1 -> ID .)
    LT              reduce using rule 19 (var1 -> ID .)
    GTE             reduce using rule 19 (var1 -> ID .)
    LTE             reduce using rule 19 (var1 -> ID .)
    NE              reduce using rule 19 (var1 -> ID .)
    COMPARE         reduce using rule 19 (var1 -> ID .)
    AND             reduce using rule 19 (var1 -> ID .)
    RBRACKET        reduce using rule 19 (var1 -> ID .)
    OR              reduce using rule 19 (var1 -> ID .)
    RPAREN          reduce using rule 19 (var1 -> ID .)
    SEMICOLON       reduce using rule 19 (var1 -> ID .)
    TO              reduce using rule 19 (var1 -> ID .)
    COMMA           shift and go to state 45
    LBRACKET        shift and go to state 48
    LPAREN          reduce using rule 84 (llamadaEra -> .)

  ! COMMA           [ reduce using rule 19 (var1 -> ID .) ]

    arr                            shift and go to state 46
    mat                            shift and go to state 47
    llamadaEra                     shift and go to state 105

state 75

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY . var estatutos RCURLY END
    (14) var -> . vars
    (15) var -> .
    (16) vars -> . VAR var_2

    ID              reduce using rule 15 (var -> .)
    READ            reduce using rule 15 (var -> .)
    PRINT           reduce using rule 15 (var -> .)
    FOR             reduce using rule 15 (var -> .)
    IF              reduce using rule 15 (var -> .)
    WHILE           reduce using rule 15 (var -> .)
    RCURLY          reduce using rule 15 (var -> .)
    VAR             shift and go to state 11

    var                            shift and go to state 106
    vars                           shift and go to state 9

state 76

    (81) param2 -> param2 type param .

    RPAREN          reduce using rule 81 (param2 -> param2 type param .)
    INT             reduce using rule 81 (param2 -> param2 type param .)
    FLOAT           reduce using rule 81 (param2 -> param2 type param .)
    CHAR            reduce using rule 81 (param2 -> param2 type param .)


state 77

    (72) param -> ID . agregarParametro
    (73) param -> ID . COMMA param agregarParametro
    (74) param -> ID . arr
    (75) param -> ID . arr COMMA param
    (76) param -> ID . mat COMMA param
    (77) param -> ID . mat
    (78) param -> ID . mat especial
    (80) agregarParametro -> .
    (33) arr -> . LBRACKET CTEI RBRACKET arrQuad clearArreglo
    (34) arr -> . LBRACKET exp RBRACKET arrQuad clearArreglo
    (40) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (41) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (42) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (43) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    COMMA           shift and go to state 108
    RPAREN          reduce using rule 80 (agregarParametro -> .)
    INT             reduce using rule 80 (agregarParametro -> .)
    FLOAT           reduce using rule 80 (agregarParametro -> .)
    CHAR            reduce using rule 80 (agregarParametro -> .)
    LBRACKET        shift and go to state 48

    agregarParametro               shift and go to state 107
    arr                            shift and go to state 109
    mat                            shift and go to state 110

state 78

    (50) funcion_1 -> ID guardaFuncion LPAREN . param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
    (81) param2 -> . param2 type param
    (82) param2 -> .

    RPAREN          reduce using rule 82 (param2 -> .)
    INT             reduce using rule 82 (param2 -> .)
    FLOAT           reduce using rule 82 (param2 -> .)
    CHAR            reduce using rule 82 (param2 -> .)

    param2                         shift and go to state 111

state 79

    (51) funcion_2 -> ID guardaFuncion LPAREN . param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (81) param2 -> . param2 type param
    (82) param2 -> .

    RPAREN          reduce using rule 82 (param2 -> .)
    INT             reduce using rule 82 (param2 -> .)
    FLOAT           reduce using rule 82 (param2 -> .)
    CHAR            reduce using rule 82 (param2 -> .)

    param2                         shift and go to state 112

state 80

    (20) var1 -> ID COMMA var1 agregarVar .

    SEMICOLON       reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    MUL             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    DIV             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    PLUS            reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    MINUS           reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    GT              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    LT              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    GTE             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    LTE             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    NE              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    COMPARE         reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    AND             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    RBRACKET        reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    OR              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    RPAREN          reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    COMMA           reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    TO              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)


state 81

    (22) var1 -> ID arr COMMA var1 . agregarVar
    (28) agregarVar -> .

    SEMICOLON       reduce using rule 28 (agregarVar -> .)
    MUL             reduce using rule 28 (agregarVar -> .)
    DIV             reduce using rule 28 (agregarVar -> .)
    PLUS            reduce using rule 28 (agregarVar -> .)
    MINUS           reduce using rule 28 (agregarVar -> .)
    GT              reduce using rule 28 (agregarVar -> .)
    LT              reduce using rule 28 (agregarVar -> .)
    GTE             reduce using rule 28 (agregarVar -> .)
    LTE             reduce using rule 28 (agregarVar -> .)
    NE              reduce using rule 28 (agregarVar -> .)
    COMPARE         reduce using rule 28 (agregarVar -> .)
    AND             reduce using rule 28 (agregarVar -> .)
    RBRACKET        reduce using rule 28 (agregarVar -> .)
    OR              reduce using rule 28 (agregarVar -> .)
    RPAREN          reduce using rule 28 (agregarVar -> .)
    COMMA           reduce using rule 28 (agregarVar -> .)
    TO              reduce using rule 28 (agregarVar -> .)

    agregarVar                     shift and go to state 113

state 82

    (23) var1 -> ID mat COMMA var1 . agregarVar
    (28) agregarVar -> .

    SEMICOLON       reduce using rule 28 (agregarVar -> .)
    MUL             reduce using rule 28 (agregarVar -> .)
    DIV             reduce using rule 28 (agregarVar -> .)
    PLUS            reduce using rule 28 (agregarVar -> .)
    MINUS           reduce using rule 28 (agregarVar -> .)
    GT              reduce using rule 28 (agregarVar -> .)
    LT              reduce using rule 28 (agregarVar -> .)
    GTE             reduce using rule 28 (agregarVar -> .)
    LTE             reduce using rule 28 (agregarVar -> .)
    NE              reduce using rule 28 (agregarVar -> .)
    COMPARE         reduce using rule 28 (agregarVar -> .)
    AND             reduce using rule 28 (agregarVar -> .)
    RBRACKET        reduce using rule 28 (agregarVar -> .)
    OR              reduce using rule 28 (agregarVar -> .)
    RPAREN          reduce using rule 28 (agregarVar -> .)
    COMMA           reduce using rule 28 (agregarVar -> .)
    TO              reduce using rule 28 (agregarVar -> .)

    agregarVar                     shift and go to state 114

state 83

    (29) especial -> TRANSPUESTA transpuestaNum .

    SEMICOLON       reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    MUL             reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    DIV             reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    PLUS            reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    MINUS           reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    GT              reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    LT              reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    GTE             reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    LTE             reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    NE              reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    COMPARE         reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    AND             reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    RBRACKET        reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    OR              reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    RPAREN          reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    COMMA           reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    TO              reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    INT             reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    FLOAT           reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)
    CHAR            reduce using rule 29 (especial -> TRANSPUESTA transpuestaNum .)


state 84

    (33) arr -> LBRACKET CTEI RBRACKET . arrQuad clearArreglo
    (40) mat -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET
    (43) mat -> LBRACKET CTEI RBRACKET . LBRACKET exp RBRACKET
    (36) arrQuad -> .

    LBRACKET        shift and go to state 115
    COMMA           reduce using rule 36 (arrQuad -> .)
    SEMICOLON       reduce using rule 36 (arrQuad -> .)
    MUL             reduce using rule 36 (arrQuad -> .)
    DIV             reduce using rule 36 (arrQuad -> .)
    PLUS            reduce using rule 36 (arrQuad -> .)
    MINUS           reduce using rule 36 (arrQuad -> .)
    GT              reduce using rule 36 (arrQuad -> .)
    LT              reduce using rule 36 (arrQuad -> .)
    GTE             reduce using rule 36 (arrQuad -> .)
    LTE             reduce using rule 36 (arrQuad -> .)
    NE              reduce using rule 36 (arrQuad -> .)
    COMPARE         reduce using rule 36 (arrQuad -> .)
    AND             reduce using rule 36 (arrQuad -> .)
    RBRACKET        reduce using rule 36 (arrQuad -> .)
    OR              reduce using rule 36 (arrQuad -> .)
    RPAREN          reduce using rule 36 (arrQuad -> .)
    TO              reduce using rule 36 (arrQuad -> .)
    INT             reduce using rule 36 (arrQuad -> .)
    FLOAT           reduce using rule 36 (arrQuad -> .)
    CHAR            reduce using rule 36 (arrQuad -> .)
    EQUALS          reduce using rule 36 (arrQuad -> .)

    arrQuad                        shift and go to state 116

state 85

    (141) pexp -> CTEI guardaCTE .

    MUL             reduce using rule 141 (pexp -> CTEI guardaCTE .)
    DIV             reduce using rule 141 (pexp -> CTEI guardaCTE .)
    PLUS            reduce using rule 141 (pexp -> CTEI guardaCTE .)
    MINUS           reduce using rule 141 (pexp -> CTEI guardaCTE .)
    GT              reduce using rule 141 (pexp -> CTEI guardaCTE .)
    LT              reduce using rule 141 (pexp -> CTEI guardaCTE .)
    GTE             reduce using rule 141 (pexp -> CTEI guardaCTE .)
    LTE             reduce using rule 141 (pexp -> CTEI guardaCTE .)
    NE              reduce using rule 141 (pexp -> CTEI guardaCTE .)
    COMPARE         reduce using rule 141 (pexp -> CTEI guardaCTE .)
    AND             reduce using rule 141 (pexp -> CTEI guardaCTE .)
    RBRACKET        reduce using rule 141 (pexp -> CTEI guardaCTE .)
    OR              reduce using rule 141 (pexp -> CTEI guardaCTE .)
    RPAREN          reduce using rule 141 (pexp -> CTEI guardaCTE .)
    COMMA           reduce using rule 141 (pexp -> CTEI guardaCTE .)
    SEMICOLON       reduce using rule 141 (pexp -> CTEI guardaCTE .)
    TO              reduce using rule 141 (pexp -> CTEI guardaCTE .)


state 86

    (34) arr -> LBRACKET exp RBRACKET . arrQuad clearArreglo
    (41) mat -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET
    (42) mat -> LBRACKET exp RBRACKET . LBRACKET CTEI RBRACKET
    (36) arrQuad -> .

    LBRACKET        shift and go to state 117
    COMMA           reduce using rule 36 (arrQuad -> .)
    SEMICOLON       reduce using rule 36 (arrQuad -> .)
    MUL             reduce using rule 36 (arrQuad -> .)
    DIV             reduce using rule 36 (arrQuad -> .)
    PLUS            reduce using rule 36 (arrQuad -> .)
    MINUS           reduce using rule 36 (arrQuad -> .)
    GT              reduce using rule 36 (arrQuad -> .)
    LT              reduce using rule 36 (arrQuad -> .)
    GTE             reduce using rule 36 (arrQuad -> .)
    LTE             reduce using rule 36 (arrQuad -> .)
    NE              reduce using rule 36 (arrQuad -> .)
    COMPARE         reduce using rule 36 (arrQuad -> .)
    AND             reduce using rule 36 (arrQuad -> .)
    RBRACKET        reduce using rule 36 (arrQuad -> .)
    OR              reduce using rule 36 (arrQuad -> .)
    RPAREN          reduce using rule 36 (arrQuad -> .)
    TO              reduce using rule 36 (arrQuad -> .)
    INT             reduce using rule 36 (arrQuad -> .)
    FLOAT           reduce using rule 36 (arrQuad -> .)
    CHAR            reduce using rule 36 (arrQuad -> .)
    EQUALS          reduce using rule 36 (arrQuad -> .)

    arrQuad                        shift and go to state 118

state 87

    (117) exp -> exp OR . addOperadorName nexp cuadruploOr
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 119

state 88

    (120) nexp -> nexp AND . addOperadorName compexp1 cuadruploAnd
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 120

state 89

    (124) compexp1 -> compexp1 GT . addOperadorName sumexp cuadruploComparacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 121

state 90

    (125) compexp1 -> compexp1 LT . addOperadorName sumexp cuadruploComparacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 122

state 91

    (126) compexp1 -> compexp1 GTE . addOperadorName sumexp cuadruploComparacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 123

state 92

    (127) compexp1 -> compexp1 LTE . addOperadorName sumexp cuadruploComparacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 124

state 93

    (128) compexp1 -> compexp1 NE . addOperadorName sumexp cuadruploComparacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 125

state 94

    (129) compexp1 -> compexp1 COMPARE . addOperadorName sumexp cuadruploComparacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 126

state 95

    (133) sumexp -> sumexp PLUS . addOperadorName mulexp cuadruploSuma
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 127

state 96

    (134) sumexp -> sumexp MINUS . addOperadorName mulexp cuadruploSuma
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 128

state 97

    (137) mulexp -> mulexp MUL . addOperadorName pexp cuadruploMultiplicacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 129

state 98

    (138) mulexp -> mulexp DIV . addOperadorName pexp cuadruploMultiplicacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    RBRACKET        reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    RPAREN          reduce using rule 70 (addOperadorName -> .)
    COMMA           reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 130

state 99

    (140) pexp -> var1 guardaID .

    MUL             reduce using rule 140 (pexp -> var1 guardaID .)
    DIV             reduce using rule 140 (pexp -> var1 guardaID .)
    PLUS            reduce using rule 140 (pexp -> var1 guardaID .)
    MINUS           reduce using rule 140 (pexp -> var1 guardaID .)
    GT              reduce using rule 140 (pexp -> var1 guardaID .)
    LT              reduce using rule 140 (pexp -> var1 guardaID .)
    GTE             reduce using rule 140 (pexp -> var1 guardaID .)
    LTE             reduce using rule 140 (pexp -> var1 guardaID .)
    NE              reduce using rule 140 (pexp -> var1 guardaID .)
    COMPARE         reduce using rule 140 (pexp -> var1 guardaID .)
    AND             reduce using rule 140 (pexp -> var1 guardaID .)
    RBRACKET        reduce using rule 140 (pexp -> var1 guardaID .)
    OR              reduce using rule 140 (pexp -> var1 guardaID .)
    RPAREN          reduce using rule 140 (pexp -> var1 guardaID .)
    COMMA           reduce using rule 140 (pexp -> var1 guardaID .)
    SEMICOLON       reduce using rule 140 (pexp -> var1 guardaID .)
    TO              reduce using rule 140 (pexp -> var1 guardaID .)


state 100

    (142) pexp -> CTEF guardaCTE .

    MUL             reduce using rule 142 (pexp -> CTEF guardaCTE .)
    DIV             reduce using rule 142 (pexp -> CTEF guardaCTE .)
    PLUS            reduce using rule 142 (pexp -> CTEF guardaCTE .)
    MINUS           reduce using rule 142 (pexp -> CTEF guardaCTE .)
    GT              reduce using rule 142 (pexp -> CTEF guardaCTE .)
    LT              reduce using rule 142 (pexp -> CTEF guardaCTE .)
    GTE             reduce using rule 142 (pexp -> CTEF guardaCTE .)
    LTE             reduce using rule 142 (pexp -> CTEF guardaCTE .)
    NE              reduce using rule 142 (pexp -> CTEF guardaCTE .)
    COMPARE         reduce using rule 142 (pexp -> CTEF guardaCTE .)
    AND             reduce using rule 142 (pexp -> CTEF guardaCTE .)
    RBRACKET        reduce using rule 142 (pexp -> CTEF guardaCTE .)
    OR              reduce using rule 142 (pexp -> CTEF guardaCTE .)
    RPAREN          reduce using rule 142 (pexp -> CTEF guardaCTE .)
    COMMA           reduce using rule 142 (pexp -> CTEF guardaCTE .)
    SEMICOLON       reduce using rule 142 (pexp -> CTEF guardaCTE .)
    TO              reduce using rule 142 (pexp -> CTEF guardaCTE .)


state 101

    (143) pexp -> CTEC guardaCTE .

    MUL             reduce using rule 143 (pexp -> CTEC guardaCTE .)
    DIV             reduce using rule 143 (pexp -> CTEC guardaCTE .)
    PLUS            reduce using rule 143 (pexp -> CTEC guardaCTE .)
    MINUS           reduce using rule 143 (pexp -> CTEC guardaCTE .)
    GT              reduce using rule 143 (pexp -> CTEC guardaCTE .)
    LT              reduce using rule 143 (pexp -> CTEC guardaCTE .)
    GTE             reduce using rule 143 (pexp -> CTEC guardaCTE .)
    LTE             reduce using rule 143 (pexp -> CTEC guardaCTE .)
    NE              reduce using rule 143 (pexp -> CTEC guardaCTE .)
    COMPARE         reduce using rule 143 (pexp -> CTEC guardaCTE .)
    AND             reduce using rule 143 (pexp -> CTEC guardaCTE .)
    RBRACKET        reduce using rule 143 (pexp -> CTEC guardaCTE .)
    OR              reduce using rule 143 (pexp -> CTEC guardaCTE .)
    RPAREN          reduce using rule 143 (pexp -> CTEC guardaCTE .)
    COMMA           reduce using rule 143 (pexp -> CTEC guardaCTE .)
    SEMICOLON       reduce using rule 143 (pexp -> CTEC guardaCTE .)
    TO              reduce using rule 143 (pexp -> CTEC guardaCTE .)


state 102

    (144) pexp -> CTESTRING guardaCTE .

    MUL             reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    DIV             reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    PLUS            reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    MINUS           reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    GT              reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    LT              reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    GTE             reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    LTE             reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    NE              reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    COMPARE         reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    AND             reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    RBRACKET        reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    OR              reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    RPAREN          reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    COMMA           reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    SEMICOLON       reduce using rule 144 (pexp -> CTESTRING guardaCTE .)
    TO              reduce using rule 144 (pexp -> CTESTRING guardaCTE .)


state 103

    (146) pexp -> LPAREN exp . RPAREN
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          shift and go to state 131
    OR              shift and go to state 87


state 104

    (141) pexp -> CTEI . guardaCTE
    (100) guardaCTE -> .

    MUL             reduce using rule 100 (guardaCTE -> .)
    DIV             reduce using rule 100 (guardaCTE -> .)
    PLUS            reduce using rule 100 (guardaCTE -> .)
    MINUS           reduce using rule 100 (guardaCTE -> .)
    GT              reduce using rule 100 (guardaCTE -> .)
    LT              reduce using rule 100 (guardaCTE -> .)
    GTE             reduce using rule 100 (guardaCTE -> .)
    LTE             reduce using rule 100 (guardaCTE -> .)
    NE              reduce using rule 100 (guardaCTE -> .)
    COMPARE         reduce using rule 100 (guardaCTE -> .)
    AND             reduce using rule 100 (guardaCTE -> .)
    RPAREN          reduce using rule 100 (guardaCTE -> .)
    OR              reduce using rule 100 (guardaCTE -> .)
    RBRACKET        reduce using rule 100 (guardaCTE -> .)
    COMMA           reduce using rule 100 (guardaCTE -> .)
    SEMICOLON       reduce using rule 100 (guardaCTE -> .)
    TO              reduce using rule 100 (guardaCTE -> .)

    guardaCTE                      shift and go to state 85

state 105

    (83) llamada -> ID llamadaEra . LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena

    LPAREN          shift and go to state 132


state 106

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var . estatutos RCURLY END
    (57) estatutos -> . estatutos_2 estatutos
    (58) estatutos -> .
    (59) estatutos_2 -> . asignacion SEMICOLON
    (60) estatutos_2 -> . llamada SEMICOLON
    (61) estatutos_2 -> . lectura SEMICOLON
    (62) estatutos_2 -> . escritura SEMICOLON
    (63) estatutos_2 -> . for
    (64) estatutos_2 -> . if
    (65) estatutos_2 -> . while
    (66) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (90) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (93) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (101) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (106) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (112) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 58 (estatutos -> .)
    ID              shift and go to state 142
    READ            shift and go to state 143
    PRINT           shift and go to state 144
    FOR             shift and go to state 145
    IF              shift and go to state 146
    WHILE           shift and go to state 147

    estatutos                      shift and go to state 133
    estatutos_2                    shift and go to state 134
    asignacion                     shift and go to state 135
    llamada                        shift and go to state 136
    lectura                        shift and go to state 137
    escritura                      shift and go to state 138
    for                            shift and go to state 139
    if                             shift and go to state 140
    while                          shift and go to state 141

state 107

    (72) param -> ID agregarParametro .

    RPAREN          reduce using rule 72 (param -> ID agregarParametro .)
    INT             reduce using rule 72 (param -> ID agregarParametro .)
    FLOAT           reduce using rule 72 (param -> ID agregarParametro .)
    CHAR            reduce using rule 72 (param -> ID agregarParametro .)


state 108

    (73) param -> ID COMMA . param agregarParametro
    (72) param -> . ID agregarParametro
    (73) param -> . ID COMMA param agregarParametro
    (74) param -> . ID arr
    (75) param -> . ID arr COMMA param
    (76) param -> . ID mat COMMA param
    (77) param -> . ID mat
    (78) param -> . ID mat especial
    (79) param -> .

    ID              shift and go to state 77
    RPAREN          reduce using rule 79 (param -> .)
    INT             reduce using rule 79 (param -> .)
    FLOAT           reduce using rule 79 (param -> .)
    CHAR            reduce using rule 79 (param -> .)

    param                          shift and go to state 148

state 109

    (74) param -> ID arr .
    (75) param -> ID arr . COMMA param

    RPAREN          reduce using rule 74 (param -> ID arr .)
    INT             reduce using rule 74 (param -> ID arr .)
    FLOAT           reduce using rule 74 (param -> ID arr .)
    CHAR            reduce using rule 74 (param -> ID arr .)
    COMMA           shift and go to state 149


state 110

    (76) param -> ID mat . COMMA param
    (77) param -> ID mat .
    (78) param -> ID mat . especial
    (29) especial -> . TRANSPUESTA transpuestaNum
    (30) especial -> . INVERSA
    (31) especial -> . DETERMINANTE

    COMMA           shift and go to state 150
    RPAREN          reduce using rule 77 (param -> ID mat .)
    INT             reduce using rule 77 (param -> ID mat .)
    FLOAT           reduce using rule 77 (param -> ID mat .)
    CHAR            reduce using rule 77 (param -> ID mat .)
    TRANSPUESTA     shift and go to state 58
    INVERSA         shift and go to state 59
    DETERMINANTE    shift and go to state 60

    especial                       shift and go to state 151

state 111

    (50) funcion_1 -> ID guardaFuncion LPAREN param2 . RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
    (81) param2 -> param2 . type param
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    RPAREN          shift and go to state 152
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    type                           shift and go to state 50

state 112

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 . RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (81) param2 -> param2 . type param
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    RPAREN          shift and go to state 153
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    type                           shift and go to state 50

state 113

    (22) var1 -> ID arr COMMA var1 agregarVar .

    SEMICOLON       reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    MUL             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    DIV             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    PLUS            reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    MINUS           reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    GT              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    LT              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    GTE             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    LTE             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    NE              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    COMPARE         reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    AND             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    RBRACKET        reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    OR              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    RPAREN          reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    COMMA           reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    TO              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)


state 114

    (23) var1 -> ID mat COMMA var1 agregarVar .

    SEMICOLON       reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    MUL             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    DIV             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    PLUS            reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    MINUS           reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    GT              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    LT              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    GTE             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    LTE             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    NE              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    COMPARE         reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    AND             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    RBRACKET        reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    OR              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    RPAREN          reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    COMMA           reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    TO              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)


state 115

    (40) mat -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET
    (43) mat -> LBRACKET CTEI RBRACKET LBRACKET . exp RBRACKET
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 154
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 155
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 116

    (33) arr -> LBRACKET CTEI RBRACKET arrQuad . clearArreglo
    (35) clearArreglo -> .

    COMMA           reduce using rule 35 (clearArreglo -> .)
    SEMICOLON       reduce using rule 35 (clearArreglo -> .)
    MUL             reduce using rule 35 (clearArreglo -> .)
    DIV             reduce using rule 35 (clearArreglo -> .)
    PLUS            reduce using rule 35 (clearArreglo -> .)
    MINUS           reduce using rule 35 (clearArreglo -> .)
    GT              reduce using rule 35 (clearArreglo -> .)
    LT              reduce using rule 35 (clearArreglo -> .)
    GTE             reduce using rule 35 (clearArreglo -> .)
    LTE             reduce using rule 35 (clearArreglo -> .)
    NE              reduce using rule 35 (clearArreglo -> .)
    COMPARE         reduce using rule 35 (clearArreglo -> .)
    AND             reduce using rule 35 (clearArreglo -> .)
    RBRACKET        reduce using rule 35 (clearArreglo -> .)
    OR              reduce using rule 35 (clearArreglo -> .)
    RPAREN          reduce using rule 35 (clearArreglo -> .)
    TO              reduce using rule 35 (clearArreglo -> .)
    INT             reduce using rule 35 (clearArreglo -> .)
    FLOAT           reduce using rule 35 (clearArreglo -> .)
    CHAR            reduce using rule 35 (clearArreglo -> .)
    EQUALS          reduce using rule 35 (clearArreglo -> .)

    clearArreglo                   shift and go to state 156

state 117

    (41) mat -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (42) mat -> LBRACKET exp RBRACKET LBRACKET . CTEI RBRACKET
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 158
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 157
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 118

    (34) arr -> LBRACKET exp RBRACKET arrQuad . clearArreglo
    (35) clearArreglo -> .

    COMMA           reduce using rule 35 (clearArreglo -> .)
    SEMICOLON       reduce using rule 35 (clearArreglo -> .)
    MUL             reduce using rule 35 (clearArreglo -> .)
    DIV             reduce using rule 35 (clearArreglo -> .)
    PLUS            reduce using rule 35 (clearArreglo -> .)
    MINUS           reduce using rule 35 (clearArreglo -> .)
    GT              reduce using rule 35 (clearArreglo -> .)
    LT              reduce using rule 35 (clearArreglo -> .)
    GTE             reduce using rule 35 (clearArreglo -> .)
    LTE             reduce using rule 35 (clearArreglo -> .)
    NE              reduce using rule 35 (clearArreglo -> .)
    COMPARE         reduce using rule 35 (clearArreglo -> .)
    AND             reduce using rule 35 (clearArreglo -> .)
    RBRACKET        reduce using rule 35 (clearArreglo -> .)
    OR              reduce using rule 35 (clearArreglo -> .)
    RPAREN          reduce using rule 35 (clearArreglo -> .)
    TO              reduce using rule 35 (clearArreglo -> .)
    INT             reduce using rule 35 (clearArreglo -> .)
    FLOAT           reduce using rule 35 (clearArreglo -> .)
    CHAR            reduce using rule 35 (clearArreglo -> .)
    EQUALS          reduce using rule 35 (clearArreglo -> .)

    clearArreglo                   shift and go to state 159

state 119

    (117) exp -> exp OR addOperadorName . nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    nexp                           shift and go to state 160
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 120

    (120) nexp -> nexp AND addOperadorName . compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    compexp1                       shift and go to state 161
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 121

    (124) compexp1 -> compexp1 GT addOperadorName . sumexp cuadruploComparacion
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 162
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 122

    (125) compexp1 -> compexp1 LT addOperadorName . sumexp cuadruploComparacion
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 163
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 123

    (126) compexp1 -> compexp1 GTE addOperadorName . sumexp cuadruploComparacion
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 164
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 124

    (127) compexp1 -> compexp1 LTE addOperadorName . sumexp cuadruploComparacion
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 165
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 125

    (128) compexp1 -> compexp1 NE addOperadorName . sumexp cuadruploComparacion
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 166
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 126

    (129) compexp1 -> compexp1 COMPARE addOperadorName . sumexp cuadruploComparacion
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 167
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 127

    (133) sumexp -> sumexp PLUS addOperadorName . mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    mulexp                         shift and go to state 168
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 128

    (134) sumexp -> sumexp MINUS addOperadorName . mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    mulexp                         shift and go to state 169
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 129

    (137) mulexp -> mulexp MUL addOperadorName . pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    pexp                           shift and go to state 170
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 130

    (138) mulexp -> mulexp DIV addOperadorName . pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    pexp                           shift and go to state 171
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 131

    (146) pexp -> LPAREN exp RPAREN .

    MUL             reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    DIV             reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    GT              reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    LT              reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    GTE             reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    LTE             reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    NE              reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    COMPARE         reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    AND             reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    OR              reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 146 (pexp -> LPAREN exp RPAREN .)
    TO              reduce using rule 146 (pexp -> LPAREN exp RPAREN .)


state 132

    (83) llamada -> ID llamadaEra LPAREN . auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (85) auxiliarExp -> . exp
    (86) auxiliarExp -> . exp COMMA exp
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    auxiliarExp                    shift and go to state 172
    exp                            shift and go to state 173
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 133

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos . RCURLY END

    RCURLY          shift and go to state 174


state 134

    (57) estatutos -> estatutos_2 . estatutos
    (57) estatutos -> . estatutos_2 estatutos
    (58) estatutos -> .
    (59) estatutos_2 -> . asignacion SEMICOLON
    (60) estatutos_2 -> . llamada SEMICOLON
    (61) estatutos_2 -> . lectura SEMICOLON
    (62) estatutos_2 -> . escritura SEMICOLON
    (63) estatutos_2 -> . for
    (64) estatutos_2 -> . if
    (65) estatutos_2 -> . while
    (66) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (90) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (93) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (101) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (106) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (112) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 58 (estatutos -> .)
    RETURN          reduce using rule 58 (estatutos -> .)
    ID              shift and go to state 142
    READ            shift and go to state 143
    PRINT           shift and go to state 144
    FOR             shift and go to state 145
    IF              shift and go to state 146
    WHILE           shift and go to state 147

    estatutos_2                    shift and go to state 134
    estatutos                      shift and go to state 175
    asignacion                     shift and go to state 135
    llamada                        shift and go to state 136
    lectura                        shift and go to state 137
    escritura                      shift and go to state 138
    for                            shift and go to state 139
    if                             shift and go to state 140
    while                          shift and go to state 141

state 135

    (59) estatutos_2 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 176


state 136

    (60) estatutos_2 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 177


state 137

    (61) estatutos_2 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 178


state 138

    (62) estatutos_2 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 179


state 139

    (63) estatutos_2 -> for .

    ID              reduce using rule 63 (estatutos_2 -> for .)
    READ            reduce using rule 63 (estatutos_2 -> for .)
    PRINT           reduce using rule 63 (estatutos_2 -> for .)
    FOR             reduce using rule 63 (estatutos_2 -> for .)
    IF              reduce using rule 63 (estatutos_2 -> for .)
    WHILE           reduce using rule 63 (estatutos_2 -> for .)
    RCURLY          reduce using rule 63 (estatutos_2 -> for .)
    RETURN          reduce using rule 63 (estatutos_2 -> for .)


state 140

    (64) estatutos_2 -> if .

    ID              reduce using rule 64 (estatutos_2 -> if .)
    READ            reduce using rule 64 (estatutos_2 -> if .)
    PRINT           reduce using rule 64 (estatutos_2 -> if .)
    FOR             reduce using rule 64 (estatutos_2 -> if .)
    IF              reduce using rule 64 (estatutos_2 -> if .)
    WHILE           reduce using rule 64 (estatutos_2 -> if .)
    RCURLY          reduce using rule 64 (estatutos_2 -> if .)
    RETURN          reduce using rule 64 (estatutos_2 -> if .)


state 141

    (65) estatutos_2 -> while .

    ID              reduce using rule 65 (estatutos_2 -> while .)
    READ            reduce using rule 65 (estatutos_2 -> while .)
    PRINT           reduce using rule 65 (estatutos_2 -> while .)
    FOR             reduce using rule 65 (estatutos_2 -> while .)
    IF              reduce using rule 65 (estatutos_2 -> while .)
    WHILE           reduce using rule 65 (estatutos_2 -> while .)
    RCURLY          reduce using rule 65 (estatutos_2 -> while .)
    RETURN          reduce using rule 65 (estatutos_2 -> while .)


state 142

    (66) asignacion -> ID . guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> ID . guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> ID . guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (83) llamada -> ID . llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (69) guardaVariable_2 -> .
    (84) llamadaEra -> .

    EQUALS          reduce using rule 69 (guardaVariable_2 -> .)
    LBRACKET        reduce using rule 69 (guardaVariable_2 -> .)
    LPAREN          reduce using rule 84 (llamadaEra -> .)

    guardaVariable_2               shift and go to state 180
    llamadaEra                     shift and go to state 105

state 143

    (90) lectura -> READ . operadorRead LPAREN exp cuadruploRead RPAREN
    (91) operadorRead -> .

    LPAREN          reduce using rule 91 (operadorRead -> .)

    operadorRead                   shift and go to state 181

state 144

    (93) escritura -> PRINT . LPAREN operadorPrint escritura1 cuadruploPrint RPAREN

    LPAREN          shift and go to state 182


state 145

    (101) for -> FOR . operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (103) operadorFor -> .

    LPAREN          reduce using rule 103 (operadorFor -> .)

    operadorFor                    shift and go to state 183

state 146

    (106) if -> IF . LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf

    LPAREN          shift and go to state 184


state 147

    (112) while -> WHILE . operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
    (113) operadorWhile -> .

    LPAREN          reduce using rule 113 (operadorWhile -> .)

    operadorWhile                  shift and go to state 185

state 148

    (73) param -> ID COMMA param . agregarParametro
    (80) agregarParametro -> .

    RPAREN          reduce using rule 80 (agregarParametro -> .)
    INT             reduce using rule 80 (agregarParametro -> .)
    FLOAT           reduce using rule 80 (agregarParametro -> .)
    CHAR            reduce using rule 80 (agregarParametro -> .)

    agregarParametro               shift and go to state 186

state 149

    (75) param -> ID arr COMMA . param
    (72) param -> . ID agregarParametro
    (73) param -> . ID COMMA param agregarParametro
    (74) param -> . ID arr
    (75) param -> . ID arr COMMA param
    (76) param -> . ID mat COMMA param
    (77) param -> . ID mat
    (78) param -> . ID mat especial
    (79) param -> .

    ID              shift and go to state 77
    RPAREN          reduce using rule 79 (param -> .)
    INT             reduce using rule 79 (param -> .)
    FLOAT           reduce using rule 79 (param -> .)
    CHAR            reduce using rule 79 (param -> .)

    param                          shift and go to state 187

state 150

    (76) param -> ID mat COMMA . param
    (72) param -> . ID agregarParametro
    (73) param -> . ID COMMA param agregarParametro
    (74) param -> . ID arr
    (75) param -> . ID arr COMMA param
    (76) param -> . ID mat COMMA param
    (77) param -> . ID mat
    (78) param -> . ID mat especial
    (79) param -> .

    ID              shift and go to state 77
    RPAREN          reduce using rule 79 (param -> .)
    INT             reduce using rule 79 (param -> .)
    FLOAT           reduce using rule 79 (param -> .)
    CHAR            reduce using rule 79 (param -> .)

    param                          shift and go to state 188

state 151

    (78) param -> ID mat especial .

    RPAREN          reduce using rule 78 (param -> ID mat especial .)
    INT             reduce using rule 78 (param -> ID mat especial .)
    FLOAT           reduce using rule 78 (param -> ID mat especial .)
    CHAR            reduce using rule 78 (param -> ID mat especial .)


state 152

    (50) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN . SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion

    SEMICOLON       shift and go to state 189


state 153

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN . SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    SEMICOLON       shift and go to state 190


state 154

    (40) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET
    (141) pexp -> CTEI . guardaCTE
    (100) guardaCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 191
    MUL             reduce using rule 100 (guardaCTE -> .)
    DIV             reduce using rule 100 (guardaCTE -> .)
    PLUS            reduce using rule 100 (guardaCTE -> .)
    MINUS           reduce using rule 100 (guardaCTE -> .)
    GT              reduce using rule 100 (guardaCTE -> .)
    LT              reduce using rule 100 (guardaCTE -> .)
    GTE             reduce using rule 100 (guardaCTE -> .)
    LTE             reduce using rule 100 (guardaCTE -> .)
    NE              reduce using rule 100 (guardaCTE -> .)
    COMPARE         reduce using rule 100 (guardaCTE -> .)
    AND             reduce using rule 100 (guardaCTE -> .)
    OR              reduce using rule 100 (guardaCTE -> .)

  ! RBRACKET        [ reduce using rule 100 (guardaCTE -> .) ]

    guardaCTE                      shift and go to state 85

state 155

    (43) mat -> LBRACKET CTEI RBRACKET LBRACKET exp . RBRACKET
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr

    RBRACKET        shift and go to state 192
    OR              shift and go to state 87


state 156

    (33) arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .

    COMMA           reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    SEMICOLON       reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    MUL             reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    DIV             reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    PLUS            reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    MINUS           reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    GT              reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    LT              reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    GTE             reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    LTE             reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    NE              reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    COMPARE         reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    AND             reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    RBRACKET        reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    OR              reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    RPAREN          reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    TO              reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    INT             reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    FLOAT           reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    CHAR            reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)
    EQUALS          reduce using rule 33 (arr -> LBRACKET CTEI RBRACKET arrQuad clearArreglo .)


state 157

    (41) mat -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr

    RBRACKET        shift and go to state 193
    OR              shift and go to state 87


state 158

    (42) mat -> LBRACKET exp RBRACKET LBRACKET CTEI . RBRACKET
    (141) pexp -> CTEI . guardaCTE
    (100) guardaCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 194
    MUL             reduce using rule 100 (guardaCTE -> .)
    DIV             reduce using rule 100 (guardaCTE -> .)
    PLUS            reduce using rule 100 (guardaCTE -> .)
    MINUS           reduce using rule 100 (guardaCTE -> .)
    GT              reduce using rule 100 (guardaCTE -> .)
    LT              reduce using rule 100 (guardaCTE -> .)
    GTE             reduce using rule 100 (guardaCTE -> .)
    LTE             reduce using rule 100 (guardaCTE -> .)
    NE              reduce using rule 100 (guardaCTE -> .)
    COMPARE         reduce using rule 100 (guardaCTE -> .)
    AND             reduce using rule 100 (guardaCTE -> .)
    OR              reduce using rule 100 (guardaCTE -> .)

  ! RBRACKET        [ reduce using rule 100 (guardaCTE -> .) ]

    guardaCTE                      shift and go to state 85

state 159

    (34) arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .

    COMMA           reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    SEMICOLON       reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    MUL             reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    DIV             reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    PLUS            reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    MINUS           reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    GT              reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    LT              reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    GTE             reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    LTE             reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    NE              reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    COMPARE         reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    AND             reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    RBRACKET        reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    OR              reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    RPAREN          reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    TO              reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    INT             reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    FLOAT           reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    CHAR            reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)
    EQUALS          reduce using rule 34 (arr -> LBRACKET exp RBRACKET arrQuad clearArreglo .)


state 160

    (117) exp -> exp OR addOperadorName nexp . cuadruploOr
    (120) nexp -> nexp . AND addOperadorName compexp1 cuadruploAnd
    (118) cuadruploOr -> .

    AND             shift and go to state 88
    RBRACKET        reduce using rule 118 (cuadruploOr -> .)
    OR              reduce using rule 118 (cuadruploOr -> .)
    RPAREN          reduce using rule 118 (cuadruploOr -> .)
    COMMA           reduce using rule 118 (cuadruploOr -> .)
    SEMICOLON       reduce using rule 118 (cuadruploOr -> .)
    TO              reduce using rule 118 (cuadruploOr -> .)

    cuadruploOr                    shift and go to state 195

state 161

    (120) nexp -> nexp AND addOperadorName compexp1 . cuadruploAnd
    (124) compexp1 -> compexp1 . GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> compexp1 . LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> compexp1 . GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> compexp1 . LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> compexp1 . NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> compexp1 . COMPARE addOperadorName sumexp cuadruploComparacion
    (121) cuadruploAnd -> .

    GT              shift and go to state 89
    LT              shift and go to state 90
    GTE             shift and go to state 91
    LTE             shift and go to state 92
    NE              shift and go to state 93
    COMPARE         shift and go to state 94
    AND             reduce using rule 121 (cuadruploAnd -> .)
    RBRACKET        reduce using rule 121 (cuadruploAnd -> .)
    OR              reduce using rule 121 (cuadruploAnd -> .)
    RPAREN          reduce using rule 121 (cuadruploAnd -> .)
    COMMA           reduce using rule 121 (cuadruploAnd -> .)
    SEMICOLON       reduce using rule 121 (cuadruploAnd -> .)
    TO              reduce using rule 121 (cuadruploAnd -> .)

    cuadruploAnd                   shift and go to state 196

state 162

    (124) compexp1 -> compexp1 GT addOperadorName sumexp . cuadruploComparacion
    (133) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (131) cuadruploComparacion -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    GT              reduce using rule 131 (cuadruploComparacion -> .)
    LT              reduce using rule 131 (cuadruploComparacion -> .)
    GTE             reduce using rule 131 (cuadruploComparacion -> .)
    LTE             reduce using rule 131 (cuadruploComparacion -> .)
    NE              reduce using rule 131 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 131 (cuadruploComparacion -> .)
    AND             reduce using rule 131 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 131 (cuadruploComparacion -> .)
    OR              reduce using rule 131 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 131 (cuadruploComparacion -> .)
    COMMA           reduce using rule 131 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 131 (cuadruploComparacion -> .)
    TO              reduce using rule 131 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 197

state 163

    (125) compexp1 -> compexp1 LT addOperadorName sumexp . cuadruploComparacion
    (133) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (131) cuadruploComparacion -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    GT              reduce using rule 131 (cuadruploComparacion -> .)
    LT              reduce using rule 131 (cuadruploComparacion -> .)
    GTE             reduce using rule 131 (cuadruploComparacion -> .)
    LTE             reduce using rule 131 (cuadruploComparacion -> .)
    NE              reduce using rule 131 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 131 (cuadruploComparacion -> .)
    AND             reduce using rule 131 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 131 (cuadruploComparacion -> .)
    OR              reduce using rule 131 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 131 (cuadruploComparacion -> .)
    COMMA           reduce using rule 131 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 131 (cuadruploComparacion -> .)
    TO              reduce using rule 131 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 198

state 164

    (126) compexp1 -> compexp1 GTE addOperadorName sumexp . cuadruploComparacion
    (133) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (131) cuadruploComparacion -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    GT              reduce using rule 131 (cuadruploComparacion -> .)
    LT              reduce using rule 131 (cuadruploComparacion -> .)
    GTE             reduce using rule 131 (cuadruploComparacion -> .)
    LTE             reduce using rule 131 (cuadruploComparacion -> .)
    NE              reduce using rule 131 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 131 (cuadruploComparacion -> .)
    AND             reduce using rule 131 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 131 (cuadruploComparacion -> .)
    OR              reduce using rule 131 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 131 (cuadruploComparacion -> .)
    COMMA           reduce using rule 131 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 131 (cuadruploComparacion -> .)
    TO              reduce using rule 131 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 199

state 165

    (127) compexp1 -> compexp1 LTE addOperadorName sumexp . cuadruploComparacion
    (133) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (131) cuadruploComparacion -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    GT              reduce using rule 131 (cuadruploComparacion -> .)
    LT              reduce using rule 131 (cuadruploComparacion -> .)
    GTE             reduce using rule 131 (cuadruploComparacion -> .)
    LTE             reduce using rule 131 (cuadruploComparacion -> .)
    NE              reduce using rule 131 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 131 (cuadruploComparacion -> .)
    AND             reduce using rule 131 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 131 (cuadruploComparacion -> .)
    OR              reduce using rule 131 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 131 (cuadruploComparacion -> .)
    COMMA           reduce using rule 131 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 131 (cuadruploComparacion -> .)
    TO              reduce using rule 131 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 200

state 166

    (128) compexp1 -> compexp1 NE addOperadorName sumexp . cuadruploComparacion
    (133) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (131) cuadruploComparacion -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    GT              reduce using rule 131 (cuadruploComparacion -> .)
    LT              reduce using rule 131 (cuadruploComparacion -> .)
    GTE             reduce using rule 131 (cuadruploComparacion -> .)
    LTE             reduce using rule 131 (cuadruploComparacion -> .)
    NE              reduce using rule 131 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 131 (cuadruploComparacion -> .)
    AND             reduce using rule 131 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 131 (cuadruploComparacion -> .)
    OR              reduce using rule 131 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 131 (cuadruploComparacion -> .)
    COMMA           reduce using rule 131 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 131 (cuadruploComparacion -> .)
    TO              reduce using rule 131 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 201

state 167

    (129) compexp1 -> compexp1 COMPARE addOperadorName sumexp . cuadruploComparacion
    (133) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (131) cuadruploComparacion -> .

    PLUS            shift and go to state 95
    MINUS           shift and go to state 96
    GT              reduce using rule 131 (cuadruploComparacion -> .)
    LT              reduce using rule 131 (cuadruploComparacion -> .)
    GTE             reduce using rule 131 (cuadruploComparacion -> .)
    LTE             reduce using rule 131 (cuadruploComparacion -> .)
    NE              reduce using rule 131 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 131 (cuadruploComparacion -> .)
    AND             reduce using rule 131 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 131 (cuadruploComparacion -> .)
    OR              reduce using rule 131 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 131 (cuadruploComparacion -> .)
    COMMA           reduce using rule 131 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 131 (cuadruploComparacion -> .)
    TO              reduce using rule 131 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 202

state 168

    (133) sumexp -> sumexp PLUS addOperadorName mulexp . cuadruploSuma
    (137) mulexp -> mulexp . MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> mulexp . DIV addOperadorName pexp cuadruploMultiplicacion
    (135) cuadruploSuma -> .

    MUL             shift and go to state 97
    DIV             shift and go to state 98
    PLUS            reduce using rule 135 (cuadruploSuma -> .)
    MINUS           reduce using rule 135 (cuadruploSuma -> .)
    GT              reduce using rule 135 (cuadruploSuma -> .)
    LT              reduce using rule 135 (cuadruploSuma -> .)
    GTE             reduce using rule 135 (cuadruploSuma -> .)
    LTE             reduce using rule 135 (cuadruploSuma -> .)
    NE              reduce using rule 135 (cuadruploSuma -> .)
    COMPARE         reduce using rule 135 (cuadruploSuma -> .)
    AND             reduce using rule 135 (cuadruploSuma -> .)
    RBRACKET        reduce using rule 135 (cuadruploSuma -> .)
    OR              reduce using rule 135 (cuadruploSuma -> .)
    RPAREN          reduce using rule 135 (cuadruploSuma -> .)
    COMMA           reduce using rule 135 (cuadruploSuma -> .)
    SEMICOLON       reduce using rule 135 (cuadruploSuma -> .)
    TO              reduce using rule 135 (cuadruploSuma -> .)

    cuadruploSuma                  shift and go to state 203

state 169

    (134) sumexp -> sumexp MINUS addOperadorName mulexp . cuadruploSuma
    (137) mulexp -> mulexp . MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> mulexp . DIV addOperadorName pexp cuadruploMultiplicacion
    (135) cuadruploSuma -> .

    MUL             shift and go to state 97
    DIV             shift and go to state 98
    PLUS            reduce using rule 135 (cuadruploSuma -> .)
    MINUS           reduce using rule 135 (cuadruploSuma -> .)
    GT              reduce using rule 135 (cuadruploSuma -> .)
    LT              reduce using rule 135 (cuadruploSuma -> .)
    GTE             reduce using rule 135 (cuadruploSuma -> .)
    LTE             reduce using rule 135 (cuadruploSuma -> .)
    NE              reduce using rule 135 (cuadruploSuma -> .)
    COMPARE         reduce using rule 135 (cuadruploSuma -> .)
    AND             reduce using rule 135 (cuadruploSuma -> .)
    RBRACKET        reduce using rule 135 (cuadruploSuma -> .)
    OR              reduce using rule 135 (cuadruploSuma -> .)
    RPAREN          reduce using rule 135 (cuadruploSuma -> .)
    COMMA           reduce using rule 135 (cuadruploSuma -> .)
    SEMICOLON       reduce using rule 135 (cuadruploSuma -> .)
    TO              reduce using rule 135 (cuadruploSuma -> .)

    cuadruploSuma                  shift and go to state 204

state 170

    (137) mulexp -> mulexp MUL addOperadorName pexp . cuadruploMultiplicacion
    (139) cuadruploMultiplicacion -> .

    MUL             reduce using rule 139 (cuadruploMultiplicacion -> .)
    DIV             reduce using rule 139 (cuadruploMultiplicacion -> .)
    PLUS            reduce using rule 139 (cuadruploMultiplicacion -> .)
    MINUS           reduce using rule 139 (cuadruploMultiplicacion -> .)
    GT              reduce using rule 139 (cuadruploMultiplicacion -> .)
    LT              reduce using rule 139 (cuadruploMultiplicacion -> .)
    GTE             reduce using rule 139 (cuadruploMultiplicacion -> .)
    LTE             reduce using rule 139 (cuadruploMultiplicacion -> .)
    NE              reduce using rule 139 (cuadruploMultiplicacion -> .)
    COMPARE         reduce using rule 139 (cuadruploMultiplicacion -> .)
    AND             reduce using rule 139 (cuadruploMultiplicacion -> .)
    RBRACKET        reduce using rule 139 (cuadruploMultiplicacion -> .)
    OR              reduce using rule 139 (cuadruploMultiplicacion -> .)
    RPAREN          reduce using rule 139 (cuadruploMultiplicacion -> .)
    COMMA           reduce using rule 139 (cuadruploMultiplicacion -> .)
    SEMICOLON       reduce using rule 139 (cuadruploMultiplicacion -> .)
    TO              reduce using rule 139 (cuadruploMultiplicacion -> .)

    cuadruploMultiplicacion        shift and go to state 205

state 171

    (138) mulexp -> mulexp DIV addOperadorName pexp . cuadruploMultiplicacion
    (139) cuadruploMultiplicacion -> .

    MUL             reduce using rule 139 (cuadruploMultiplicacion -> .)
    DIV             reduce using rule 139 (cuadruploMultiplicacion -> .)
    PLUS            reduce using rule 139 (cuadruploMultiplicacion -> .)
    MINUS           reduce using rule 139 (cuadruploMultiplicacion -> .)
    GT              reduce using rule 139 (cuadruploMultiplicacion -> .)
    LT              reduce using rule 139 (cuadruploMultiplicacion -> .)
    GTE             reduce using rule 139 (cuadruploMultiplicacion -> .)
    LTE             reduce using rule 139 (cuadruploMultiplicacion -> .)
    NE              reduce using rule 139 (cuadruploMultiplicacion -> .)
    COMPARE         reduce using rule 139 (cuadruploMultiplicacion -> .)
    AND             reduce using rule 139 (cuadruploMultiplicacion -> .)
    RBRACKET        reduce using rule 139 (cuadruploMultiplicacion -> .)
    OR              reduce using rule 139 (cuadruploMultiplicacion -> .)
    RPAREN          reduce using rule 139 (cuadruploMultiplicacion -> .)
    COMMA           reduce using rule 139 (cuadruploMultiplicacion -> .)
    SEMICOLON       reduce using rule 139 (cuadruploMultiplicacion -> .)
    TO              reduce using rule 139 (cuadruploMultiplicacion -> .)

    cuadruploMultiplicacion        shift and go to state 206

state 172

    (83) llamada -> ID llamadaEra LPAREN auxiliarExp . cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (87) cuadruploParametros -> .

    RPAREN          reduce using rule 87 (cuadruploParametros -> .)

    cuadruploParametros            shift and go to state 207

state 173

    (85) auxiliarExp -> exp .
    (86) auxiliarExp -> exp . COMMA exp
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          reduce using rule 85 (auxiliarExp -> exp .)
    COMMA           shift and go to state 208
    OR              shift and go to state 87


state 174

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY . END

    END             shift and go to state 209


state 175

    (57) estatutos -> estatutos_2 estatutos .

    RCURLY          reduce using rule 57 (estatutos -> estatutos_2 estatutos .)
    RETURN          reduce using rule 57 (estatutos -> estatutos_2 estatutos .)


state 176

    (59) estatutos_2 -> asignacion SEMICOLON .

    ID              reduce using rule 59 (estatutos_2 -> asignacion SEMICOLON .)
    READ            reduce using rule 59 (estatutos_2 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 59 (estatutos_2 -> asignacion SEMICOLON .)
    FOR             reduce using rule 59 (estatutos_2 -> asignacion SEMICOLON .)
    IF              reduce using rule 59 (estatutos_2 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 59 (estatutos_2 -> asignacion SEMICOLON .)
    RCURLY          reduce using rule 59 (estatutos_2 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 59 (estatutos_2 -> asignacion SEMICOLON .)


state 177

    (60) estatutos_2 -> llamada SEMICOLON .

    ID              reduce using rule 60 (estatutos_2 -> llamada SEMICOLON .)
    READ            reduce using rule 60 (estatutos_2 -> llamada SEMICOLON .)
    PRINT           reduce using rule 60 (estatutos_2 -> llamada SEMICOLON .)
    FOR             reduce using rule 60 (estatutos_2 -> llamada SEMICOLON .)
    IF              reduce using rule 60 (estatutos_2 -> llamada SEMICOLON .)
    WHILE           reduce using rule 60 (estatutos_2 -> llamada SEMICOLON .)
    RCURLY          reduce using rule 60 (estatutos_2 -> llamada SEMICOLON .)
    RETURN          reduce using rule 60 (estatutos_2 -> llamada SEMICOLON .)


state 178

    (61) estatutos_2 -> lectura SEMICOLON .

    ID              reduce using rule 61 (estatutos_2 -> lectura SEMICOLON .)
    READ            reduce using rule 61 (estatutos_2 -> lectura SEMICOLON .)
    PRINT           reduce using rule 61 (estatutos_2 -> lectura SEMICOLON .)
    FOR             reduce using rule 61 (estatutos_2 -> lectura SEMICOLON .)
    IF              reduce using rule 61 (estatutos_2 -> lectura SEMICOLON .)
    WHILE           reduce using rule 61 (estatutos_2 -> lectura SEMICOLON .)
    RCURLY          reduce using rule 61 (estatutos_2 -> lectura SEMICOLON .)
    RETURN          reduce using rule 61 (estatutos_2 -> lectura SEMICOLON .)


state 179

    (62) estatutos_2 -> escritura SEMICOLON .

    ID              reduce using rule 62 (estatutos_2 -> escritura SEMICOLON .)
    READ            reduce using rule 62 (estatutos_2 -> escritura SEMICOLON .)
    PRINT           reduce using rule 62 (estatutos_2 -> escritura SEMICOLON .)
    FOR             reduce using rule 62 (estatutos_2 -> escritura SEMICOLON .)
    IF              reduce using rule 62 (estatutos_2 -> escritura SEMICOLON .)
    WHILE           reduce using rule 62 (estatutos_2 -> escritura SEMICOLON .)
    RCURLY          reduce using rule 62 (estatutos_2 -> escritura SEMICOLON .)
    RETURN          reduce using rule 62 (estatutos_2 -> escritura SEMICOLON .)


state 180

    (66) asignacion -> ID guardaVariable_2 . EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> ID guardaVariable_2 . arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> ID guardaVariable_2 . mat EQUALS addOperadorName exp cuadruploAsignacion
    (33) arr -> . LBRACKET CTEI RBRACKET arrQuad clearArreglo
    (34) arr -> . LBRACKET exp RBRACKET arrQuad clearArreglo
    (40) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (41) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (42) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (43) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    EQUALS          shift and go to state 210
    LBRACKET        shift and go to state 48

    arr                            shift and go to state 211
    mat                            shift and go to state 212

state 181

    (90) lectura -> READ operadorRead . LPAREN exp cuadruploRead RPAREN

    LPAREN          shift and go to state 213


state 182

    (93) escritura -> PRINT LPAREN . operadorPrint escritura1 cuadruploPrint RPAREN
    (98) operadorPrint -> .

    COMILLA         reduce using rule 98 (operadorPrint -> .)
    CTEI            reduce using rule 98 (operadorPrint -> .)
    CTEF            reduce using rule 98 (operadorPrint -> .)
    CTEC            reduce using rule 98 (operadorPrint -> .)
    CTESTRING       reduce using rule 98 (operadorPrint -> .)
    LPAREN          reduce using rule 98 (operadorPrint -> .)
    ID              reduce using rule 98 (operadorPrint -> .)
    RPAREN          reduce using rule 98 (operadorPrint -> .)
    COMMA           reduce using rule 98 (operadorPrint -> .)
    OR              reduce using rule 98 (operadorPrint -> .)
    AND             reduce using rule 98 (operadorPrint -> .)
    GT              reduce using rule 98 (operadorPrint -> .)
    LT              reduce using rule 98 (operadorPrint -> .)
    GTE             reduce using rule 98 (operadorPrint -> .)
    LTE             reduce using rule 98 (operadorPrint -> .)
    NE              reduce using rule 98 (operadorPrint -> .)
    COMPARE         reduce using rule 98 (operadorPrint -> .)
    PLUS            reduce using rule 98 (operadorPrint -> .)
    MINUS           reduce using rule 98 (operadorPrint -> .)
    MUL             reduce using rule 98 (operadorPrint -> .)
    DIV             reduce using rule 98 (operadorPrint -> .)

    operadorPrint                  shift and go to state 214

state 183

    (101) for -> FOR operadorFor . LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor

    LPAREN          shift and go to state 215


state 184

    (106) if -> IF LPAREN . exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 216
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 185

    (112) while -> WHILE operadorWhile . LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    LPAREN          shift and go to state 217


state 186

    (73) param -> ID COMMA param agregarParametro .

    RPAREN          reduce using rule 73 (param -> ID COMMA param agregarParametro .)
    INT             reduce using rule 73 (param -> ID COMMA param agregarParametro .)
    FLOAT           reduce using rule 73 (param -> ID COMMA param agregarParametro .)
    CHAR            reduce using rule 73 (param -> ID COMMA param agregarParametro .)


state 187

    (75) param -> ID arr COMMA param .

    RPAREN          reduce using rule 75 (param -> ID arr COMMA param .)
    INT             reduce using rule 75 (param -> ID arr COMMA param .)
    FLOAT           reduce using rule 75 (param -> ID arr COMMA param .)
    CHAR            reduce using rule 75 (param -> ID arr COMMA param .)


state 188

    (76) param -> ID mat COMMA param .

    RPAREN          reduce using rule 76 (param -> ID mat COMMA param .)
    INT             reduce using rule 76 (param -> ID mat COMMA param .)
    FLOAT           reduce using rule 76 (param -> ID mat COMMA param .)
    CHAR            reduce using rule 76 (param -> ID mat COMMA param .)


state 189

    (50) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON . LCURLY var funcionGOTO estatutos RCURLY endFuncion

    LCURLY          shift and go to state 218


state 190

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON . LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    LCURLY          shift and go to state 219


state 191

    (40) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 40 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 192

    (43) mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 43 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)


state 193

    (41) mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 41 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 194

    (42) mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 42 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)


state 195

    (117) exp -> exp OR addOperadorName nexp cuadruploOr .

    RBRACKET        reduce using rule 117 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    OR              reduce using rule 117 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    RPAREN          reduce using rule 117 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    COMMA           reduce using rule 117 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    SEMICOLON       reduce using rule 117 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    TO              reduce using rule 117 (exp -> exp OR addOperadorName nexp cuadruploOr .)


state 196

    (120) nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .

    AND             reduce using rule 120 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    RBRACKET        reduce using rule 120 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    OR              reduce using rule 120 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    RPAREN          reduce using rule 120 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    COMMA           reduce using rule 120 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    SEMICOLON       reduce using rule 120 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    TO              reduce using rule 120 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)


state 197

    (124) compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 124 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)


state 198

    (125) compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 125 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)


state 199

    (126) compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 126 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)


state 200

    (127) compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 127 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)


state 201

    (128) compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 128 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)


state 202

    (129) compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 129 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)


state 203

    (133) sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .

    PLUS            reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    MINUS           reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    GT              reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    LT              reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    GTE             reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    LTE             reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    NE              reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    COMPARE         reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    AND             reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    RBRACKET        reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    OR              reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    RPAREN          reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    COMMA           reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    SEMICOLON       reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    TO              reduce using rule 133 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)


state 204

    (134) sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .

    PLUS            reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    MINUS           reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    GT              reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    LT              reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    GTE             reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    LTE             reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    NE              reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    COMPARE         reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    AND             reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    RBRACKET        reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    OR              reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    RPAREN          reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    COMMA           reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    SEMICOLON       reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    TO              reduce using rule 134 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)


state 205

    (137) mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .

    MUL             reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    DIV             reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    PLUS            reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    MINUS           reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    GT              reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    LT              reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    GTE             reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    LTE             reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    NE              reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    COMPARE         reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    AND             reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    RBRACKET        reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    OR              reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    RPAREN          reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    COMMA           reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    SEMICOLON       reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    TO              reduce using rule 137 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)


state 206

    (138) mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .

    MUL             reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    DIV             reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    PLUS            reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    MINUS           reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    GT              reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    LT              reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    GTE             reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    LTE             reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    NE              reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    COMPARE         reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    AND             reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    RBRACKET        reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    OR              reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    RPAREN          reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    COMMA           reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    SEMICOLON       reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    TO              reduce using rule 138 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)


state 207

    (83) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros . RPAREN cuadruploGoSub endProcesoLlena

    RPAREN          shift and go to state 220


state 208

    (86) auxiliarExp -> exp COMMA . exp
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    exp                            shift and go to state 221
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 209

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END .

    $end            reduce using rule 7 (main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END .)


state 210

    (66) asignacion -> ID guardaVariable_2 EQUALS . addOperadorName exp cuadruploAsignacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 222

state 211

    (67) asignacion -> ID guardaVariable_2 arr . EQUALS addOperadorName exp cuadruploAsignacion

    EQUALS          shift and go to state 223


state 212

    (68) asignacion -> ID guardaVariable_2 mat . EQUALS addOperadorName exp cuadruploAsignacion

    EQUALS          shift and go to state 224


state 213

    (90) lectura -> READ operadorRead LPAREN . exp cuadruploRead RPAREN
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    exp                            shift and go to state 225
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 214

    (93) escritura -> PRINT LPAREN operadorPrint . escritura1 cuadruploPrint RPAREN
    (94) escritura1 -> . escritura2 COMMA escritura2
    (95) escritura1 -> . escritura2
    (96) escritura2 -> . COMILLA CTESTRING COMILLA
    (97) escritura2 -> . exp cuadruploPrint
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    COMILLA         shift and go to state 228
    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    escritura1                     shift and go to state 226
    escritura2                     shift and go to state 227
    exp                            shift and go to state 229
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 215

    (101) for -> FOR operadorFor LPAREN . for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (102) for1 -> . FROM asignacion TO exp

    FROM            shift and go to state 231

    for1                           shift and go to state 230

state 216

    (106) if -> IF LPAREN exp . RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          shift and go to state 232
    OR              shift and go to state 87


state 217

    (112) while -> WHILE operadorWhile LPAREN . exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 233
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 218

    (50) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY . var funcionGOTO estatutos RCURLY endFuncion
    (14) var -> . vars
    (15) var -> .
    (16) vars -> . VAR var_2

    ID              reduce using rule 15 (var -> .)
    READ            reduce using rule 15 (var -> .)
    PRINT           reduce using rule 15 (var -> .)
    FOR             reduce using rule 15 (var -> .)
    IF              reduce using rule 15 (var -> .)
    WHILE           reduce using rule 15 (var -> .)
    RCURLY          reduce using rule 15 (var -> .)
    VAR             shift and go to state 11

    var                            shift and go to state 234
    vars                           shift and go to state 9

state 219

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY . var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (14) var -> . vars
    (15) var -> .
    (16) vars -> . VAR var_2

    ID              reduce using rule 15 (var -> .)
    READ            reduce using rule 15 (var -> .)
    PRINT           reduce using rule 15 (var -> .)
    FOR             reduce using rule 15 (var -> .)
    IF              reduce using rule 15 (var -> .)
    WHILE           reduce using rule 15 (var -> .)
    RETURN          reduce using rule 15 (var -> .)
    VAR             shift and go to state 11

    var                            shift and go to state 235
    vars                           shift and go to state 9

state 220

    (83) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN . cuadruploGoSub endProcesoLlena
    (88) cuadruploGoSub -> .

    MUL             reduce using rule 88 (cuadruploGoSub -> .)
    DIV             reduce using rule 88 (cuadruploGoSub -> .)
    PLUS            reduce using rule 88 (cuadruploGoSub -> .)
    MINUS           reduce using rule 88 (cuadruploGoSub -> .)
    GT              reduce using rule 88 (cuadruploGoSub -> .)
    LT              reduce using rule 88 (cuadruploGoSub -> .)
    GTE             reduce using rule 88 (cuadruploGoSub -> .)
    LTE             reduce using rule 88 (cuadruploGoSub -> .)
    NE              reduce using rule 88 (cuadruploGoSub -> .)
    COMPARE         reduce using rule 88 (cuadruploGoSub -> .)
    AND             reduce using rule 88 (cuadruploGoSub -> .)
    RBRACKET        reduce using rule 88 (cuadruploGoSub -> .)
    OR              reduce using rule 88 (cuadruploGoSub -> .)
    RPAREN          reduce using rule 88 (cuadruploGoSub -> .)
    SEMICOLON       reduce using rule 88 (cuadruploGoSub -> .)
    COMMA           reduce using rule 88 (cuadruploGoSub -> .)
    TO              reduce using rule 88 (cuadruploGoSub -> .)

    cuadruploGoSub                 shift and go to state 236

state 221

    (86) auxiliarExp -> exp COMMA exp .
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          reduce using rule 86 (auxiliarExp -> exp COMMA exp .)
    OR              shift and go to state 87


state 222

    (66) asignacion -> ID guardaVariable_2 EQUALS addOperadorName . exp cuadruploAsignacion
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 237
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 223

    (67) asignacion -> ID guardaVariable_2 arr EQUALS . addOperadorName exp cuadruploAsignacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 238

state 224

    (68) asignacion -> ID guardaVariable_2 mat EQUALS . addOperadorName exp cuadruploAsignacion
    (70) addOperadorName -> .

    CTEI            reduce using rule 70 (addOperadorName -> .)
    CTEF            reduce using rule 70 (addOperadorName -> .)
    CTEC            reduce using rule 70 (addOperadorName -> .)
    CTESTRING       reduce using rule 70 (addOperadorName -> .)
    LPAREN          reduce using rule 70 (addOperadorName -> .)
    ID              reduce using rule 70 (addOperadorName -> .)
    OR              reduce using rule 70 (addOperadorName -> .)
    AND             reduce using rule 70 (addOperadorName -> .)
    GT              reduce using rule 70 (addOperadorName -> .)
    LT              reduce using rule 70 (addOperadorName -> .)
    GTE             reduce using rule 70 (addOperadorName -> .)
    LTE             reduce using rule 70 (addOperadorName -> .)
    NE              reduce using rule 70 (addOperadorName -> .)
    COMPARE         reduce using rule 70 (addOperadorName -> .)
    PLUS            reduce using rule 70 (addOperadorName -> .)
    MINUS           reduce using rule 70 (addOperadorName -> .)
    MUL             reduce using rule 70 (addOperadorName -> .)
    DIV             reduce using rule 70 (addOperadorName -> .)
    SEMICOLON       reduce using rule 70 (addOperadorName -> .)
    TO              reduce using rule 70 (addOperadorName -> .)

    addOperadorName                shift and go to state 239

state 225

    (90) lectura -> READ operadorRead LPAREN exp . cuadruploRead RPAREN
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr
    (92) cuadruploRead -> .

    OR              shift and go to state 87
    RPAREN          reduce using rule 92 (cuadruploRead -> .)

    cuadruploRead                  shift and go to state 240

state 226

    (93) escritura -> PRINT LPAREN operadorPrint escritura1 . cuadruploPrint RPAREN
    (99) cuadruploPrint -> .

    RPAREN          reduce using rule 99 (cuadruploPrint -> .)

    cuadruploPrint                 shift and go to state 241

state 227

    (94) escritura1 -> escritura2 . COMMA escritura2
    (95) escritura1 -> escritura2 .

    COMMA           shift and go to state 242
    RPAREN          reduce using rule 95 (escritura1 -> escritura2 .)


state 228

    (96) escritura2 -> COMILLA . CTESTRING COMILLA

    CTESTRING       shift and go to state 243


state 229

    (97) escritura2 -> exp . cuadruploPrint
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr
    (99) cuadruploPrint -> .

    OR              shift and go to state 87
    COMMA           reduce using rule 99 (cuadruploPrint -> .)
    RPAREN          reduce using rule 99 (cuadruploPrint -> .)

    cuadruploPrint                 shift and go to state 244

state 230

    (101) for -> FOR operadorFor LPAREN for1 . RPAREN cuadruploFor LCURLY estatutos RCURLY endFor

    RPAREN          shift and go to state 245


state 231

    (102) for1 -> FROM . asignacion TO exp
    (66) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion

    ID              shift and go to state 247

    asignacion                     shift and go to state 246

state 232

    (106) if -> IF LPAREN exp RPAREN . cuadruploIf LCURLY estatutos RCURLY else endIf
    (107) cuadruploIf -> .

    LCURLY          reduce using rule 107 (cuadruploIf -> .)

    cuadruploIf                    shift and go to state 248

state 233

    (112) while -> WHILE operadorWhile LPAREN exp . RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          shift and go to state 249
    OR              shift and go to state 87


state 234

    (50) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var . funcionGOTO estatutos RCURLY endFuncion
    (53) funcionGOTO -> .

    ID              reduce using rule 53 (funcionGOTO -> .)
    READ            reduce using rule 53 (funcionGOTO -> .)
    PRINT           reduce using rule 53 (funcionGOTO -> .)
    FOR             reduce using rule 53 (funcionGOTO -> .)
    IF              reduce using rule 53 (funcionGOTO -> .)
    WHILE           reduce using rule 53 (funcionGOTO -> .)
    RCURLY          reduce using rule 53 (funcionGOTO -> .)

    funcionGOTO                    shift and go to state 250

state 235

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var . funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (53) funcionGOTO -> .

    ID              reduce using rule 53 (funcionGOTO -> .)
    READ            reduce using rule 53 (funcionGOTO -> .)
    PRINT           reduce using rule 53 (funcionGOTO -> .)
    FOR             reduce using rule 53 (funcionGOTO -> .)
    IF              reduce using rule 53 (funcionGOTO -> .)
    WHILE           reduce using rule 53 (funcionGOTO -> .)
    RETURN          reduce using rule 53 (funcionGOTO -> .)

    funcionGOTO                    shift and go to state 251

state 236

    (83) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub . endProcesoLlena
    (89) endProcesoLlena -> .

    MUL             reduce using rule 89 (endProcesoLlena -> .)
    DIV             reduce using rule 89 (endProcesoLlena -> .)
    PLUS            reduce using rule 89 (endProcesoLlena -> .)
    MINUS           reduce using rule 89 (endProcesoLlena -> .)
    GT              reduce using rule 89 (endProcesoLlena -> .)
    LT              reduce using rule 89 (endProcesoLlena -> .)
    GTE             reduce using rule 89 (endProcesoLlena -> .)
    LTE             reduce using rule 89 (endProcesoLlena -> .)
    NE              reduce using rule 89 (endProcesoLlena -> .)
    COMPARE         reduce using rule 89 (endProcesoLlena -> .)
    AND             reduce using rule 89 (endProcesoLlena -> .)
    RBRACKET        reduce using rule 89 (endProcesoLlena -> .)
    OR              reduce using rule 89 (endProcesoLlena -> .)
    RPAREN          reduce using rule 89 (endProcesoLlena -> .)
    SEMICOLON       reduce using rule 89 (endProcesoLlena -> .)
    COMMA           reduce using rule 89 (endProcesoLlena -> .)
    TO              reduce using rule 89 (endProcesoLlena -> .)

    endProcesoLlena                shift and go to state 252

state 237

    (66) asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp . cuadruploAsignacion
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr
    (71) cuadruploAsignacion -> .

    OR              shift and go to state 87
    SEMICOLON       reduce using rule 71 (cuadruploAsignacion -> .)
    TO              reduce using rule 71 (cuadruploAsignacion -> .)

    cuadruploAsignacion            shift and go to state 253

state 238

    (67) asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName . exp cuadruploAsignacion
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 254
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 239

    (68) asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName . exp cuadruploAsignacion
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 255
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 240

    (90) lectura -> READ operadorRead LPAREN exp cuadruploRead . RPAREN

    RPAREN          shift and go to state 256


state 241

    (93) escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint . RPAREN

    RPAREN          shift and go to state 257


state 242

    (94) escritura1 -> escritura2 COMMA . escritura2
    (96) escritura2 -> . COMILLA CTESTRING COMILLA
    (97) escritura2 -> . exp cuadruploPrint
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    COMILLA         shift and go to state 228
    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    escritura2                     shift and go to state 258
    exp                            shift and go to state 229
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 243

    (96) escritura2 -> COMILLA CTESTRING . COMILLA

    COMILLA         shift and go to state 259


state 244

    (97) escritura2 -> exp cuadruploPrint .

    COMMA           reduce using rule 97 (escritura2 -> exp cuadruploPrint .)
    RPAREN          reduce using rule 97 (escritura2 -> exp cuadruploPrint .)


state 245

    (101) for -> FOR operadorFor LPAREN for1 RPAREN . cuadruploFor LCURLY estatutos RCURLY endFor
    (104) cuadruploFor -> .

    LCURLY          reduce using rule 104 (cuadruploFor -> .)

    cuadruploFor                   shift and go to state 260

state 246

    (102) for1 -> FROM asignacion . TO exp

    TO              shift and go to state 261


state 247

    (66) asignacion -> ID . guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> ID . guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> ID . guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (69) guardaVariable_2 -> .

    EQUALS          reduce using rule 69 (guardaVariable_2 -> .)
    LBRACKET        reduce using rule 69 (guardaVariable_2 -> .)

    guardaVariable_2               shift and go to state 180

state 248

    (106) if -> IF LPAREN exp RPAREN cuadruploIf . LCURLY estatutos RCURLY else endIf

    LCURLY          shift and go to state 262


state 249

    (112) while -> WHILE operadorWhile LPAREN exp RPAREN . cuadruploWhile LCURLY estatutos RCURLY endWhile
    (114) cuadruploWhile -> .

    LCURLY          reduce using rule 114 (cuadruploWhile -> .)

    cuadruploWhile                 shift and go to state 263

state 250

    (50) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO . estatutos RCURLY endFuncion
    (57) estatutos -> . estatutos_2 estatutos
    (58) estatutos -> .
    (59) estatutos_2 -> . asignacion SEMICOLON
    (60) estatutos_2 -> . llamada SEMICOLON
    (61) estatutos_2 -> . lectura SEMICOLON
    (62) estatutos_2 -> . escritura SEMICOLON
    (63) estatutos_2 -> . for
    (64) estatutos_2 -> . if
    (65) estatutos_2 -> . while
    (66) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (90) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (93) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (101) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (106) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (112) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 58 (estatutos -> .)
    ID              shift and go to state 142
    READ            shift and go to state 143
    PRINT           shift and go to state 144
    FOR             shift and go to state 145
    IF              shift and go to state 146
    WHILE           shift and go to state 147

    estatutos                      shift and go to state 264
    estatutos_2                    shift and go to state 134
    asignacion                     shift and go to state 135
    llamada                        shift and go to state 136
    lectura                        shift and go to state 137
    escritura                      shift and go to state 138
    for                            shift and go to state 139
    if                             shift and go to state 140
    while                          shift and go to state 141

state 251

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO . estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (57) estatutos -> . estatutos_2 estatutos
    (58) estatutos -> .
    (59) estatutos_2 -> . asignacion SEMICOLON
    (60) estatutos_2 -> . llamada SEMICOLON
    (61) estatutos_2 -> . lectura SEMICOLON
    (62) estatutos_2 -> . escritura SEMICOLON
    (63) estatutos_2 -> . for
    (64) estatutos_2 -> . if
    (65) estatutos_2 -> . while
    (66) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (90) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (93) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (101) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (106) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (112) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RETURN          reduce using rule 58 (estatutos -> .)
    ID              shift and go to state 142
    READ            shift and go to state 143
    PRINT           shift and go to state 144
    FOR             shift and go to state 145
    IF              shift and go to state 146
    WHILE           shift and go to state 147

    estatutos                      shift and go to state 265
    estatutos_2                    shift and go to state 134
    asignacion                     shift and go to state 135
    llamada                        shift and go to state 136
    lectura                        shift and go to state 137
    escritura                      shift and go to state 138
    for                            shift and go to state 139
    if                             shift and go to state 140
    while                          shift and go to state 141

state 252

    (83) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .

    MUL             reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    DIV             reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    PLUS            reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    MINUS           reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    GT              reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    LT              reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    GTE             reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    LTE             reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    NE              reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    COMPARE         reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    AND             reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    RBRACKET        reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    OR              reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    RPAREN          reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    SEMICOLON       reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    COMMA           reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    TO              reduce using rule 83 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)


state 253

    (66) asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion .

    SEMICOLON       reduce using rule 66 (asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion .)
    TO              reduce using rule 66 (asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion .)


state 254

    (67) asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp . cuadruploAsignacion
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr
    (71) cuadruploAsignacion -> .

    OR              shift and go to state 87
    SEMICOLON       reduce using rule 71 (cuadruploAsignacion -> .)
    TO              reduce using rule 71 (cuadruploAsignacion -> .)

    cuadruploAsignacion            shift and go to state 266

state 255

    (68) asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp . cuadruploAsignacion
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr
    (71) cuadruploAsignacion -> .

    OR              shift and go to state 87
    SEMICOLON       reduce using rule 71 (cuadruploAsignacion -> .)
    TO              reduce using rule 71 (cuadruploAsignacion -> .)

    cuadruploAsignacion            shift and go to state 267

state 256

    (90) lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN .

    SEMICOLON       reduce using rule 90 (lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN .)


state 257

    (93) escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN .

    SEMICOLON       reduce using rule 93 (escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN .)


state 258

    (94) escritura1 -> escritura2 COMMA escritura2 .

    RPAREN          reduce using rule 94 (escritura1 -> escritura2 COMMA escritura2 .)


state 259

    (96) escritura2 -> COMILLA CTESTRING COMILLA .

    COMMA           reduce using rule 96 (escritura2 -> COMILLA CTESTRING COMILLA .)
    RPAREN          reduce using rule 96 (escritura2 -> COMILLA CTESTRING COMILLA .)


state 260

    (101) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor . LCURLY estatutos RCURLY endFor

    LCURLY          shift and go to state 268


state 261

    (102) for1 -> FROM asignacion TO . exp
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    exp                            shift and go to state 269
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 262

    (106) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY . estatutos RCURLY else endIf
    (57) estatutos -> . estatutos_2 estatutos
    (58) estatutos -> .
    (59) estatutos_2 -> . asignacion SEMICOLON
    (60) estatutos_2 -> . llamada SEMICOLON
    (61) estatutos_2 -> . lectura SEMICOLON
    (62) estatutos_2 -> . escritura SEMICOLON
    (63) estatutos_2 -> . for
    (64) estatutos_2 -> . if
    (65) estatutos_2 -> . while
    (66) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (90) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (93) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (101) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (106) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (112) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 58 (estatutos -> .)
    ID              shift and go to state 142
    READ            shift and go to state 143
    PRINT           shift and go to state 144
    FOR             shift and go to state 145
    IF              shift and go to state 146
    WHILE           shift and go to state 147

    estatutos                      shift and go to state 270
    estatutos_2                    shift and go to state 134
    asignacion                     shift and go to state 135
    llamada                        shift and go to state 136
    lectura                        shift and go to state 137
    escritura                      shift and go to state 138
    for                            shift and go to state 139
    if                             shift and go to state 140
    while                          shift and go to state 141

state 263

    (112) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile . LCURLY estatutos RCURLY endWhile

    LCURLY          shift and go to state 271


state 264

    (50) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos . RCURLY endFuncion

    RCURLY          shift and go to state 272


state 265

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos . RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    RETURN          shift and go to state 273


state 266

    (67) asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion .

    SEMICOLON       reduce using rule 67 (asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion .)
    TO              reduce using rule 67 (asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion .)


state 267

    (68) asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion .

    SEMICOLON       reduce using rule 68 (asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion .)
    TO              reduce using rule 68 (asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion .)


state 268

    (101) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY . estatutos RCURLY endFor
    (57) estatutos -> . estatutos_2 estatutos
    (58) estatutos -> .
    (59) estatutos_2 -> . asignacion SEMICOLON
    (60) estatutos_2 -> . llamada SEMICOLON
    (61) estatutos_2 -> . lectura SEMICOLON
    (62) estatutos_2 -> . escritura SEMICOLON
    (63) estatutos_2 -> . for
    (64) estatutos_2 -> . if
    (65) estatutos_2 -> . while
    (66) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (90) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (93) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (101) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (106) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (112) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 58 (estatutos -> .)
    ID              shift and go to state 142
    READ            shift and go to state 143
    PRINT           shift and go to state 144
    FOR             shift and go to state 145
    IF              shift and go to state 146
    WHILE           shift and go to state 147

    estatutos                      shift and go to state 274
    estatutos_2                    shift and go to state 134
    asignacion                     shift and go to state 135
    llamada                        shift and go to state 136
    lectura                        shift and go to state 137
    escritura                      shift and go to state 138
    for                            shift and go to state 139
    if                             shift and go to state 140
    while                          shift and go to state 141

state 269

    (102) for1 -> FROM asignacion TO exp .
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          reduce using rule 102 (for1 -> FROM asignacion TO exp .)
    OR              shift and go to state 87


state 270

    (106) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos . RCURLY else endIf

    RCURLY          shift and go to state 275


state 271

    (112) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY . estatutos RCURLY endWhile
    (57) estatutos -> . estatutos_2 estatutos
    (58) estatutos -> .
    (59) estatutos_2 -> . asignacion SEMICOLON
    (60) estatutos_2 -> . llamada SEMICOLON
    (61) estatutos_2 -> . lectura SEMICOLON
    (62) estatutos_2 -> . escritura SEMICOLON
    (63) estatutos_2 -> . for
    (64) estatutos_2 -> . if
    (65) estatutos_2 -> . while
    (66) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (90) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (93) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (101) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (106) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (112) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 58 (estatutos -> .)
    ID              shift and go to state 142
    READ            shift and go to state 143
    PRINT           shift and go to state 144
    FOR             shift and go to state 145
    IF              shift and go to state 146
    WHILE           shift and go to state 147

    estatutos                      shift and go to state 276
    estatutos_2                    shift and go to state 134
    asignacion                     shift and go to state 135
    llamada                        shift and go to state 136
    lectura                        shift and go to state 137
    escritura                      shift and go to state 138
    for                            shift and go to state 139
    if                             shift and go to state 140
    while                          shift and go to state 141

state 272

    (50) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY . endFuncion
    (54) endFuncion -> .

    FUNCION         reduce using rule 54 (endFuncion -> .)
    MAIN            reduce using rule 54 (endFuncion -> .)
    $end            reduce using rule 54 (endFuncion -> .)

    endFuncion                     shift and go to state 277

state 273

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN . operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (55) operadorReturn -> .

    CTEI            reduce using rule 55 (operadorReturn -> .)
    CTEF            reduce using rule 55 (operadorReturn -> .)
    CTEC            reduce using rule 55 (operadorReturn -> .)
    CTESTRING       reduce using rule 55 (operadorReturn -> .)
    LPAREN          reduce using rule 55 (operadorReturn -> .)
    ID              reduce using rule 55 (operadorReturn -> .)
    OR              reduce using rule 55 (operadorReturn -> .)
    SEMICOLON       reduce using rule 55 (operadorReturn -> .)
    AND             reduce using rule 55 (operadorReturn -> .)
    GT              reduce using rule 55 (operadorReturn -> .)
    LT              reduce using rule 55 (operadorReturn -> .)
    GTE             reduce using rule 55 (operadorReturn -> .)
    LTE             reduce using rule 55 (operadorReturn -> .)
    NE              reduce using rule 55 (operadorReturn -> .)
    COMPARE         reduce using rule 55 (operadorReturn -> .)
    PLUS            reduce using rule 55 (operadorReturn -> .)
    MINUS           reduce using rule 55 (operadorReturn -> .)
    MUL             reduce using rule 55 (operadorReturn -> .)
    DIV             reduce using rule 55 (operadorReturn -> .)

    operadorReturn                 shift and go to state 278

state 274

    (101) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos . RCURLY endFor

    RCURLY          shift and go to state 279


state 275

    (106) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY . else endIf
    (109) else -> . ELSE cuadruploElse LCURLY estatutos RCURLY
    (110) else -> .

    ELSE            shift and go to state 281
    ID              reduce using rule 110 (else -> .)
    READ            reduce using rule 110 (else -> .)
    PRINT           reduce using rule 110 (else -> .)
    FOR             reduce using rule 110 (else -> .)
    IF              reduce using rule 110 (else -> .)
    WHILE           reduce using rule 110 (else -> .)
    RCURLY          reduce using rule 110 (else -> .)
    RETURN          reduce using rule 110 (else -> .)

    else                           shift and go to state 280

state 276

    (112) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos . RCURLY endWhile

    RCURLY          shift and go to state 282


state 277

    (50) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .

    FUNCION         reduce using rule 50 (funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .)
    MAIN            reduce using rule 50 (funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .)
    $end            reduce using rule 50 (funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .)


state 278

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn . exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (116) exp -> . nexp
    (117) exp -> . exp OR addOperadorName nexp cuadruploOr
    (119) nexp -> . compexp1
    (120) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (124) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (126) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (127) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (128) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (129) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (130) compexp1 -> . sumexp
    (132) sumexp -> . mulexp
    (133) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (134) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (136) mulexp -> . pexp
    (137) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (138) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (140) pexp -> . var1 guardaID
    (141) pexp -> . CTEI guardaCTE
    (142) pexp -> . CTEF guardaCTE
    (143) pexp -> . CTEC guardaCTE
    (144) pexp -> . CTESTRING guardaCTE
    (145) pexp -> . llamada
    (146) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 104
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)

    exp                            shift and go to state 283
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 279

    (101) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY . endFor
    (105) endFor -> .

    ID              reduce using rule 105 (endFor -> .)
    READ            reduce using rule 105 (endFor -> .)
    PRINT           reduce using rule 105 (endFor -> .)
    FOR             reduce using rule 105 (endFor -> .)
    IF              reduce using rule 105 (endFor -> .)
    WHILE           reduce using rule 105 (endFor -> .)
    RCURLY          reduce using rule 105 (endFor -> .)
    RETURN          reduce using rule 105 (endFor -> .)

    endFor                         shift and go to state 284

state 280

    (106) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else . endIf
    (108) endIf -> .

    ID              reduce using rule 108 (endIf -> .)
    READ            reduce using rule 108 (endIf -> .)
    PRINT           reduce using rule 108 (endIf -> .)
    FOR             reduce using rule 108 (endIf -> .)
    IF              reduce using rule 108 (endIf -> .)
    WHILE           reduce using rule 108 (endIf -> .)
    RCURLY          reduce using rule 108 (endIf -> .)
    RETURN          reduce using rule 108 (endIf -> .)

    endIf                          shift and go to state 285

state 281

    (109) else -> ELSE . cuadruploElse LCURLY estatutos RCURLY
    (111) cuadruploElse -> .

    LCURLY          reduce using rule 111 (cuadruploElse -> .)

    cuadruploElse                  shift and go to state 286

state 282

    (112) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY . endWhile
    (115) endWhile -> .

    ID              reduce using rule 115 (endWhile -> .)
    READ            reduce using rule 115 (endWhile -> .)
    PRINT           reduce using rule 115 (endWhile -> .)
    FOR             reduce using rule 115 (endWhile -> .)
    IF              reduce using rule 115 (endWhile -> .)
    WHILE           reduce using rule 115 (endWhile -> .)
    RCURLY          reduce using rule 115 (endWhile -> .)
    RETURN          reduce using rule 115 (endWhile -> .)

    endWhile                       shift and go to state 287

state 283

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp . cuadruploReturn SEMICOLON RCURLY endFuncion
    (117) exp -> exp . OR addOperadorName nexp cuadruploOr
    (56) cuadruploReturn -> .

    OR              shift and go to state 87
    SEMICOLON       reduce using rule 56 (cuadruploReturn -> .)

    cuadruploReturn                shift and go to state 288

state 284

    (101) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .

    ID              reduce using rule 101 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    READ            reduce using rule 101 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    PRINT           reduce using rule 101 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    FOR             reduce using rule 101 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    IF              reduce using rule 101 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    WHILE           reduce using rule 101 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    RCURLY          reduce using rule 101 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    RETURN          reduce using rule 101 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)


state 285

    (106) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .

    ID              reduce using rule 106 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    READ            reduce using rule 106 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    PRINT           reduce using rule 106 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    FOR             reduce using rule 106 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    IF              reduce using rule 106 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    WHILE           reduce using rule 106 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    RCURLY          reduce using rule 106 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    RETURN          reduce using rule 106 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)


state 286

    (109) else -> ELSE cuadruploElse . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 289


state 287

    (112) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .

    ID              reduce using rule 112 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    READ            reduce using rule 112 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    PRINT           reduce using rule 112 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    FOR             reduce using rule 112 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    IF              reduce using rule 112 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    WHILE           reduce using rule 112 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    RCURLY          reduce using rule 112 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    RETURN          reduce using rule 112 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)


state 288

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn . SEMICOLON RCURLY endFuncion

    SEMICOLON       shift and go to state 290


state 289

    (109) else -> ELSE cuadruploElse LCURLY . estatutos RCURLY
    (57) estatutos -> . estatutos_2 estatutos
    (58) estatutos -> .
    (59) estatutos_2 -> . asignacion SEMICOLON
    (60) estatutos_2 -> . llamada SEMICOLON
    (61) estatutos_2 -> . lectura SEMICOLON
    (62) estatutos_2 -> . escritura SEMICOLON
    (63) estatutos_2 -> . for
    (64) estatutos_2 -> . if
    (65) estatutos_2 -> . while
    (66) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (67) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (68) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (83) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (90) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (93) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (101) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (106) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (112) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 58 (estatutos -> .)
    ID              shift and go to state 142
    READ            shift and go to state 143
    PRINT           shift and go to state 144
    FOR             shift and go to state 145
    IF              shift and go to state 146
    WHILE           shift and go to state 147

    estatutos                      shift and go to state 291
    estatutos_2                    shift and go to state 134
    asignacion                     shift and go to state 135
    llamada                        shift and go to state 136
    lectura                        shift and go to state 137
    escritura                      shift and go to state 138
    for                            shift and go to state 139
    if                             shift and go to state 140
    while                          shift and go to state 141

state 290

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON . RCURLY endFuncion

    RCURLY          shift and go to state 292


state 291

    (109) else -> ELSE cuadruploElse LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 293


state 292

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY . endFuncion
    (54) endFuncion -> .

    FUNCION         reduce using rule 54 (endFuncion -> .)
    MAIN            reduce using rule 54 (endFuncion -> .)
    $end            reduce using rule 54 (endFuncion -> .)

    endFuncion                     shift and go to state 294

state 293

    (109) else -> ELSE cuadruploElse LCURLY estatutos RCURLY .

    ID              reduce using rule 109 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    READ            reduce using rule 109 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    PRINT           reduce using rule 109 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    FOR             reduce using rule 109 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    IF              reduce using rule 109 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    WHILE           reduce using rule 109 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 109 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    RETURN          reduce using rule 109 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)


state 294

    (51) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .

    FUNCION         reduce using rule 51 (funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .)
    MAIN            reduce using rule 51 (funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .)
    $end            reduce using rule 51 (funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 5 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 31 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 46 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 47 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 61 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 74 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 154 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 158 resolved as shift
