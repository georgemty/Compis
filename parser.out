Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PROGRAM ID SEMICOLON agregarProg prog_1
Rule 2     agregarProg -> <empty>
Rule 3     prog_1 -> var cuadruploMain metodos mainEnd prog_2
Rule 4     prog_1 -> var cuadruploMain metodos
Rule 5     prog_1 -> prog_2
Rule 6     prog_2 -> main
Rule 7     main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END
Rule 8     cuadruploMain -> <empty>
Rule 9     mainEnd -> <empty>
Rule 10    type -> INT guardaTipoDeVariable
Rule 11    type -> FLOAT guardaTipoDeVariable
Rule 12    type -> CHAR guardaTipoDeVariable
Rule 13    guardaTipoDeVariable -> <empty>
Rule 14    var -> vars
Rule 15    var -> <empty>
Rule 16    vars -> VAR var_2
Rule 17    var_2 -> var_2 type var1 SEMICOLON agregarVar
Rule 18    var_2 -> <empty>
Rule 19    var1 -> ID
Rule 20    var1 -> ID COMMA var1 agregarVar
Rule 21    var1 -> ID arr
Rule 22    var1 -> ID arr COMMA var1 agregarVar
Rule 23    var1 -> ID mat COMMA var1 agregarVar
Rule 24    var1 -> ID mat
Rule 25    var1 -> ID mat especial
Rule 26    var1 -> empty
Rule 27    empty -> <empty>
Rule 28    agregarVar -> <empty>
Rule 29    especial -> TRANSPUESTA
Rule 30    especial -> INVERSA
Rule 31    especial -> DETERMINANTE
Rule 32    arr -> LBRACKET CTEI RBRACKET
Rule 33    arr -> LBRACKET exp RBRACKET
Rule 34    mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 35    mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 36    mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
Rule 37    mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET
Rule 38    metodos -> funcion metodos
Rule 39    metodos -> <empty>
Rule 40    funcion -> FUNCION VOID funcion_1
Rule 41    funcion -> FUNCION INT funcion_2
Rule 42    funcion -> FUNCION CHAR funcion_2
Rule 43    funcion -> FUNCION FLOAT funcion_2
Rule 44    funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
Rule 45    funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
Rule 46    guardaFuncion -> <empty>
Rule 47    funcionGOTO -> <empty>
Rule 48    endFuncion -> <empty>
Rule 49    operadorReturn -> <empty>
Rule 50    cuadruploReturn -> <empty>
Rule 51    estatutos -> estatutos_2 estatutos
Rule 52    estatutos -> <empty>
Rule 53    estatutos_2 -> asignacion SEMICOLON
Rule 54    estatutos_2 -> llamada SEMICOLON
Rule 55    estatutos_2 -> lectura SEMICOLON
Rule 56    estatutos_2 -> escritura SEMICOLON
Rule 57    estatutos_2 -> for
Rule 58    estatutos_2 -> if
Rule 59    estatutos_2 -> while
Rule 60    asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
Rule 61    asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
Rule 62    asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
Rule 63    guardaVariable_2 -> <empty>
Rule 64    addOperadorName -> <empty>
Rule 65    cuadruploAsignacion -> <empty>
Rule 66    param -> ID agregarParametro
Rule 67    param -> ID COMMA param agregarParametro
Rule 68    param -> ID arr
Rule 69    param -> ID arr COMMA param
Rule 70    param -> ID mat COMMA param
Rule 71    param -> ID mat
Rule 72    param -> ID mat especial
Rule 73    param -> <empty>
Rule 74    agregarParametro -> <empty>
Rule 75    param2 -> param2 type param
Rule 76    param2 -> <empty>
Rule 77    llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
Rule 78    llamadaEra -> <empty>
Rule 79    auxiliarExp -> exp
Rule 80    auxiliarExp -> exp COMMA exp
Rule 81    cuadruploParametros -> <empty>
Rule 82    cuadruploGoSub -> <empty>
Rule 83    endProcesoLlena -> <empty>
Rule 84    lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN
Rule 85    operadorRead -> <empty>
Rule 86    cuadruploRead -> <empty>
Rule 87    escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
Rule 88    escritura1 -> escritura2 COMMA escritura2
Rule 89    escritura1 -> escritura2
Rule 90    escritura2 -> COMILLA CTESTRING COMILLA
Rule 91    escritura2 -> exp cuadruploPrint
Rule 92    operadorPrint -> <empty>
Rule 93    cuadruploPrint -> <empty>
Rule 94    guardaCTE -> <empty>
Rule 95    for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
Rule 96    for1 -> FROM asignacion TO exp
Rule 97    operadorFor -> <empty>
Rule 98    cuadruploFor -> <empty>
Rule 99    endFor -> <empty>
Rule 100   if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
Rule 101   cuadruploIf -> <empty>
Rule 102   endIf -> <empty>
Rule 103   else -> ELSE cuadruploElse LCURLY estatutos RCURLY
Rule 104   else -> <empty>
Rule 105   cuadruploElse -> <empty>
Rule 106   while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
Rule 107   operadorWhile -> <empty>
Rule 108   cuadruploWhile -> <empty>
Rule 109   endWhile -> <empty>
Rule 110   exp -> nexp
Rule 111   exp -> exp OR addOperadorName nexp cuadruploOr
Rule 112   cuadruploOr -> <empty>
Rule 113   nexp -> compexp1
Rule 114   nexp -> nexp AND addOperadorName compexp1 cuadruploAnd
Rule 115   cuadruploAnd -> <empty>
Rule 116   compexp -> sumexp
Rule 117   compexp -> compexp1 sumexp
Rule 118   compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion
Rule 119   compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion
Rule 120   compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion
Rule 121   compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion
Rule 122   compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion
Rule 123   compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
Rule 124   compexp1 -> sumexp
Rule 125   cuadruploComparacion -> <empty>
Rule 126   sumexp -> mulexp
Rule 127   sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma
Rule 128   sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma
Rule 129   cuadruploSuma -> <empty>
Rule 130   mulexp -> pexp
Rule 131   mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion
Rule 132   mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion
Rule 133   cuadruploMultiplicacion -> <empty>
Rule 134   pexp -> var1 guardaID
Rule 135   pexp -> CTEI guardaCTE
Rule 136   pexp -> CTEF guardaCTE
Rule 137   pexp -> CTEC guardaCTE
Rule 138   pexp -> CTESTRING guardaCTE
Rule 139   pexp -> llamada
Rule 140   pexp -> LPAREN exp RPAREN
Rule 141   guardaID -> <empty>

Terminals, with rules where they appear

AND                  : 114
CHAR                 : 12 42
COMILLA              : 90 90
COMMA                : 20 22 23 67 69 70 80 88
COMPARE              : 123
CTEC                 : 137
CTEF                 : 136
CTEI                 : 32 34 34 36 37 135
CTESTRING            : 90 138
DETERMINANTE         : 31
DIV                  : 132
ELSE                 : 103
END                  : 7
EQUALS               : 60 61 62
FLOAT                : 11 43
FOR                  : 95
FROM                 : 96
FUNCION              : 40 41 42 43
GT                   : 118
GTE                  : 120
ID                   : 1 19 20 21 22 23 24 25 44 45 60 61 62 66 67 68 69 70 71 72 77
IF                   : 100
INT                  : 10 41
INVERSA              : 30
LBRACKET             : 32 33 34 34 35 35 36 36 37 37
LCURLY               : 7 44 45 95 100 103 106
LPAREN               : 7 44 45 77 84 87 95 100 106 140
LT                   : 119
LTE                  : 121
MAIN                 : 7
MINUS                : 128
MUL                  : 131
NE                   : 122
OR                   : 111
PLUS                 : 127
PRINT                : 87
PROGRAM              : 1
RBRACKET             : 32 33 34 34 35 35 36 36 37 37
RCURLY               : 7 44 45 95 100 103 106
READ                 : 84
RETURN               : 45
RPAREN               : 7 44 45 77 84 87 95 100 106 140
SEMICOLON            : 1 17 44 45 45 53 54 55 56
TO                   : 96
TRANSPUESTA          : 29
VAR                  : 16
VOID                 : 40
WHILE                : 106
error                : 

Nonterminals, with rules where they appear

addOperadorName      : 60 61 62 111 114 118 119 120 121 122 123 127 128 131 132
agregarParametro     : 66 67
agregarProg          : 1
agregarVar           : 17 20 22 23
arr                  : 21 22 61 68 69
asignacion           : 53 96
auxiliarExp          : 77
compexp              : 
compexp1             : 113 114 117 118 119 120 121 122 123
cuadruploAnd         : 114
cuadruploAsignacion  : 60 61 62
cuadruploComparacion : 118 119 120 121 122 123
cuadruploElse        : 103
cuadruploFor         : 95
cuadruploGoSub       : 77
cuadruploIf          : 100
cuadruploMain        : 3 4
cuadruploMultiplicacion : 131 132
cuadruploOr          : 111
cuadruploParametros  : 77
cuadruploPrint       : 87 91
cuadruploRead        : 84
cuadruploReturn      : 45
cuadruploSuma        : 127 128
cuadruploWhile       : 106
else                 : 100
empty                : 26
endFor               : 95
endFuncion           : 44 45
endIf                : 100
endProcesoLlena      : 77
endWhile             : 106
escritura            : 56
escritura1           : 87
escritura2           : 88 88 89
especial             : 25 72
estatutos            : 7 44 45 51 95 100 103 106
estatutos_2          : 51
exp                  : 33 35 35 36 37 45 60 61 62 79 80 80 84 91 96 100 106 111 140
for                  : 57
for1                 : 95
funcion              : 38
funcionGOTO          : 44 45
funcion_1            : 40
funcion_2            : 41 42 43
guardaCTE            : 135 136 137 138
guardaFuncion        : 7 44 45
guardaID             : 134
guardaTipoDeVariable : 10 11 12
guardaVariable_2     : 60 61 62
if                   : 58
lectura              : 55
llamada              : 54 139
llamadaEra           : 77
main                 : 6
mainEnd              : 3
mat                  : 23 24 25 62 70 71 72
metodos              : 3 4 38
mulexp               : 126 127 128 131 132
nexp                 : 110 111 114
operadorFor          : 95
operadorPrint        : 87
operadorRead         : 84
operadorReturn       : 45
operadorWhile        : 106
param                : 67 69 70 75
param2               : 7 44 45 75
pexp                 : 130 131 132
prog                 : 0
prog_1               : 1
prog_2               : 3 5
sumexp               : 116 117 118 119 120 121 122 123 124 127 128
type                 : 17 75
var                  : 3 4 7 44 45
var1                 : 17 20 22 23 134
var_2                : 16 17
vars                 : 14
while                : 59

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PROGRAM ID SEMICOLON agregarProg prog_1

    PROGRAM         shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> PROGRAM . ID SEMICOLON agregarProg prog_1

    ID              shift and go to state 3


state 3

    (1) prog -> PROGRAM ID . SEMICOLON agregarProg prog_1

    SEMICOLON       shift and go to state 4


state 4

    (1) prog -> PROGRAM ID SEMICOLON . agregarProg prog_1
    (2) agregarProg -> .

    VAR             reduce using rule 2 (agregarProg -> .)
    MAIN            reduce using rule 2 (agregarProg -> .)
    FUNCION         reduce using rule 2 (agregarProg -> .)
    $end            reduce using rule 2 (agregarProg -> .)

    agregarProg                    shift and go to state 5

state 5

    (1) prog -> PROGRAM ID SEMICOLON agregarProg . prog_1
    (3) prog_1 -> . var cuadruploMain metodos mainEnd prog_2
    (4) prog_1 -> . var cuadruploMain metodos
    (5) prog_1 -> . prog_2
    (14) var -> . vars
    (15) var -> .
    (6) prog_2 -> . main
    (16) vars -> . VAR var_2
    (7) main -> . MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END

  ! shift/reduce conflict for MAIN resolved as shift
    FUNCION         reduce using rule 15 (var -> .)
    $end            reduce using rule 15 (var -> .)
    VAR             shift and go to state 11
    MAIN            shift and go to state 12

  ! MAIN            [ reduce using rule 15 (var -> .) ]

    prog_1                         shift and go to state 6
    var                            shift and go to state 7
    prog_2                         shift and go to state 8
    vars                           shift and go to state 9
    main                           shift and go to state 10

state 6

    (1) prog -> PROGRAM ID SEMICOLON agregarProg prog_1 .

    $end            reduce using rule 1 (prog -> PROGRAM ID SEMICOLON agregarProg prog_1 .)


state 7

    (3) prog_1 -> var . cuadruploMain metodos mainEnd prog_2
    (4) prog_1 -> var . cuadruploMain metodos
    (8) cuadruploMain -> .

    FUNCION         reduce using rule 8 (cuadruploMain -> .)
    MAIN            reduce using rule 8 (cuadruploMain -> .)
    $end            reduce using rule 8 (cuadruploMain -> .)

    cuadruploMain                  shift and go to state 13

state 8

    (5) prog_1 -> prog_2 .

    $end            reduce using rule 5 (prog_1 -> prog_2 .)


state 9

    (14) var -> vars .

    FUNCION         reduce using rule 14 (var -> vars .)
    MAIN            reduce using rule 14 (var -> vars .)
    $end            reduce using rule 14 (var -> vars .)
    ID              reduce using rule 14 (var -> vars .)
    READ            reduce using rule 14 (var -> vars .)
    PRINT           reduce using rule 14 (var -> vars .)
    FOR             reduce using rule 14 (var -> vars .)
    IF              reduce using rule 14 (var -> vars .)
    WHILE           reduce using rule 14 (var -> vars .)
    RCURLY          reduce using rule 14 (var -> vars .)
    RETURN          reduce using rule 14 (var -> vars .)


state 10

    (6) prog_2 -> main .

    $end            reduce using rule 6 (prog_2 -> main .)


state 11

    (16) vars -> VAR . var_2
    (17) var_2 -> . var_2 type var1 SEMICOLON agregarVar
    (18) var_2 -> .

    INT             reduce using rule 18 (var_2 -> .)
    FLOAT           reduce using rule 18 (var_2 -> .)
    CHAR            reduce using rule 18 (var_2 -> .)
    FUNCION         reduce using rule 18 (var_2 -> .)
    MAIN            reduce using rule 18 (var_2 -> .)
    $end            reduce using rule 18 (var_2 -> .)
    ID              reduce using rule 18 (var_2 -> .)
    READ            reduce using rule 18 (var_2 -> .)
    PRINT           reduce using rule 18 (var_2 -> .)
    FOR             reduce using rule 18 (var_2 -> .)
    IF              reduce using rule 18 (var_2 -> .)
    WHILE           reduce using rule 18 (var_2 -> .)
    RCURLY          reduce using rule 18 (var_2 -> .)
    RETURN          reduce using rule 18 (var_2 -> .)

    var_2                          shift and go to state 14

state 12

    (7) main -> MAIN . guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END
    (46) guardaFuncion -> .

    LPAREN          reduce using rule 46 (guardaFuncion -> .)

    guardaFuncion                  shift and go to state 15

state 13

    (3) prog_1 -> var cuadruploMain . metodos mainEnd prog_2
    (4) prog_1 -> var cuadruploMain . metodos
    (38) metodos -> . funcion metodos
    (39) metodos -> .
    (40) funcion -> . FUNCION VOID funcion_1
    (41) funcion -> . FUNCION INT funcion_2
    (42) funcion -> . FUNCION CHAR funcion_2
    (43) funcion -> . FUNCION FLOAT funcion_2

    MAIN            reduce using rule 39 (metodos -> .)
    $end            reduce using rule 39 (metodos -> .)
    FUNCION         shift and go to state 18

    metodos                        shift and go to state 16
    funcion                        shift and go to state 17

state 14

    (16) vars -> VAR var_2 .
    (17) var_2 -> var_2 . type var1 SEMICOLON agregarVar
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    FUNCION         reduce using rule 16 (vars -> VAR var_2 .)
    MAIN            reduce using rule 16 (vars -> VAR var_2 .)
    $end            reduce using rule 16 (vars -> VAR var_2 .)
    ID              reduce using rule 16 (vars -> VAR var_2 .)
    READ            reduce using rule 16 (vars -> VAR var_2 .)
    PRINT           reduce using rule 16 (vars -> VAR var_2 .)
    FOR             reduce using rule 16 (vars -> VAR var_2 .)
    IF              reduce using rule 16 (vars -> VAR var_2 .)
    WHILE           reduce using rule 16 (vars -> VAR var_2 .)
    RCURLY          reduce using rule 16 (vars -> VAR var_2 .)
    RETURN          reduce using rule 16 (vars -> VAR var_2 .)
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    type                           shift and go to state 19

state 15

    (7) main -> MAIN guardaFuncion . LPAREN param2 RPAREN LCURLY var estatutos RCURLY END

    LPAREN          shift and go to state 23


state 16

    (3) prog_1 -> var cuadruploMain metodos . mainEnd prog_2
    (4) prog_1 -> var cuadruploMain metodos .
    (9) mainEnd -> .

    $end            reduce using rule 4 (prog_1 -> var cuadruploMain metodos .)
    MAIN            reduce using rule 9 (mainEnd -> .)

    mainEnd                        shift and go to state 24

state 17

    (38) metodos -> funcion . metodos
    (38) metodos -> . funcion metodos
    (39) metodos -> .
    (40) funcion -> . FUNCION VOID funcion_1
    (41) funcion -> . FUNCION INT funcion_2
    (42) funcion -> . FUNCION CHAR funcion_2
    (43) funcion -> . FUNCION FLOAT funcion_2

    MAIN            reduce using rule 39 (metodos -> .)
    $end            reduce using rule 39 (metodos -> .)
    FUNCION         shift and go to state 18

    funcion                        shift and go to state 17
    metodos                        shift and go to state 25

state 18

    (40) funcion -> FUNCION . VOID funcion_1
    (41) funcion -> FUNCION . INT funcion_2
    (42) funcion -> FUNCION . CHAR funcion_2
    (43) funcion -> FUNCION . FLOAT funcion_2

    VOID            shift and go to state 26
    INT             shift and go to state 27
    CHAR            shift and go to state 28
    FLOAT           shift and go to state 29


state 19

    (17) var_2 -> var_2 type . var1 SEMICOLON agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (27) empty -> .

    ID              shift and go to state 31
    SEMICOLON       reduce using rule 27 (empty -> .)

    var1                           shift and go to state 30
    empty                          shift and go to state 32

state 20

    (10) type -> INT . guardaTipoDeVariable
    (13) guardaTipoDeVariable -> .

    ID              reduce using rule 13 (guardaTipoDeVariable -> .)
    SEMICOLON       reduce using rule 13 (guardaTipoDeVariable -> .)
    RPAREN          reduce using rule 13 (guardaTipoDeVariable -> .)
    INT             reduce using rule 13 (guardaTipoDeVariable -> .)
    FLOAT           reduce using rule 13 (guardaTipoDeVariable -> .)
    CHAR            reduce using rule 13 (guardaTipoDeVariable -> .)

    guardaTipoDeVariable           shift and go to state 33

state 21

    (11) type -> FLOAT . guardaTipoDeVariable
    (13) guardaTipoDeVariable -> .

    ID              reduce using rule 13 (guardaTipoDeVariable -> .)
    SEMICOLON       reduce using rule 13 (guardaTipoDeVariable -> .)
    RPAREN          reduce using rule 13 (guardaTipoDeVariable -> .)
    INT             reduce using rule 13 (guardaTipoDeVariable -> .)
    FLOAT           reduce using rule 13 (guardaTipoDeVariable -> .)
    CHAR            reduce using rule 13 (guardaTipoDeVariable -> .)

    guardaTipoDeVariable           shift and go to state 34

state 22

    (12) type -> CHAR . guardaTipoDeVariable
    (13) guardaTipoDeVariable -> .

    ID              reduce using rule 13 (guardaTipoDeVariable -> .)
    SEMICOLON       reduce using rule 13 (guardaTipoDeVariable -> .)
    RPAREN          reduce using rule 13 (guardaTipoDeVariable -> .)
    INT             reduce using rule 13 (guardaTipoDeVariable -> .)
    FLOAT           reduce using rule 13 (guardaTipoDeVariable -> .)
    CHAR            reduce using rule 13 (guardaTipoDeVariable -> .)

    guardaTipoDeVariable           shift and go to state 35

state 23

    (7) main -> MAIN guardaFuncion LPAREN . param2 RPAREN LCURLY var estatutos RCURLY END
    (75) param2 -> . param2 type param
    (76) param2 -> .

    RPAREN          reduce using rule 76 (param2 -> .)
    INT             reduce using rule 76 (param2 -> .)
    FLOAT           reduce using rule 76 (param2 -> .)
    CHAR            reduce using rule 76 (param2 -> .)

    param2                         shift and go to state 36

state 24

    (3) prog_1 -> var cuadruploMain metodos mainEnd . prog_2
    (6) prog_2 -> . main
    (7) main -> . MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END

    MAIN            shift and go to state 12

    prog_2                         shift and go to state 37
    main                           shift and go to state 10

state 25

    (38) metodos -> funcion metodos .

    MAIN            reduce using rule 38 (metodos -> funcion metodos .)
    $end            reduce using rule 38 (metodos -> funcion metodos .)


state 26

    (40) funcion -> FUNCION VOID . funcion_1
    (44) funcion_1 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion

    ID              shift and go to state 39

    funcion_1                      shift and go to state 38

state 27

    (41) funcion -> FUNCION INT . funcion_2
    (45) funcion_2 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    ID              shift and go to state 41

    funcion_2                      shift and go to state 40

state 28

    (42) funcion -> FUNCION CHAR . funcion_2
    (45) funcion_2 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    ID              shift and go to state 41

    funcion_2                      shift and go to state 42

state 29

    (43) funcion -> FUNCION FLOAT . funcion_2
    (45) funcion_2 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    ID              shift and go to state 41

    funcion_2                      shift and go to state 43

state 30

    (17) var_2 -> var_2 type var1 . SEMICOLON agregarVar

    SEMICOLON       shift and go to state 44


state 31

    (19) var1 -> ID .
    (20) var1 -> ID . COMMA var1 agregarVar
    (21) var1 -> ID . arr
    (22) var1 -> ID . arr COMMA var1 agregarVar
    (23) var1 -> ID . mat COMMA var1 agregarVar
    (24) var1 -> ID . mat
    (25) var1 -> ID . mat especial
    (32) arr -> . LBRACKET CTEI RBRACKET
    (33) arr -> . LBRACKET exp RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (35) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (36) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (37) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 19 (var1 -> ID .)
    MUL             reduce using rule 19 (var1 -> ID .)
    DIV             reduce using rule 19 (var1 -> ID .)
    PLUS            reduce using rule 19 (var1 -> ID .)
    MINUS           reduce using rule 19 (var1 -> ID .)
    GT              reduce using rule 19 (var1 -> ID .)
    LT              reduce using rule 19 (var1 -> ID .)
    GTE             reduce using rule 19 (var1 -> ID .)
    LTE             reduce using rule 19 (var1 -> ID .)
    NE              reduce using rule 19 (var1 -> ID .)
    COMPARE         reduce using rule 19 (var1 -> ID .)
    AND             reduce using rule 19 (var1 -> ID .)
    RBRACKET        reduce using rule 19 (var1 -> ID .)
    OR              reduce using rule 19 (var1 -> ID .)
    RPAREN          reduce using rule 19 (var1 -> ID .)
    TO              reduce using rule 19 (var1 -> ID .)
    COMMA           shift and go to state 45
    LBRACKET        shift and go to state 48

  ! COMMA           [ reduce using rule 19 (var1 -> ID .) ]

    arr                            shift and go to state 46
    mat                            shift and go to state 47

state 32

    (26) var1 -> empty .

    SEMICOLON       reduce using rule 26 (var1 -> empty .)
    MUL             reduce using rule 26 (var1 -> empty .)
    DIV             reduce using rule 26 (var1 -> empty .)
    PLUS            reduce using rule 26 (var1 -> empty .)
    MINUS           reduce using rule 26 (var1 -> empty .)
    GT              reduce using rule 26 (var1 -> empty .)
    LT              reduce using rule 26 (var1 -> empty .)
    GTE             reduce using rule 26 (var1 -> empty .)
    LTE             reduce using rule 26 (var1 -> empty .)
    NE              reduce using rule 26 (var1 -> empty .)
    COMPARE         reduce using rule 26 (var1 -> empty .)
    AND             reduce using rule 26 (var1 -> empty .)
    RBRACKET        reduce using rule 26 (var1 -> empty .)
    OR              reduce using rule 26 (var1 -> empty .)
    RPAREN          reduce using rule 26 (var1 -> empty .)
    COMMA           reduce using rule 26 (var1 -> empty .)
    TO              reduce using rule 26 (var1 -> empty .)


state 33

    (10) type -> INT guardaTipoDeVariable .

    ID              reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    SEMICOLON       reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    RPAREN          reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    INT             reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    FLOAT           reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    CHAR            reduce using rule 10 (type -> INT guardaTipoDeVariable .)


state 34

    (11) type -> FLOAT guardaTipoDeVariable .

    ID              reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    SEMICOLON       reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    RPAREN          reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    INT             reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    FLOAT           reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    CHAR            reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)


state 35

    (12) type -> CHAR guardaTipoDeVariable .

    ID              reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    SEMICOLON       reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    RPAREN          reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    INT             reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    FLOAT           reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    CHAR            reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)


state 36

    (7) main -> MAIN guardaFuncion LPAREN param2 . RPAREN LCURLY var estatutos RCURLY END
    (75) param2 -> param2 . type param
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    RPAREN          shift and go to state 49
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    type                           shift and go to state 50

state 37

    (3) prog_1 -> var cuadruploMain metodos mainEnd prog_2 .

    $end            reduce using rule 3 (prog_1 -> var cuadruploMain metodos mainEnd prog_2 .)


state 38

    (40) funcion -> FUNCION VOID funcion_1 .

    FUNCION         reduce using rule 40 (funcion -> FUNCION VOID funcion_1 .)
    MAIN            reduce using rule 40 (funcion -> FUNCION VOID funcion_1 .)
    $end            reduce using rule 40 (funcion -> FUNCION VOID funcion_1 .)


state 39

    (44) funcion_1 -> ID . guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
    (46) guardaFuncion -> .

    LPAREN          reduce using rule 46 (guardaFuncion -> .)

    guardaFuncion                  shift and go to state 51

state 40

    (41) funcion -> FUNCION INT funcion_2 .

    FUNCION         reduce using rule 41 (funcion -> FUNCION INT funcion_2 .)
    MAIN            reduce using rule 41 (funcion -> FUNCION INT funcion_2 .)
    $end            reduce using rule 41 (funcion -> FUNCION INT funcion_2 .)


state 41

    (45) funcion_2 -> ID . guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (46) guardaFuncion -> .

    LPAREN          reduce using rule 46 (guardaFuncion -> .)

    guardaFuncion                  shift and go to state 52

state 42

    (42) funcion -> FUNCION CHAR funcion_2 .

    FUNCION         reduce using rule 42 (funcion -> FUNCION CHAR funcion_2 .)
    MAIN            reduce using rule 42 (funcion -> FUNCION CHAR funcion_2 .)
    $end            reduce using rule 42 (funcion -> FUNCION CHAR funcion_2 .)


state 43

    (43) funcion -> FUNCION FLOAT funcion_2 .

    FUNCION         reduce using rule 43 (funcion -> FUNCION FLOAT funcion_2 .)
    MAIN            reduce using rule 43 (funcion -> FUNCION FLOAT funcion_2 .)
    $end            reduce using rule 43 (funcion -> FUNCION FLOAT funcion_2 .)


state 44

    (17) var_2 -> var_2 type var1 SEMICOLON . agregarVar
    (28) agregarVar -> .

    INT             reduce using rule 28 (agregarVar -> .)
    FLOAT           reduce using rule 28 (agregarVar -> .)
    CHAR            reduce using rule 28 (agregarVar -> .)
    FUNCION         reduce using rule 28 (agregarVar -> .)
    MAIN            reduce using rule 28 (agregarVar -> .)
    $end            reduce using rule 28 (agregarVar -> .)
    ID              reduce using rule 28 (agregarVar -> .)
    READ            reduce using rule 28 (agregarVar -> .)
    PRINT           reduce using rule 28 (agregarVar -> .)
    FOR             reduce using rule 28 (agregarVar -> .)
    IF              reduce using rule 28 (agregarVar -> .)
    WHILE           reduce using rule 28 (agregarVar -> .)
    RCURLY          reduce using rule 28 (agregarVar -> .)
    RETURN          reduce using rule 28 (agregarVar -> .)

    agregarVar                     shift and go to state 53

state 45

    (20) var1 -> ID COMMA . var1 agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (27) empty -> .

    ID              shift and go to state 31
    SEMICOLON       reduce using rule 27 (empty -> .)
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    var1                           shift and go to state 54
    empty                          shift and go to state 32

state 46

    (21) var1 -> ID arr .
    (22) var1 -> ID arr . COMMA var1 agregarVar

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 21 (var1 -> ID arr .)
    MUL             reduce using rule 21 (var1 -> ID arr .)
    DIV             reduce using rule 21 (var1 -> ID arr .)
    PLUS            reduce using rule 21 (var1 -> ID arr .)
    MINUS           reduce using rule 21 (var1 -> ID arr .)
    GT              reduce using rule 21 (var1 -> ID arr .)
    LT              reduce using rule 21 (var1 -> ID arr .)
    GTE             reduce using rule 21 (var1 -> ID arr .)
    LTE             reduce using rule 21 (var1 -> ID arr .)
    NE              reduce using rule 21 (var1 -> ID arr .)
    COMPARE         reduce using rule 21 (var1 -> ID arr .)
    AND             reduce using rule 21 (var1 -> ID arr .)
    RBRACKET        reduce using rule 21 (var1 -> ID arr .)
    OR              reduce using rule 21 (var1 -> ID arr .)
    RPAREN          reduce using rule 21 (var1 -> ID arr .)
    TO              reduce using rule 21 (var1 -> ID arr .)
    COMMA           shift and go to state 55

  ! COMMA           [ reduce using rule 21 (var1 -> ID arr .) ]


state 47

    (23) var1 -> ID mat . COMMA var1 agregarVar
    (24) var1 -> ID mat .
    (25) var1 -> ID mat . especial
    (29) especial -> . TRANSPUESTA
    (30) especial -> . INVERSA
    (31) especial -> . DETERMINANTE

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 56
    SEMICOLON       reduce using rule 24 (var1 -> ID mat .)
    MUL             reduce using rule 24 (var1 -> ID mat .)
    DIV             reduce using rule 24 (var1 -> ID mat .)
    PLUS            reduce using rule 24 (var1 -> ID mat .)
    MINUS           reduce using rule 24 (var1 -> ID mat .)
    GT              reduce using rule 24 (var1 -> ID mat .)
    LT              reduce using rule 24 (var1 -> ID mat .)
    GTE             reduce using rule 24 (var1 -> ID mat .)
    LTE             reduce using rule 24 (var1 -> ID mat .)
    NE              reduce using rule 24 (var1 -> ID mat .)
    COMPARE         reduce using rule 24 (var1 -> ID mat .)
    AND             reduce using rule 24 (var1 -> ID mat .)
    RBRACKET        reduce using rule 24 (var1 -> ID mat .)
    OR              reduce using rule 24 (var1 -> ID mat .)
    RPAREN          reduce using rule 24 (var1 -> ID mat .)
    TO              reduce using rule 24 (var1 -> ID mat .)
    TRANSPUESTA     shift and go to state 58
    INVERSA         shift and go to state 59
    DETERMINANTE    shift and go to state 60

  ! COMMA           [ reduce using rule 24 (var1 -> ID mat .) ]

    especial                       shift and go to state 57

state 48

    (32) arr -> LBRACKET . CTEI RBRACKET
    (33) arr -> LBRACKET . exp RBRACKET
    (34) mat -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET
    (35) mat -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (36) mat -> LBRACKET . exp RBRACKET LBRACKET CTEI RBRACKET
    (37) mat -> LBRACKET . CTEI RBRACKET LBRACKET exp RBRACKET
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 61
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 62
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 49

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN . LCURLY var estatutos RCURLY END

    LCURLY          shift and go to state 75


state 50

    (75) param2 -> param2 type . param
    (66) param -> . ID agregarParametro
    (67) param -> . ID COMMA param agregarParametro
    (68) param -> . ID arr
    (69) param -> . ID arr COMMA param
    (70) param -> . ID mat COMMA param
    (71) param -> . ID mat
    (72) param -> . ID mat especial
    (73) param -> .

    ID              shift and go to state 77
    RPAREN          reduce using rule 73 (param -> .)
    INT             reduce using rule 73 (param -> .)
    FLOAT           reduce using rule 73 (param -> .)
    CHAR            reduce using rule 73 (param -> .)

    param                          shift and go to state 76

state 51

    (44) funcion_1 -> ID guardaFuncion . LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion

    LPAREN          shift and go to state 78


state 52

    (45) funcion_2 -> ID guardaFuncion . LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    LPAREN          shift and go to state 79


state 53

    (17) var_2 -> var_2 type var1 SEMICOLON agregarVar .

    INT             reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    FLOAT           reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    CHAR            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    FUNCION         reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    MAIN            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    $end            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    ID              reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    READ            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    PRINT           reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    FOR             reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    IF              reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    WHILE           reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    RCURLY          reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    RETURN          reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)


state 54

    (20) var1 -> ID COMMA var1 . agregarVar
    (28) agregarVar -> .

    SEMICOLON       reduce using rule 28 (agregarVar -> .)
    MUL             reduce using rule 28 (agregarVar -> .)
    DIV             reduce using rule 28 (agregarVar -> .)
    PLUS            reduce using rule 28 (agregarVar -> .)
    MINUS           reduce using rule 28 (agregarVar -> .)
    GT              reduce using rule 28 (agregarVar -> .)
    LT              reduce using rule 28 (agregarVar -> .)
    GTE             reduce using rule 28 (agregarVar -> .)
    LTE             reduce using rule 28 (agregarVar -> .)
    NE              reduce using rule 28 (agregarVar -> .)
    COMPARE         reduce using rule 28 (agregarVar -> .)
    AND             reduce using rule 28 (agregarVar -> .)
    RBRACKET        reduce using rule 28 (agregarVar -> .)
    OR              reduce using rule 28 (agregarVar -> .)
    RPAREN          reduce using rule 28 (agregarVar -> .)
    COMMA           reduce using rule 28 (agregarVar -> .)
    TO              reduce using rule 28 (agregarVar -> .)

    agregarVar                     shift and go to state 80

state 55

    (22) var1 -> ID arr COMMA . var1 agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (27) empty -> .

    ID              shift and go to state 31
    SEMICOLON       reduce using rule 27 (empty -> .)
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    var1                           shift and go to state 81
    empty                          shift and go to state 32

state 56

    (23) var1 -> ID mat COMMA . var1 agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (27) empty -> .

    ID              shift and go to state 31
    SEMICOLON       reduce using rule 27 (empty -> .)
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    var1                           shift and go to state 82
    empty                          shift and go to state 32

state 57

    (25) var1 -> ID mat especial .

    SEMICOLON       reduce using rule 25 (var1 -> ID mat especial .)
    MUL             reduce using rule 25 (var1 -> ID mat especial .)
    DIV             reduce using rule 25 (var1 -> ID mat especial .)
    PLUS            reduce using rule 25 (var1 -> ID mat especial .)
    MINUS           reduce using rule 25 (var1 -> ID mat especial .)
    GT              reduce using rule 25 (var1 -> ID mat especial .)
    LT              reduce using rule 25 (var1 -> ID mat especial .)
    GTE             reduce using rule 25 (var1 -> ID mat especial .)
    LTE             reduce using rule 25 (var1 -> ID mat especial .)
    NE              reduce using rule 25 (var1 -> ID mat especial .)
    COMPARE         reduce using rule 25 (var1 -> ID mat especial .)
    AND             reduce using rule 25 (var1 -> ID mat especial .)
    RBRACKET        reduce using rule 25 (var1 -> ID mat especial .)
    OR              reduce using rule 25 (var1 -> ID mat especial .)
    RPAREN          reduce using rule 25 (var1 -> ID mat especial .)
    COMMA           reduce using rule 25 (var1 -> ID mat especial .)
    TO              reduce using rule 25 (var1 -> ID mat especial .)


state 58

    (29) especial -> TRANSPUESTA .

    SEMICOLON       reduce using rule 29 (especial -> TRANSPUESTA .)
    MUL             reduce using rule 29 (especial -> TRANSPUESTA .)
    DIV             reduce using rule 29 (especial -> TRANSPUESTA .)
    PLUS            reduce using rule 29 (especial -> TRANSPUESTA .)
    MINUS           reduce using rule 29 (especial -> TRANSPUESTA .)
    GT              reduce using rule 29 (especial -> TRANSPUESTA .)
    LT              reduce using rule 29 (especial -> TRANSPUESTA .)
    GTE             reduce using rule 29 (especial -> TRANSPUESTA .)
    LTE             reduce using rule 29 (especial -> TRANSPUESTA .)
    NE              reduce using rule 29 (especial -> TRANSPUESTA .)
    COMPARE         reduce using rule 29 (especial -> TRANSPUESTA .)
    AND             reduce using rule 29 (especial -> TRANSPUESTA .)
    RBRACKET        reduce using rule 29 (especial -> TRANSPUESTA .)
    OR              reduce using rule 29 (especial -> TRANSPUESTA .)
    RPAREN          reduce using rule 29 (especial -> TRANSPUESTA .)
    COMMA           reduce using rule 29 (especial -> TRANSPUESTA .)
    TO              reduce using rule 29 (especial -> TRANSPUESTA .)
    INT             reduce using rule 29 (especial -> TRANSPUESTA .)
    FLOAT           reduce using rule 29 (especial -> TRANSPUESTA .)
    CHAR            reduce using rule 29 (especial -> TRANSPUESTA .)


state 59

    (30) especial -> INVERSA .

    SEMICOLON       reduce using rule 30 (especial -> INVERSA .)
    MUL             reduce using rule 30 (especial -> INVERSA .)
    DIV             reduce using rule 30 (especial -> INVERSA .)
    PLUS            reduce using rule 30 (especial -> INVERSA .)
    MINUS           reduce using rule 30 (especial -> INVERSA .)
    GT              reduce using rule 30 (especial -> INVERSA .)
    LT              reduce using rule 30 (especial -> INVERSA .)
    GTE             reduce using rule 30 (especial -> INVERSA .)
    LTE             reduce using rule 30 (especial -> INVERSA .)
    NE              reduce using rule 30 (especial -> INVERSA .)
    COMPARE         reduce using rule 30 (especial -> INVERSA .)
    AND             reduce using rule 30 (especial -> INVERSA .)
    RBRACKET        reduce using rule 30 (especial -> INVERSA .)
    OR              reduce using rule 30 (especial -> INVERSA .)
    RPAREN          reduce using rule 30 (especial -> INVERSA .)
    COMMA           reduce using rule 30 (especial -> INVERSA .)
    TO              reduce using rule 30 (especial -> INVERSA .)
    INT             reduce using rule 30 (especial -> INVERSA .)
    FLOAT           reduce using rule 30 (especial -> INVERSA .)
    CHAR            reduce using rule 30 (especial -> INVERSA .)


state 60

    (31) especial -> DETERMINANTE .

    SEMICOLON       reduce using rule 31 (especial -> DETERMINANTE .)
    MUL             reduce using rule 31 (especial -> DETERMINANTE .)
    DIV             reduce using rule 31 (especial -> DETERMINANTE .)
    PLUS            reduce using rule 31 (especial -> DETERMINANTE .)
    MINUS           reduce using rule 31 (especial -> DETERMINANTE .)
    GT              reduce using rule 31 (especial -> DETERMINANTE .)
    LT              reduce using rule 31 (especial -> DETERMINANTE .)
    GTE             reduce using rule 31 (especial -> DETERMINANTE .)
    LTE             reduce using rule 31 (especial -> DETERMINANTE .)
    NE              reduce using rule 31 (especial -> DETERMINANTE .)
    COMPARE         reduce using rule 31 (especial -> DETERMINANTE .)
    AND             reduce using rule 31 (especial -> DETERMINANTE .)
    RBRACKET        reduce using rule 31 (especial -> DETERMINANTE .)
    OR              reduce using rule 31 (especial -> DETERMINANTE .)
    RPAREN          reduce using rule 31 (especial -> DETERMINANTE .)
    COMMA           reduce using rule 31 (especial -> DETERMINANTE .)
    TO              reduce using rule 31 (especial -> DETERMINANTE .)
    INT             reduce using rule 31 (especial -> DETERMINANTE .)
    FLOAT           reduce using rule 31 (especial -> DETERMINANTE .)
    CHAR            reduce using rule 31 (especial -> DETERMINANTE .)


state 61

    (32) arr -> LBRACKET CTEI . RBRACKET
    (34) mat -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET
    (37) mat -> LBRACKET CTEI . RBRACKET LBRACKET exp RBRACKET
    (135) pexp -> CTEI . guardaCTE
    (94) guardaCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 83
    MUL             reduce using rule 94 (guardaCTE -> .)
    DIV             reduce using rule 94 (guardaCTE -> .)
    PLUS            reduce using rule 94 (guardaCTE -> .)
    MINUS           reduce using rule 94 (guardaCTE -> .)
    GT              reduce using rule 94 (guardaCTE -> .)
    LT              reduce using rule 94 (guardaCTE -> .)
    GTE             reduce using rule 94 (guardaCTE -> .)
    LTE             reduce using rule 94 (guardaCTE -> .)
    NE              reduce using rule 94 (guardaCTE -> .)
    COMPARE         reduce using rule 94 (guardaCTE -> .)
    AND             reduce using rule 94 (guardaCTE -> .)
    OR              reduce using rule 94 (guardaCTE -> .)

  ! RBRACKET        [ reduce using rule 94 (guardaCTE -> .) ]

    guardaCTE                      shift and go to state 84

state 62

    (33) arr -> LBRACKET exp . RBRACKET
    (35) mat -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET
    (36) mat -> LBRACKET exp . RBRACKET LBRACKET CTEI RBRACKET
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr

    RBRACKET        shift and go to state 85
    OR              shift and go to state 86


state 63

    (110) exp -> nexp .
    (114) nexp -> nexp . AND addOperadorName compexp1 cuadruploAnd

    RBRACKET        reduce using rule 110 (exp -> nexp .)
    OR              reduce using rule 110 (exp -> nexp .)
    RPAREN          reduce using rule 110 (exp -> nexp .)
    COMMA           reduce using rule 110 (exp -> nexp .)
    SEMICOLON       reduce using rule 110 (exp -> nexp .)
    TO              reduce using rule 110 (exp -> nexp .)
    AND             shift and go to state 87


state 64

    (113) nexp -> compexp1 .
    (118) compexp1 -> compexp1 . GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> compexp1 . LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> compexp1 . GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> compexp1 . LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> compexp1 . NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> compexp1 . COMPARE addOperadorName sumexp cuadruploComparacion

    AND             reduce using rule 113 (nexp -> compexp1 .)
    RBRACKET        reduce using rule 113 (nexp -> compexp1 .)
    OR              reduce using rule 113 (nexp -> compexp1 .)
    RPAREN          reduce using rule 113 (nexp -> compexp1 .)
    COMMA           reduce using rule 113 (nexp -> compexp1 .)
    SEMICOLON       reduce using rule 113 (nexp -> compexp1 .)
    TO              reduce using rule 113 (nexp -> compexp1 .)
    GT              shift and go to state 88
    LT              shift and go to state 89
    GTE             shift and go to state 90
    LTE             shift and go to state 91
    NE              shift and go to state 92
    COMPARE         shift and go to state 93


state 65

    (124) compexp1 -> sumexp .
    (127) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma

    GT              reduce using rule 124 (compexp1 -> sumexp .)
    LT              reduce using rule 124 (compexp1 -> sumexp .)
    GTE             reduce using rule 124 (compexp1 -> sumexp .)
    LTE             reduce using rule 124 (compexp1 -> sumexp .)
    NE              reduce using rule 124 (compexp1 -> sumexp .)
    COMPARE         reduce using rule 124 (compexp1 -> sumexp .)
    AND             reduce using rule 124 (compexp1 -> sumexp .)
    RBRACKET        reduce using rule 124 (compexp1 -> sumexp .)
    OR              reduce using rule 124 (compexp1 -> sumexp .)
    RPAREN          reduce using rule 124 (compexp1 -> sumexp .)
    COMMA           reduce using rule 124 (compexp1 -> sumexp .)
    SEMICOLON       reduce using rule 124 (compexp1 -> sumexp .)
    TO              reduce using rule 124 (compexp1 -> sumexp .)
    PLUS            shift and go to state 94
    MINUS           shift and go to state 95


state 66

    (126) sumexp -> mulexp .
    (131) mulexp -> mulexp . MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> mulexp . DIV addOperadorName pexp cuadruploMultiplicacion

    PLUS            reduce using rule 126 (sumexp -> mulexp .)
    MINUS           reduce using rule 126 (sumexp -> mulexp .)
    GT              reduce using rule 126 (sumexp -> mulexp .)
    LT              reduce using rule 126 (sumexp -> mulexp .)
    GTE             reduce using rule 126 (sumexp -> mulexp .)
    LTE             reduce using rule 126 (sumexp -> mulexp .)
    NE              reduce using rule 126 (sumexp -> mulexp .)
    COMPARE         reduce using rule 126 (sumexp -> mulexp .)
    AND             reduce using rule 126 (sumexp -> mulexp .)
    RBRACKET        reduce using rule 126 (sumexp -> mulexp .)
    OR              reduce using rule 126 (sumexp -> mulexp .)
    RPAREN          reduce using rule 126 (sumexp -> mulexp .)
    COMMA           reduce using rule 126 (sumexp -> mulexp .)
    SEMICOLON       reduce using rule 126 (sumexp -> mulexp .)
    TO              reduce using rule 126 (sumexp -> mulexp .)
    MUL             shift and go to state 96
    DIV             shift and go to state 97


state 67

    (130) mulexp -> pexp .

    MUL             reduce using rule 130 (mulexp -> pexp .)
    DIV             reduce using rule 130 (mulexp -> pexp .)
    PLUS            reduce using rule 130 (mulexp -> pexp .)
    MINUS           reduce using rule 130 (mulexp -> pexp .)
    GT              reduce using rule 130 (mulexp -> pexp .)
    LT              reduce using rule 130 (mulexp -> pexp .)
    GTE             reduce using rule 130 (mulexp -> pexp .)
    LTE             reduce using rule 130 (mulexp -> pexp .)
    NE              reduce using rule 130 (mulexp -> pexp .)
    COMPARE         reduce using rule 130 (mulexp -> pexp .)
    AND             reduce using rule 130 (mulexp -> pexp .)
    RBRACKET        reduce using rule 130 (mulexp -> pexp .)
    OR              reduce using rule 130 (mulexp -> pexp .)
    RPAREN          reduce using rule 130 (mulexp -> pexp .)
    COMMA           reduce using rule 130 (mulexp -> pexp .)
    SEMICOLON       reduce using rule 130 (mulexp -> pexp .)
    TO              reduce using rule 130 (mulexp -> pexp .)


state 68

    (134) pexp -> var1 . guardaID
    (141) guardaID -> .

    MUL             reduce using rule 141 (guardaID -> .)
    DIV             reduce using rule 141 (guardaID -> .)
    PLUS            reduce using rule 141 (guardaID -> .)
    MINUS           reduce using rule 141 (guardaID -> .)
    GT              reduce using rule 141 (guardaID -> .)
    LT              reduce using rule 141 (guardaID -> .)
    GTE             reduce using rule 141 (guardaID -> .)
    LTE             reduce using rule 141 (guardaID -> .)
    NE              reduce using rule 141 (guardaID -> .)
    COMPARE         reduce using rule 141 (guardaID -> .)
    AND             reduce using rule 141 (guardaID -> .)
    RBRACKET        reduce using rule 141 (guardaID -> .)
    OR              reduce using rule 141 (guardaID -> .)
    RPAREN          reduce using rule 141 (guardaID -> .)
    COMMA           reduce using rule 141 (guardaID -> .)
    SEMICOLON       reduce using rule 141 (guardaID -> .)
    TO              reduce using rule 141 (guardaID -> .)

    guardaID                       shift and go to state 98

state 69

    (136) pexp -> CTEF . guardaCTE
    (94) guardaCTE -> .

    MUL             reduce using rule 94 (guardaCTE -> .)
    DIV             reduce using rule 94 (guardaCTE -> .)
    PLUS            reduce using rule 94 (guardaCTE -> .)
    MINUS           reduce using rule 94 (guardaCTE -> .)
    GT              reduce using rule 94 (guardaCTE -> .)
    LT              reduce using rule 94 (guardaCTE -> .)
    GTE             reduce using rule 94 (guardaCTE -> .)
    LTE             reduce using rule 94 (guardaCTE -> .)
    NE              reduce using rule 94 (guardaCTE -> .)
    COMPARE         reduce using rule 94 (guardaCTE -> .)
    AND             reduce using rule 94 (guardaCTE -> .)
    RBRACKET        reduce using rule 94 (guardaCTE -> .)
    OR              reduce using rule 94 (guardaCTE -> .)
    RPAREN          reduce using rule 94 (guardaCTE -> .)
    COMMA           reduce using rule 94 (guardaCTE -> .)
    SEMICOLON       reduce using rule 94 (guardaCTE -> .)
    TO              reduce using rule 94 (guardaCTE -> .)

    guardaCTE                      shift and go to state 99

state 70

    (137) pexp -> CTEC . guardaCTE
    (94) guardaCTE -> .

    MUL             reduce using rule 94 (guardaCTE -> .)
    DIV             reduce using rule 94 (guardaCTE -> .)
    PLUS            reduce using rule 94 (guardaCTE -> .)
    MINUS           reduce using rule 94 (guardaCTE -> .)
    GT              reduce using rule 94 (guardaCTE -> .)
    LT              reduce using rule 94 (guardaCTE -> .)
    GTE             reduce using rule 94 (guardaCTE -> .)
    LTE             reduce using rule 94 (guardaCTE -> .)
    NE              reduce using rule 94 (guardaCTE -> .)
    COMPARE         reduce using rule 94 (guardaCTE -> .)
    AND             reduce using rule 94 (guardaCTE -> .)
    RBRACKET        reduce using rule 94 (guardaCTE -> .)
    OR              reduce using rule 94 (guardaCTE -> .)
    RPAREN          reduce using rule 94 (guardaCTE -> .)
    COMMA           reduce using rule 94 (guardaCTE -> .)
    SEMICOLON       reduce using rule 94 (guardaCTE -> .)
    TO              reduce using rule 94 (guardaCTE -> .)

    guardaCTE                      shift and go to state 100

state 71

    (138) pexp -> CTESTRING . guardaCTE
    (94) guardaCTE -> .

    MUL             reduce using rule 94 (guardaCTE -> .)
    DIV             reduce using rule 94 (guardaCTE -> .)
    PLUS            reduce using rule 94 (guardaCTE -> .)
    MINUS           reduce using rule 94 (guardaCTE -> .)
    GT              reduce using rule 94 (guardaCTE -> .)
    LT              reduce using rule 94 (guardaCTE -> .)
    GTE             reduce using rule 94 (guardaCTE -> .)
    LTE             reduce using rule 94 (guardaCTE -> .)
    NE              reduce using rule 94 (guardaCTE -> .)
    COMPARE         reduce using rule 94 (guardaCTE -> .)
    AND             reduce using rule 94 (guardaCTE -> .)
    RBRACKET        reduce using rule 94 (guardaCTE -> .)
    OR              reduce using rule 94 (guardaCTE -> .)
    RPAREN          reduce using rule 94 (guardaCTE -> .)
    COMMA           reduce using rule 94 (guardaCTE -> .)
    SEMICOLON       reduce using rule 94 (guardaCTE -> .)
    TO              reduce using rule 94 (guardaCTE -> .)

    guardaCTE                      shift and go to state 101

state 72

    (139) pexp -> llamada .

    MUL             reduce using rule 139 (pexp -> llamada .)
    DIV             reduce using rule 139 (pexp -> llamada .)
    PLUS            reduce using rule 139 (pexp -> llamada .)
    MINUS           reduce using rule 139 (pexp -> llamada .)
    GT              reduce using rule 139 (pexp -> llamada .)
    LT              reduce using rule 139 (pexp -> llamada .)
    GTE             reduce using rule 139 (pexp -> llamada .)
    LTE             reduce using rule 139 (pexp -> llamada .)
    NE              reduce using rule 139 (pexp -> llamada .)
    COMPARE         reduce using rule 139 (pexp -> llamada .)
    AND             reduce using rule 139 (pexp -> llamada .)
    RBRACKET        reduce using rule 139 (pexp -> llamada .)
    OR              reduce using rule 139 (pexp -> llamada .)
    RPAREN          reduce using rule 139 (pexp -> llamada .)
    COMMA           reduce using rule 139 (pexp -> llamada .)
    SEMICOLON       reduce using rule 139 (pexp -> llamada .)
    TO              reduce using rule 139 (pexp -> llamada .)


state 73

    (140) pexp -> LPAREN . exp RPAREN
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 102
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 74

    (19) var1 -> ID .
    (20) var1 -> ID . COMMA var1 agregarVar
    (21) var1 -> ID . arr
    (22) var1 -> ID . arr COMMA var1 agregarVar
    (23) var1 -> ID . mat COMMA var1 agregarVar
    (24) var1 -> ID . mat
    (25) var1 -> ID . mat especial
    (77) llamada -> ID . llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (32) arr -> . LBRACKET CTEI RBRACKET
    (33) arr -> . LBRACKET exp RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (35) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (36) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (37) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET
    (78) llamadaEra -> .

  ! shift/reduce conflict for COMMA resolved as shift
    MUL             reduce using rule 19 (var1 -> ID .)
    DIV             reduce using rule 19 (var1 -> ID .)
    PLUS            reduce using rule 19 (var1 -> ID .)
    MINUS           reduce using rule 19 (var1 -> ID .)
    GT              reduce using rule 19 (var1 -> ID .)
    LT              reduce using rule 19 (var1 -> ID .)
    GTE             reduce using rule 19 (var1 -> ID .)
    LTE             reduce using rule 19 (var1 -> ID .)
    NE              reduce using rule 19 (var1 -> ID .)
    COMPARE         reduce using rule 19 (var1 -> ID .)
    AND             reduce using rule 19 (var1 -> ID .)
    RBRACKET        reduce using rule 19 (var1 -> ID .)
    OR              reduce using rule 19 (var1 -> ID .)
    RPAREN          reduce using rule 19 (var1 -> ID .)
    SEMICOLON       reduce using rule 19 (var1 -> ID .)
    TO              reduce using rule 19 (var1 -> ID .)
    COMMA           shift and go to state 45
    LBRACKET        shift and go to state 48
    LPAREN          reduce using rule 78 (llamadaEra -> .)

  ! COMMA           [ reduce using rule 19 (var1 -> ID .) ]

    arr                            shift and go to state 46
    mat                            shift and go to state 47
    llamadaEra                     shift and go to state 104

state 75

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY . var estatutos RCURLY END
    (14) var -> . vars
    (15) var -> .
    (16) vars -> . VAR var_2

    ID              reduce using rule 15 (var -> .)
    READ            reduce using rule 15 (var -> .)
    PRINT           reduce using rule 15 (var -> .)
    FOR             reduce using rule 15 (var -> .)
    IF              reduce using rule 15 (var -> .)
    WHILE           reduce using rule 15 (var -> .)
    RCURLY          reduce using rule 15 (var -> .)
    VAR             shift and go to state 11

    var                            shift and go to state 105
    vars                           shift and go to state 9

state 76

    (75) param2 -> param2 type param .

    RPAREN          reduce using rule 75 (param2 -> param2 type param .)
    INT             reduce using rule 75 (param2 -> param2 type param .)
    FLOAT           reduce using rule 75 (param2 -> param2 type param .)
    CHAR            reduce using rule 75 (param2 -> param2 type param .)


state 77

    (66) param -> ID . agregarParametro
    (67) param -> ID . COMMA param agregarParametro
    (68) param -> ID . arr
    (69) param -> ID . arr COMMA param
    (70) param -> ID . mat COMMA param
    (71) param -> ID . mat
    (72) param -> ID . mat especial
    (74) agregarParametro -> .
    (32) arr -> . LBRACKET CTEI RBRACKET
    (33) arr -> . LBRACKET exp RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (35) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (36) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (37) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    COMMA           shift and go to state 107
    RPAREN          reduce using rule 74 (agregarParametro -> .)
    INT             reduce using rule 74 (agregarParametro -> .)
    FLOAT           reduce using rule 74 (agregarParametro -> .)
    CHAR            reduce using rule 74 (agregarParametro -> .)
    LBRACKET        shift and go to state 48

    agregarParametro               shift and go to state 106
    arr                            shift and go to state 108
    mat                            shift and go to state 109

state 78

    (44) funcion_1 -> ID guardaFuncion LPAREN . param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
    (75) param2 -> . param2 type param
    (76) param2 -> .

    RPAREN          reduce using rule 76 (param2 -> .)
    INT             reduce using rule 76 (param2 -> .)
    FLOAT           reduce using rule 76 (param2 -> .)
    CHAR            reduce using rule 76 (param2 -> .)

    param2                         shift and go to state 110

state 79

    (45) funcion_2 -> ID guardaFuncion LPAREN . param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (75) param2 -> . param2 type param
    (76) param2 -> .

    RPAREN          reduce using rule 76 (param2 -> .)
    INT             reduce using rule 76 (param2 -> .)
    FLOAT           reduce using rule 76 (param2 -> .)
    CHAR            reduce using rule 76 (param2 -> .)

    param2                         shift and go to state 111

state 80

    (20) var1 -> ID COMMA var1 agregarVar .

    SEMICOLON       reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    MUL             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    DIV             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    PLUS            reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    MINUS           reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    GT              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    LT              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    GTE             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    LTE             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    NE              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    COMPARE         reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    AND             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    RBRACKET        reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    OR              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    RPAREN          reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    COMMA           reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    TO              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)


state 81

    (22) var1 -> ID arr COMMA var1 . agregarVar
    (28) agregarVar -> .

    SEMICOLON       reduce using rule 28 (agregarVar -> .)
    MUL             reduce using rule 28 (agregarVar -> .)
    DIV             reduce using rule 28 (agregarVar -> .)
    PLUS            reduce using rule 28 (agregarVar -> .)
    MINUS           reduce using rule 28 (agregarVar -> .)
    GT              reduce using rule 28 (agregarVar -> .)
    LT              reduce using rule 28 (agregarVar -> .)
    GTE             reduce using rule 28 (agregarVar -> .)
    LTE             reduce using rule 28 (agregarVar -> .)
    NE              reduce using rule 28 (agregarVar -> .)
    COMPARE         reduce using rule 28 (agregarVar -> .)
    AND             reduce using rule 28 (agregarVar -> .)
    RBRACKET        reduce using rule 28 (agregarVar -> .)
    OR              reduce using rule 28 (agregarVar -> .)
    RPAREN          reduce using rule 28 (agregarVar -> .)
    COMMA           reduce using rule 28 (agregarVar -> .)
    TO              reduce using rule 28 (agregarVar -> .)

    agregarVar                     shift and go to state 112

state 82

    (23) var1 -> ID mat COMMA var1 . agregarVar
    (28) agregarVar -> .

    SEMICOLON       reduce using rule 28 (agregarVar -> .)
    MUL             reduce using rule 28 (agregarVar -> .)
    DIV             reduce using rule 28 (agregarVar -> .)
    PLUS            reduce using rule 28 (agregarVar -> .)
    MINUS           reduce using rule 28 (agregarVar -> .)
    GT              reduce using rule 28 (agregarVar -> .)
    LT              reduce using rule 28 (agregarVar -> .)
    GTE             reduce using rule 28 (agregarVar -> .)
    LTE             reduce using rule 28 (agregarVar -> .)
    NE              reduce using rule 28 (agregarVar -> .)
    COMPARE         reduce using rule 28 (agregarVar -> .)
    AND             reduce using rule 28 (agregarVar -> .)
    RBRACKET        reduce using rule 28 (agregarVar -> .)
    OR              reduce using rule 28 (agregarVar -> .)
    RPAREN          reduce using rule 28 (agregarVar -> .)
    COMMA           reduce using rule 28 (agregarVar -> .)
    TO              reduce using rule 28 (agregarVar -> .)

    agregarVar                     shift and go to state 113

state 83

    (32) arr -> LBRACKET CTEI RBRACKET .
    (34) mat -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET
    (37) mat -> LBRACKET CTEI RBRACKET . LBRACKET exp RBRACKET

    COMMA           reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 32 (arr -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 114


state 84

    (135) pexp -> CTEI guardaCTE .

    MUL             reduce using rule 135 (pexp -> CTEI guardaCTE .)
    DIV             reduce using rule 135 (pexp -> CTEI guardaCTE .)
    PLUS            reduce using rule 135 (pexp -> CTEI guardaCTE .)
    MINUS           reduce using rule 135 (pexp -> CTEI guardaCTE .)
    GT              reduce using rule 135 (pexp -> CTEI guardaCTE .)
    LT              reduce using rule 135 (pexp -> CTEI guardaCTE .)
    GTE             reduce using rule 135 (pexp -> CTEI guardaCTE .)
    LTE             reduce using rule 135 (pexp -> CTEI guardaCTE .)
    NE              reduce using rule 135 (pexp -> CTEI guardaCTE .)
    COMPARE         reduce using rule 135 (pexp -> CTEI guardaCTE .)
    AND             reduce using rule 135 (pexp -> CTEI guardaCTE .)
    RBRACKET        reduce using rule 135 (pexp -> CTEI guardaCTE .)
    OR              reduce using rule 135 (pexp -> CTEI guardaCTE .)
    RPAREN          reduce using rule 135 (pexp -> CTEI guardaCTE .)
    COMMA           reduce using rule 135 (pexp -> CTEI guardaCTE .)
    SEMICOLON       reduce using rule 135 (pexp -> CTEI guardaCTE .)
    TO              reduce using rule 135 (pexp -> CTEI guardaCTE .)


state 85

    (33) arr -> LBRACKET exp RBRACKET .
    (35) mat -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET
    (36) mat -> LBRACKET exp RBRACKET . LBRACKET CTEI RBRACKET

    COMMA           reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    MUL             reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    DIV             reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    GT              reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    LT              reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    GTE             reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    LTE             reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    NE              reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    TO              reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    INT             reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 33 (arr -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 115


state 86

    (111) exp -> exp OR . addOperadorName nexp cuadruploOr
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 116

state 87

    (114) nexp -> nexp AND . addOperadorName compexp1 cuadruploAnd
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 117

state 88

    (118) compexp1 -> compexp1 GT . addOperadorName sumexp cuadruploComparacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 118

state 89

    (119) compexp1 -> compexp1 LT . addOperadorName sumexp cuadruploComparacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 119

state 90

    (120) compexp1 -> compexp1 GTE . addOperadorName sumexp cuadruploComparacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 120

state 91

    (121) compexp1 -> compexp1 LTE . addOperadorName sumexp cuadruploComparacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 121

state 92

    (122) compexp1 -> compexp1 NE . addOperadorName sumexp cuadruploComparacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 122

state 93

    (123) compexp1 -> compexp1 COMPARE . addOperadorName sumexp cuadruploComparacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 123

state 94

    (127) sumexp -> sumexp PLUS . addOperadorName mulexp cuadruploSuma
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 124

state 95

    (128) sumexp -> sumexp MINUS . addOperadorName mulexp cuadruploSuma
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 125

state 96

    (131) mulexp -> mulexp MUL . addOperadorName pexp cuadruploMultiplicacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 126

state 97

    (132) mulexp -> mulexp DIV . addOperadorName pexp cuadruploMultiplicacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    RBRACKET        reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    RPAREN          reduce using rule 64 (addOperadorName -> .)
    COMMA           reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 127

state 98

    (134) pexp -> var1 guardaID .

    MUL             reduce using rule 134 (pexp -> var1 guardaID .)
    DIV             reduce using rule 134 (pexp -> var1 guardaID .)
    PLUS            reduce using rule 134 (pexp -> var1 guardaID .)
    MINUS           reduce using rule 134 (pexp -> var1 guardaID .)
    GT              reduce using rule 134 (pexp -> var1 guardaID .)
    LT              reduce using rule 134 (pexp -> var1 guardaID .)
    GTE             reduce using rule 134 (pexp -> var1 guardaID .)
    LTE             reduce using rule 134 (pexp -> var1 guardaID .)
    NE              reduce using rule 134 (pexp -> var1 guardaID .)
    COMPARE         reduce using rule 134 (pexp -> var1 guardaID .)
    AND             reduce using rule 134 (pexp -> var1 guardaID .)
    RBRACKET        reduce using rule 134 (pexp -> var1 guardaID .)
    OR              reduce using rule 134 (pexp -> var1 guardaID .)
    RPAREN          reduce using rule 134 (pexp -> var1 guardaID .)
    COMMA           reduce using rule 134 (pexp -> var1 guardaID .)
    SEMICOLON       reduce using rule 134 (pexp -> var1 guardaID .)
    TO              reduce using rule 134 (pexp -> var1 guardaID .)


state 99

    (136) pexp -> CTEF guardaCTE .

    MUL             reduce using rule 136 (pexp -> CTEF guardaCTE .)
    DIV             reduce using rule 136 (pexp -> CTEF guardaCTE .)
    PLUS            reduce using rule 136 (pexp -> CTEF guardaCTE .)
    MINUS           reduce using rule 136 (pexp -> CTEF guardaCTE .)
    GT              reduce using rule 136 (pexp -> CTEF guardaCTE .)
    LT              reduce using rule 136 (pexp -> CTEF guardaCTE .)
    GTE             reduce using rule 136 (pexp -> CTEF guardaCTE .)
    LTE             reduce using rule 136 (pexp -> CTEF guardaCTE .)
    NE              reduce using rule 136 (pexp -> CTEF guardaCTE .)
    COMPARE         reduce using rule 136 (pexp -> CTEF guardaCTE .)
    AND             reduce using rule 136 (pexp -> CTEF guardaCTE .)
    RBRACKET        reduce using rule 136 (pexp -> CTEF guardaCTE .)
    OR              reduce using rule 136 (pexp -> CTEF guardaCTE .)
    RPAREN          reduce using rule 136 (pexp -> CTEF guardaCTE .)
    COMMA           reduce using rule 136 (pexp -> CTEF guardaCTE .)
    SEMICOLON       reduce using rule 136 (pexp -> CTEF guardaCTE .)
    TO              reduce using rule 136 (pexp -> CTEF guardaCTE .)


state 100

    (137) pexp -> CTEC guardaCTE .

    MUL             reduce using rule 137 (pexp -> CTEC guardaCTE .)
    DIV             reduce using rule 137 (pexp -> CTEC guardaCTE .)
    PLUS            reduce using rule 137 (pexp -> CTEC guardaCTE .)
    MINUS           reduce using rule 137 (pexp -> CTEC guardaCTE .)
    GT              reduce using rule 137 (pexp -> CTEC guardaCTE .)
    LT              reduce using rule 137 (pexp -> CTEC guardaCTE .)
    GTE             reduce using rule 137 (pexp -> CTEC guardaCTE .)
    LTE             reduce using rule 137 (pexp -> CTEC guardaCTE .)
    NE              reduce using rule 137 (pexp -> CTEC guardaCTE .)
    COMPARE         reduce using rule 137 (pexp -> CTEC guardaCTE .)
    AND             reduce using rule 137 (pexp -> CTEC guardaCTE .)
    RBRACKET        reduce using rule 137 (pexp -> CTEC guardaCTE .)
    OR              reduce using rule 137 (pexp -> CTEC guardaCTE .)
    RPAREN          reduce using rule 137 (pexp -> CTEC guardaCTE .)
    COMMA           reduce using rule 137 (pexp -> CTEC guardaCTE .)
    SEMICOLON       reduce using rule 137 (pexp -> CTEC guardaCTE .)
    TO              reduce using rule 137 (pexp -> CTEC guardaCTE .)


state 101

    (138) pexp -> CTESTRING guardaCTE .

    MUL             reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    DIV             reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    PLUS            reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    MINUS           reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    GT              reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    LT              reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    GTE             reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    LTE             reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    NE              reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    COMPARE         reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    AND             reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    RBRACKET        reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    OR              reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    RPAREN          reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    COMMA           reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    SEMICOLON       reduce using rule 138 (pexp -> CTESTRING guardaCTE .)
    TO              reduce using rule 138 (pexp -> CTESTRING guardaCTE .)


state 102

    (140) pexp -> LPAREN exp . RPAREN
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          shift and go to state 128
    OR              shift and go to state 86


state 103

    (135) pexp -> CTEI . guardaCTE
    (94) guardaCTE -> .

    MUL             reduce using rule 94 (guardaCTE -> .)
    DIV             reduce using rule 94 (guardaCTE -> .)
    PLUS            reduce using rule 94 (guardaCTE -> .)
    MINUS           reduce using rule 94 (guardaCTE -> .)
    GT              reduce using rule 94 (guardaCTE -> .)
    LT              reduce using rule 94 (guardaCTE -> .)
    GTE             reduce using rule 94 (guardaCTE -> .)
    LTE             reduce using rule 94 (guardaCTE -> .)
    NE              reduce using rule 94 (guardaCTE -> .)
    COMPARE         reduce using rule 94 (guardaCTE -> .)
    AND             reduce using rule 94 (guardaCTE -> .)
    RPAREN          reduce using rule 94 (guardaCTE -> .)
    OR              reduce using rule 94 (guardaCTE -> .)
    RBRACKET        reduce using rule 94 (guardaCTE -> .)
    COMMA           reduce using rule 94 (guardaCTE -> .)
    SEMICOLON       reduce using rule 94 (guardaCTE -> .)
    TO              reduce using rule 94 (guardaCTE -> .)

    guardaCTE                      shift and go to state 84

state 104

    (77) llamada -> ID llamadaEra . LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena

    LPAREN          shift and go to state 129


state 105

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var . estatutos RCURLY END
    (51) estatutos -> . estatutos_2 estatutos
    (52) estatutos -> .
    (53) estatutos_2 -> . asignacion SEMICOLON
    (54) estatutos_2 -> . llamada SEMICOLON
    (55) estatutos_2 -> . lectura SEMICOLON
    (56) estatutos_2 -> . escritura SEMICOLON
    (57) estatutos_2 -> . for
    (58) estatutos_2 -> . if
    (59) estatutos_2 -> . while
    (60) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (95) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (100) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (106) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 52 (estatutos -> .)
    ID              shift and go to state 139
    READ            shift and go to state 140
    PRINT           shift and go to state 141
    FOR             shift and go to state 142
    IF              shift and go to state 143
    WHILE           shift and go to state 144

    estatutos                      shift and go to state 130
    estatutos_2                    shift and go to state 131
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    lectura                        shift and go to state 134
    escritura                      shift and go to state 135
    for                            shift and go to state 136
    if                             shift and go to state 137
    while                          shift and go to state 138

state 106

    (66) param -> ID agregarParametro .

    RPAREN          reduce using rule 66 (param -> ID agregarParametro .)
    INT             reduce using rule 66 (param -> ID agregarParametro .)
    FLOAT           reduce using rule 66 (param -> ID agregarParametro .)
    CHAR            reduce using rule 66 (param -> ID agregarParametro .)


state 107

    (67) param -> ID COMMA . param agregarParametro
    (66) param -> . ID agregarParametro
    (67) param -> . ID COMMA param agregarParametro
    (68) param -> . ID arr
    (69) param -> . ID arr COMMA param
    (70) param -> . ID mat COMMA param
    (71) param -> . ID mat
    (72) param -> . ID mat especial
    (73) param -> .

    ID              shift and go to state 77
    RPAREN          reduce using rule 73 (param -> .)
    INT             reduce using rule 73 (param -> .)
    FLOAT           reduce using rule 73 (param -> .)
    CHAR            reduce using rule 73 (param -> .)

    param                          shift and go to state 145

state 108

    (68) param -> ID arr .
    (69) param -> ID arr . COMMA param

    RPAREN          reduce using rule 68 (param -> ID arr .)
    INT             reduce using rule 68 (param -> ID arr .)
    FLOAT           reduce using rule 68 (param -> ID arr .)
    CHAR            reduce using rule 68 (param -> ID arr .)
    COMMA           shift and go to state 146


state 109

    (70) param -> ID mat . COMMA param
    (71) param -> ID mat .
    (72) param -> ID mat . especial
    (29) especial -> . TRANSPUESTA
    (30) especial -> . INVERSA
    (31) especial -> . DETERMINANTE

    COMMA           shift and go to state 147
    RPAREN          reduce using rule 71 (param -> ID mat .)
    INT             reduce using rule 71 (param -> ID mat .)
    FLOAT           reduce using rule 71 (param -> ID mat .)
    CHAR            reduce using rule 71 (param -> ID mat .)
    TRANSPUESTA     shift and go to state 58
    INVERSA         shift and go to state 59
    DETERMINANTE    shift and go to state 60

    especial                       shift and go to state 148

state 110

    (44) funcion_1 -> ID guardaFuncion LPAREN param2 . RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
    (75) param2 -> param2 . type param
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    RPAREN          shift and go to state 149
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    type                           shift and go to state 50

state 111

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 . RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (75) param2 -> param2 . type param
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    RPAREN          shift and go to state 150
    INT             shift and go to state 20
    FLOAT           shift and go to state 21
    CHAR            shift and go to state 22

    type                           shift and go to state 50

state 112

    (22) var1 -> ID arr COMMA var1 agregarVar .

    SEMICOLON       reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    MUL             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    DIV             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    PLUS            reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    MINUS           reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    GT              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    LT              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    GTE             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    LTE             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    NE              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    COMPARE         reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    AND             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    RBRACKET        reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    OR              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    RPAREN          reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    COMMA           reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    TO              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)


state 113

    (23) var1 -> ID mat COMMA var1 agregarVar .

    SEMICOLON       reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    MUL             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    DIV             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    PLUS            reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    MINUS           reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    GT              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    LT              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    GTE             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    LTE             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    NE              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    COMPARE         reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    AND             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    RBRACKET        reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    OR              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    RPAREN          reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    COMMA           reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    TO              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)


state 114

    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET
    (37) mat -> LBRACKET CTEI RBRACKET LBRACKET . exp RBRACKET
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 151
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 152
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 115

    (35) mat -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (36) mat -> LBRACKET exp RBRACKET LBRACKET . CTEI RBRACKET
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 154
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 153
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 116

    (111) exp -> exp OR addOperadorName . nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    nexp                           shift and go to state 155
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 117

    (114) nexp -> nexp AND addOperadorName . compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    compexp1                       shift and go to state 156
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 118

    (118) compexp1 -> compexp1 GT addOperadorName . sumexp cuadruploComparacion
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 157
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 119

    (119) compexp1 -> compexp1 LT addOperadorName . sumexp cuadruploComparacion
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 158
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 120

    (120) compexp1 -> compexp1 GTE addOperadorName . sumexp cuadruploComparacion
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 159
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 121

    (121) compexp1 -> compexp1 LTE addOperadorName . sumexp cuadruploComparacion
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 160
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 122

    (122) compexp1 -> compexp1 NE addOperadorName . sumexp cuadruploComparacion
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 161
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 123

    (123) compexp1 -> compexp1 COMPARE addOperadorName . sumexp cuadruploComparacion
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    sumexp                         shift and go to state 162
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 124

    (127) sumexp -> sumexp PLUS addOperadorName . mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    mulexp                         shift and go to state 163
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 125

    (128) sumexp -> sumexp MINUS addOperadorName . mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    mulexp                         shift and go to state 164
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 126

    (131) mulexp -> mulexp MUL addOperadorName . pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    pexp                           shift and go to state 165
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 127

    (132) mulexp -> mulexp DIV addOperadorName . pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RBRACKET        reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    pexp                           shift and go to state 166
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 128

    (140) pexp -> LPAREN exp RPAREN .

    MUL             reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    DIV             reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    GT              reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    LT              reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    GTE             reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    LTE             reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    NE              reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    COMPARE         reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    AND             reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    OR              reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 140 (pexp -> LPAREN exp RPAREN .)
    TO              reduce using rule 140 (pexp -> LPAREN exp RPAREN .)


state 129

    (77) llamada -> ID llamadaEra LPAREN . auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (79) auxiliarExp -> . exp
    (80) auxiliarExp -> . exp COMMA exp
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    auxiliarExp                    shift and go to state 167
    exp                            shift and go to state 168
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 130

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos . RCURLY END

    RCURLY          shift and go to state 169


state 131

    (51) estatutos -> estatutos_2 . estatutos
    (51) estatutos -> . estatutos_2 estatutos
    (52) estatutos -> .
    (53) estatutos_2 -> . asignacion SEMICOLON
    (54) estatutos_2 -> . llamada SEMICOLON
    (55) estatutos_2 -> . lectura SEMICOLON
    (56) estatutos_2 -> . escritura SEMICOLON
    (57) estatutos_2 -> . for
    (58) estatutos_2 -> . if
    (59) estatutos_2 -> . while
    (60) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (95) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (100) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (106) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 52 (estatutos -> .)
    RETURN          reduce using rule 52 (estatutos -> .)
    ID              shift and go to state 139
    READ            shift and go to state 140
    PRINT           shift and go to state 141
    FOR             shift and go to state 142
    IF              shift and go to state 143
    WHILE           shift and go to state 144

    estatutos_2                    shift and go to state 131
    estatutos                      shift and go to state 170
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    lectura                        shift and go to state 134
    escritura                      shift and go to state 135
    for                            shift and go to state 136
    if                             shift and go to state 137
    while                          shift and go to state 138

state 132

    (53) estatutos_2 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 171


state 133

    (54) estatutos_2 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 172


state 134

    (55) estatutos_2 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 173


state 135

    (56) estatutos_2 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 174


state 136

    (57) estatutos_2 -> for .

    ID              reduce using rule 57 (estatutos_2 -> for .)
    READ            reduce using rule 57 (estatutos_2 -> for .)
    PRINT           reduce using rule 57 (estatutos_2 -> for .)
    FOR             reduce using rule 57 (estatutos_2 -> for .)
    IF              reduce using rule 57 (estatutos_2 -> for .)
    WHILE           reduce using rule 57 (estatutos_2 -> for .)
    RCURLY          reduce using rule 57 (estatutos_2 -> for .)
    RETURN          reduce using rule 57 (estatutos_2 -> for .)


state 137

    (58) estatutos_2 -> if .

    ID              reduce using rule 58 (estatutos_2 -> if .)
    READ            reduce using rule 58 (estatutos_2 -> if .)
    PRINT           reduce using rule 58 (estatutos_2 -> if .)
    FOR             reduce using rule 58 (estatutos_2 -> if .)
    IF              reduce using rule 58 (estatutos_2 -> if .)
    WHILE           reduce using rule 58 (estatutos_2 -> if .)
    RCURLY          reduce using rule 58 (estatutos_2 -> if .)
    RETURN          reduce using rule 58 (estatutos_2 -> if .)


state 138

    (59) estatutos_2 -> while .

    ID              reduce using rule 59 (estatutos_2 -> while .)
    READ            reduce using rule 59 (estatutos_2 -> while .)
    PRINT           reduce using rule 59 (estatutos_2 -> while .)
    FOR             reduce using rule 59 (estatutos_2 -> while .)
    IF              reduce using rule 59 (estatutos_2 -> while .)
    WHILE           reduce using rule 59 (estatutos_2 -> while .)
    RCURLY          reduce using rule 59 (estatutos_2 -> while .)
    RETURN          reduce using rule 59 (estatutos_2 -> while .)


state 139

    (60) asignacion -> ID . guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> ID . guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> ID . guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (77) llamada -> ID . llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (63) guardaVariable_2 -> .
    (78) llamadaEra -> .

    EQUALS          reduce using rule 63 (guardaVariable_2 -> .)
    LBRACKET        reduce using rule 63 (guardaVariable_2 -> .)
    LPAREN          reduce using rule 78 (llamadaEra -> .)

    guardaVariable_2               shift and go to state 175
    llamadaEra                     shift and go to state 104

state 140

    (84) lectura -> READ . operadorRead LPAREN exp cuadruploRead RPAREN
    (85) operadorRead -> .

    LPAREN          reduce using rule 85 (operadorRead -> .)

    operadorRead                   shift and go to state 176

state 141

    (87) escritura -> PRINT . LPAREN operadorPrint escritura1 cuadruploPrint RPAREN

    LPAREN          shift and go to state 177


state 142

    (95) for -> FOR . operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (97) operadorFor -> .

    LPAREN          reduce using rule 97 (operadorFor -> .)

    operadorFor                    shift and go to state 178

state 143

    (100) if -> IF . LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf

    LPAREN          shift and go to state 179


state 144

    (106) while -> WHILE . operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
    (107) operadorWhile -> .

    LPAREN          reduce using rule 107 (operadorWhile -> .)

    operadorWhile                  shift and go to state 180

state 145

    (67) param -> ID COMMA param . agregarParametro
    (74) agregarParametro -> .

    RPAREN          reduce using rule 74 (agregarParametro -> .)
    INT             reduce using rule 74 (agregarParametro -> .)
    FLOAT           reduce using rule 74 (agregarParametro -> .)
    CHAR            reduce using rule 74 (agregarParametro -> .)

    agregarParametro               shift and go to state 181

state 146

    (69) param -> ID arr COMMA . param
    (66) param -> . ID agregarParametro
    (67) param -> . ID COMMA param agregarParametro
    (68) param -> . ID arr
    (69) param -> . ID arr COMMA param
    (70) param -> . ID mat COMMA param
    (71) param -> . ID mat
    (72) param -> . ID mat especial
    (73) param -> .

    ID              shift and go to state 77
    RPAREN          reduce using rule 73 (param -> .)
    INT             reduce using rule 73 (param -> .)
    FLOAT           reduce using rule 73 (param -> .)
    CHAR            reduce using rule 73 (param -> .)

    param                          shift and go to state 182

state 147

    (70) param -> ID mat COMMA . param
    (66) param -> . ID agregarParametro
    (67) param -> . ID COMMA param agregarParametro
    (68) param -> . ID arr
    (69) param -> . ID arr COMMA param
    (70) param -> . ID mat COMMA param
    (71) param -> . ID mat
    (72) param -> . ID mat especial
    (73) param -> .

    ID              shift and go to state 77
    RPAREN          reduce using rule 73 (param -> .)
    INT             reduce using rule 73 (param -> .)
    FLOAT           reduce using rule 73 (param -> .)
    CHAR            reduce using rule 73 (param -> .)

    param                          shift and go to state 183

state 148

    (72) param -> ID mat especial .

    RPAREN          reduce using rule 72 (param -> ID mat especial .)
    INT             reduce using rule 72 (param -> ID mat especial .)
    FLOAT           reduce using rule 72 (param -> ID mat especial .)
    CHAR            reduce using rule 72 (param -> ID mat especial .)


state 149

    (44) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN . SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion

    SEMICOLON       shift and go to state 184


state 150

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN . SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    SEMICOLON       shift and go to state 185


state 151

    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET
    (135) pexp -> CTEI . guardaCTE
    (94) guardaCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 186
    MUL             reduce using rule 94 (guardaCTE -> .)
    DIV             reduce using rule 94 (guardaCTE -> .)
    PLUS            reduce using rule 94 (guardaCTE -> .)
    MINUS           reduce using rule 94 (guardaCTE -> .)
    GT              reduce using rule 94 (guardaCTE -> .)
    LT              reduce using rule 94 (guardaCTE -> .)
    GTE             reduce using rule 94 (guardaCTE -> .)
    LTE             reduce using rule 94 (guardaCTE -> .)
    NE              reduce using rule 94 (guardaCTE -> .)
    COMPARE         reduce using rule 94 (guardaCTE -> .)
    AND             reduce using rule 94 (guardaCTE -> .)
    OR              reduce using rule 94 (guardaCTE -> .)

  ! RBRACKET        [ reduce using rule 94 (guardaCTE -> .) ]

    guardaCTE                      shift and go to state 84

state 152

    (37) mat -> LBRACKET CTEI RBRACKET LBRACKET exp . RBRACKET
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr

    RBRACKET        shift and go to state 187
    OR              shift and go to state 86


state 153

    (35) mat -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr

    RBRACKET        shift and go to state 188
    OR              shift and go to state 86


state 154

    (36) mat -> LBRACKET exp RBRACKET LBRACKET CTEI . RBRACKET
    (135) pexp -> CTEI . guardaCTE
    (94) guardaCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 189
    MUL             reduce using rule 94 (guardaCTE -> .)
    DIV             reduce using rule 94 (guardaCTE -> .)
    PLUS            reduce using rule 94 (guardaCTE -> .)
    MINUS           reduce using rule 94 (guardaCTE -> .)
    GT              reduce using rule 94 (guardaCTE -> .)
    LT              reduce using rule 94 (guardaCTE -> .)
    GTE             reduce using rule 94 (guardaCTE -> .)
    LTE             reduce using rule 94 (guardaCTE -> .)
    NE              reduce using rule 94 (guardaCTE -> .)
    COMPARE         reduce using rule 94 (guardaCTE -> .)
    AND             reduce using rule 94 (guardaCTE -> .)
    OR              reduce using rule 94 (guardaCTE -> .)

  ! RBRACKET        [ reduce using rule 94 (guardaCTE -> .) ]

    guardaCTE                      shift and go to state 84

state 155

    (111) exp -> exp OR addOperadorName nexp . cuadruploOr
    (114) nexp -> nexp . AND addOperadorName compexp1 cuadruploAnd
    (112) cuadruploOr -> .

    AND             shift and go to state 87
    RBRACKET        reduce using rule 112 (cuadruploOr -> .)
    OR              reduce using rule 112 (cuadruploOr -> .)
    RPAREN          reduce using rule 112 (cuadruploOr -> .)
    COMMA           reduce using rule 112 (cuadruploOr -> .)
    SEMICOLON       reduce using rule 112 (cuadruploOr -> .)
    TO              reduce using rule 112 (cuadruploOr -> .)

    cuadruploOr                    shift and go to state 190

state 156

    (114) nexp -> nexp AND addOperadorName compexp1 . cuadruploAnd
    (118) compexp1 -> compexp1 . GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> compexp1 . LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> compexp1 . GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> compexp1 . LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> compexp1 . NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> compexp1 . COMPARE addOperadorName sumexp cuadruploComparacion
    (115) cuadruploAnd -> .

    GT              shift and go to state 88
    LT              shift and go to state 89
    GTE             shift and go to state 90
    LTE             shift and go to state 91
    NE              shift and go to state 92
    COMPARE         shift and go to state 93
    AND             reduce using rule 115 (cuadruploAnd -> .)
    RBRACKET        reduce using rule 115 (cuadruploAnd -> .)
    OR              reduce using rule 115 (cuadruploAnd -> .)
    RPAREN          reduce using rule 115 (cuadruploAnd -> .)
    COMMA           reduce using rule 115 (cuadruploAnd -> .)
    SEMICOLON       reduce using rule 115 (cuadruploAnd -> .)
    TO              reduce using rule 115 (cuadruploAnd -> .)

    cuadruploAnd                   shift and go to state 191

state 157

    (118) compexp1 -> compexp1 GT addOperadorName sumexp . cuadruploComparacion
    (127) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (125) cuadruploComparacion -> .

    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    GT              reduce using rule 125 (cuadruploComparacion -> .)
    LT              reduce using rule 125 (cuadruploComparacion -> .)
    GTE             reduce using rule 125 (cuadruploComparacion -> .)
    LTE             reduce using rule 125 (cuadruploComparacion -> .)
    NE              reduce using rule 125 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 125 (cuadruploComparacion -> .)
    AND             reduce using rule 125 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 125 (cuadruploComparacion -> .)
    OR              reduce using rule 125 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 125 (cuadruploComparacion -> .)
    COMMA           reduce using rule 125 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 125 (cuadruploComparacion -> .)
    TO              reduce using rule 125 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 192

state 158

    (119) compexp1 -> compexp1 LT addOperadorName sumexp . cuadruploComparacion
    (127) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (125) cuadruploComparacion -> .

    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    GT              reduce using rule 125 (cuadruploComparacion -> .)
    LT              reduce using rule 125 (cuadruploComparacion -> .)
    GTE             reduce using rule 125 (cuadruploComparacion -> .)
    LTE             reduce using rule 125 (cuadruploComparacion -> .)
    NE              reduce using rule 125 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 125 (cuadruploComparacion -> .)
    AND             reduce using rule 125 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 125 (cuadruploComparacion -> .)
    OR              reduce using rule 125 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 125 (cuadruploComparacion -> .)
    COMMA           reduce using rule 125 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 125 (cuadruploComparacion -> .)
    TO              reduce using rule 125 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 193

state 159

    (120) compexp1 -> compexp1 GTE addOperadorName sumexp . cuadruploComparacion
    (127) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (125) cuadruploComparacion -> .

    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    GT              reduce using rule 125 (cuadruploComparacion -> .)
    LT              reduce using rule 125 (cuadruploComparacion -> .)
    GTE             reduce using rule 125 (cuadruploComparacion -> .)
    LTE             reduce using rule 125 (cuadruploComparacion -> .)
    NE              reduce using rule 125 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 125 (cuadruploComparacion -> .)
    AND             reduce using rule 125 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 125 (cuadruploComparacion -> .)
    OR              reduce using rule 125 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 125 (cuadruploComparacion -> .)
    COMMA           reduce using rule 125 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 125 (cuadruploComparacion -> .)
    TO              reduce using rule 125 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 194

state 160

    (121) compexp1 -> compexp1 LTE addOperadorName sumexp . cuadruploComparacion
    (127) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (125) cuadruploComparacion -> .

    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    GT              reduce using rule 125 (cuadruploComparacion -> .)
    LT              reduce using rule 125 (cuadruploComparacion -> .)
    GTE             reduce using rule 125 (cuadruploComparacion -> .)
    LTE             reduce using rule 125 (cuadruploComparacion -> .)
    NE              reduce using rule 125 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 125 (cuadruploComparacion -> .)
    AND             reduce using rule 125 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 125 (cuadruploComparacion -> .)
    OR              reduce using rule 125 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 125 (cuadruploComparacion -> .)
    COMMA           reduce using rule 125 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 125 (cuadruploComparacion -> .)
    TO              reduce using rule 125 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 195

state 161

    (122) compexp1 -> compexp1 NE addOperadorName sumexp . cuadruploComparacion
    (127) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (125) cuadruploComparacion -> .

    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    GT              reduce using rule 125 (cuadruploComparacion -> .)
    LT              reduce using rule 125 (cuadruploComparacion -> .)
    GTE             reduce using rule 125 (cuadruploComparacion -> .)
    LTE             reduce using rule 125 (cuadruploComparacion -> .)
    NE              reduce using rule 125 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 125 (cuadruploComparacion -> .)
    AND             reduce using rule 125 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 125 (cuadruploComparacion -> .)
    OR              reduce using rule 125 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 125 (cuadruploComparacion -> .)
    COMMA           reduce using rule 125 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 125 (cuadruploComparacion -> .)
    TO              reduce using rule 125 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 196

state 162

    (123) compexp1 -> compexp1 COMPARE addOperadorName sumexp . cuadruploComparacion
    (127) sumexp -> sumexp . PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> sumexp . MINUS addOperadorName mulexp cuadruploSuma
    (125) cuadruploComparacion -> .

    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    GT              reduce using rule 125 (cuadruploComparacion -> .)
    LT              reduce using rule 125 (cuadruploComparacion -> .)
    GTE             reduce using rule 125 (cuadruploComparacion -> .)
    LTE             reduce using rule 125 (cuadruploComparacion -> .)
    NE              reduce using rule 125 (cuadruploComparacion -> .)
    COMPARE         reduce using rule 125 (cuadruploComparacion -> .)
    AND             reduce using rule 125 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 125 (cuadruploComparacion -> .)
    OR              reduce using rule 125 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 125 (cuadruploComparacion -> .)
    COMMA           reduce using rule 125 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 125 (cuadruploComparacion -> .)
    TO              reduce using rule 125 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 197

state 163

    (127) sumexp -> sumexp PLUS addOperadorName mulexp . cuadruploSuma
    (131) mulexp -> mulexp . MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> mulexp . DIV addOperadorName pexp cuadruploMultiplicacion
    (129) cuadruploSuma -> .

    MUL             shift and go to state 96
    DIV             shift and go to state 97
    PLUS            reduce using rule 129 (cuadruploSuma -> .)
    MINUS           reduce using rule 129 (cuadruploSuma -> .)
    GT              reduce using rule 129 (cuadruploSuma -> .)
    LT              reduce using rule 129 (cuadruploSuma -> .)
    GTE             reduce using rule 129 (cuadruploSuma -> .)
    LTE             reduce using rule 129 (cuadruploSuma -> .)
    NE              reduce using rule 129 (cuadruploSuma -> .)
    COMPARE         reduce using rule 129 (cuadruploSuma -> .)
    AND             reduce using rule 129 (cuadruploSuma -> .)
    RBRACKET        reduce using rule 129 (cuadruploSuma -> .)
    OR              reduce using rule 129 (cuadruploSuma -> .)
    RPAREN          reduce using rule 129 (cuadruploSuma -> .)
    COMMA           reduce using rule 129 (cuadruploSuma -> .)
    SEMICOLON       reduce using rule 129 (cuadruploSuma -> .)
    TO              reduce using rule 129 (cuadruploSuma -> .)

    cuadruploSuma                  shift and go to state 198

state 164

    (128) sumexp -> sumexp MINUS addOperadorName mulexp . cuadruploSuma
    (131) mulexp -> mulexp . MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> mulexp . DIV addOperadorName pexp cuadruploMultiplicacion
    (129) cuadruploSuma -> .

    MUL             shift and go to state 96
    DIV             shift and go to state 97
    PLUS            reduce using rule 129 (cuadruploSuma -> .)
    MINUS           reduce using rule 129 (cuadruploSuma -> .)
    GT              reduce using rule 129 (cuadruploSuma -> .)
    LT              reduce using rule 129 (cuadruploSuma -> .)
    GTE             reduce using rule 129 (cuadruploSuma -> .)
    LTE             reduce using rule 129 (cuadruploSuma -> .)
    NE              reduce using rule 129 (cuadruploSuma -> .)
    COMPARE         reduce using rule 129 (cuadruploSuma -> .)
    AND             reduce using rule 129 (cuadruploSuma -> .)
    RBRACKET        reduce using rule 129 (cuadruploSuma -> .)
    OR              reduce using rule 129 (cuadruploSuma -> .)
    RPAREN          reduce using rule 129 (cuadruploSuma -> .)
    COMMA           reduce using rule 129 (cuadruploSuma -> .)
    SEMICOLON       reduce using rule 129 (cuadruploSuma -> .)
    TO              reduce using rule 129 (cuadruploSuma -> .)

    cuadruploSuma                  shift and go to state 199

state 165

    (131) mulexp -> mulexp MUL addOperadorName pexp . cuadruploMultiplicacion
    (133) cuadruploMultiplicacion -> .

    MUL             reduce using rule 133 (cuadruploMultiplicacion -> .)
    DIV             reduce using rule 133 (cuadruploMultiplicacion -> .)
    PLUS            reduce using rule 133 (cuadruploMultiplicacion -> .)
    MINUS           reduce using rule 133 (cuadruploMultiplicacion -> .)
    GT              reduce using rule 133 (cuadruploMultiplicacion -> .)
    LT              reduce using rule 133 (cuadruploMultiplicacion -> .)
    GTE             reduce using rule 133 (cuadruploMultiplicacion -> .)
    LTE             reduce using rule 133 (cuadruploMultiplicacion -> .)
    NE              reduce using rule 133 (cuadruploMultiplicacion -> .)
    COMPARE         reduce using rule 133 (cuadruploMultiplicacion -> .)
    AND             reduce using rule 133 (cuadruploMultiplicacion -> .)
    RBRACKET        reduce using rule 133 (cuadruploMultiplicacion -> .)
    OR              reduce using rule 133 (cuadruploMultiplicacion -> .)
    RPAREN          reduce using rule 133 (cuadruploMultiplicacion -> .)
    COMMA           reduce using rule 133 (cuadruploMultiplicacion -> .)
    SEMICOLON       reduce using rule 133 (cuadruploMultiplicacion -> .)
    TO              reduce using rule 133 (cuadruploMultiplicacion -> .)

    cuadruploMultiplicacion        shift and go to state 200

state 166

    (132) mulexp -> mulexp DIV addOperadorName pexp . cuadruploMultiplicacion
    (133) cuadruploMultiplicacion -> .

    MUL             reduce using rule 133 (cuadruploMultiplicacion -> .)
    DIV             reduce using rule 133 (cuadruploMultiplicacion -> .)
    PLUS            reduce using rule 133 (cuadruploMultiplicacion -> .)
    MINUS           reduce using rule 133 (cuadruploMultiplicacion -> .)
    GT              reduce using rule 133 (cuadruploMultiplicacion -> .)
    LT              reduce using rule 133 (cuadruploMultiplicacion -> .)
    GTE             reduce using rule 133 (cuadruploMultiplicacion -> .)
    LTE             reduce using rule 133 (cuadruploMultiplicacion -> .)
    NE              reduce using rule 133 (cuadruploMultiplicacion -> .)
    COMPARE         reduce using rule 133 (cuadruploMultiplicacion -> .)
    AND             reduce using rule 133 (cuadruploMultiplicacion -> .)
    RBRACKET        reduce using rule 133 (cuadruploMultiplicacion -> .)
    OR              reduce using rule 133 (cuadruploMultiplicacion -> .)
    RPAREN          reduce using rule 133 (cuadruploMultiplicacion -> .)
    COMMA           reduce using rule 133 (cuadruploMultiplicacion -> .)
    SEMICOLON       reduce using rule 133 (cuadruploMultiplicacion -> .)
    TO              reduce using rule 133 (cuadruploMultiplicacion -> .)

    cuadruploMultiplicacion        shift and go to state 201

state 167

    (77) llamada -> ID llamadaEra LPAREN auxiliarExp . cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (81) cuadruploParametros -> .

    RPAREN          reduce using rule 81 (cuadruploParametros -> .)

    cuadruploParametros            shift and go to state 202

state 168

    (79) auxiliarExp -> exp .
    (80) auxiliarExp -> exp . COMMA exp
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          reduce using rule 79 (auxiliarExp -> exp .)
    COMMA           shift and go to state 203
    OR              shift and go to state 86


state 169

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY . END

    END             shift and go to state 204


state 170

    (51) estatutos -> estatutos_2 estatutos .

    RCURLY          reduce using rule 51 (estatutos -> estatutos_2 estatutos .)
    RETURN          reduce using rule 51 (estatutos -> estatutos_2 estatutos .)


state 171

    (53) estatutos_2 -> asignacion SEMICOLON .

    ID              reduce using rule 53 (estatutos_2 -> asignacion SEMICOLON .)
    READ            reduce using rule 53 (estatutos_2 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 53 (estatutos_2 -> asignacion SEMICOLON .)
    FOR             reduce using rule 53 (estatutos_2 -> asignacion SEMICOLON .)
    IF              reduce using rule 53 (estatutos_2 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 53 (estatutos_2 -> asignacion SEMICOLON .)
    RCURLY          reduce using rule 53 (estatutos_2 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 53 (estatutos_2 -> asignacion SEMICOLON .)


state 172

    (54) estatutos_2 -> llamada SEMICOLON .

    ID              reduce using rule 54 (estatutos_2 -> llamada SEMICOLON .)
    READ            reduce using rule 54 (estatutos_2 -> llamada SEMICOLON .)
    PRINT           reduce using rule 54 (estatutos_2 -> llamada SEMICOLON .)
    FOR             reduce using rule 54 (estatutos_2 -> llamada SEMICOLON .)
    IF              reduce using rule 54 (estatutos_2 -> llamada SEMICOLON .)
    WHILE           reduce using rule 54 (estatutos_2 -> llamada SEMICOLON .)
    RCURLY          reduce using rule 54 (estatutos_2 -> llamada SEMICOLON .)
    RETURN          reduce using rule 54 (estatutos_2 -> llamada SEMICOLON .)


state 173

    (55) estatutos_2 -> lectura SEMICOLON .

    ID              reduce using rule 55 (estatutos_2 -> lectura SEMICOLON .)
    READ            reduce using rule 55 (estatutos_2 -> lectura SEMICOLON .)
    PRINT           reduce using rule 55 (estatutos_2 -> lectura SEMICOLON .)
    FOR             reduce using rule 55 (estatutos_2 -> lectura SEMICOLON .)
    IF              reduce using rule 55 (estatutos_2 -> lectura SEMICOLON .)
    WHILE           reduce using rule 55 (estatutos_2 -> lectura SEMICOLON .)
    RCURLY          reduce using rule 55 (estatutos_2 -> lectura SEMICOLON .)
    RETURN          reduce using rule 55 (estatutos_2 -> lectura SEMICOLON .)


state 174

    (56) estatutos_2 -> escritura SEMICOLON .

    ID              reduce using rule 56 (estatutos_2 -> escritura SEMICOLON .)
    READ            reduce using rule 56 (estatutos_2 -> escritura SEMICOLON .)
    PRINT           reduce using rule 56 (estatutos_2 -> escritura SEMICOLON .)
    FOR             reduce using rule 56 (estatutos_2 -> escritura SEMICOLON .)
    IF              reduce using rule 56 (estatutos_2 -> escritura SEMICOLON .)
    WHILE           reduce using rule 56 (estatutos_2 -> escritura SEMICOLON .)
    RCURLY          reduce using rule 56 (estatutos_2 -> escritura SEMICOLON .)
    RETURN          reduce using rule 56 (estatutos_2 -> escritura SEMICOLON .)


state 175

    (60) asignacion -> ID guardaVariable_2 . EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> ID guardaVariable_2 . arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> ID guardaVariable_2 . mat EQUALS addOperadorName exp cuadruploAsignacion
    (32) arr -> . LBRACKET CTEI RBRACKET
    (33) arr -> . LBRACKET exp RBRACKET
    (34) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (35) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (36) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (37) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    EQUALS          shift and go to state 205
    LBRACKET        shift and go to state 48

    arr                            shift and go to state 206
    mat                            shift and go to state 207

state 176

    (84) lectura -> READ operadorRead . LPAREN exp cuadruploRead RPAREN

    LPAREN          shift and go to state 208


state 177

    (87) escritura -> PRINT LPAREN . operadorPrint escritura1 cuadruploPrint RPAREN
    (92) operadorPrint -> .

    COMILLA         reduce using rule 92 (operadorPrint -> .)
    CTEI            reduce using rule 92 (operadorPrint -> .)
    CTEF            reduce using rule 92 (operadorPrint -> .)
    CTEC            reduce using rule 92 (operadorPrint -> .)
    CTESTRING       reduce using rule 92 (operadorPrint -> .)
    LPAREN          reduce using rule 92 (operadorPrint -> .)
    ID              reduce using rule 92 (operadorPrint -> .)
    RPAREN          reduce using rule 92 (operadorPrint -> .)
    COMMA           reduce using rule 92 (operadorPrint -> .)
    OR              reduce using rule 92 (operadorPrint -> .)
    AND             reduce using rule 92 (operadorPrint -> .)
    GT              reduce using rule 92 (operadorPrint -> .)
    LT              reduce using rule 92 (operadorPrint -> .)
    GTE             reduce using rule 92 (operadorPrint -> .)
    LTE             reduce using rule 92 (operadorPrint -> .)
    NE              reduce using rule 92 (operadorPrint -> .)
    COMPARE         reduce using rule 92 (operadorPrint -> .)
    PLUS            reduce using rule 92 (operadorPrint -> .)
    MINUS           reduce using rule 92 (operadorPrint -> .)
    MUL             reduce using rule 92 (operadorPrint -> .)
    DIV             reduce using rule 92 (operadorPrint -> .)

    operadorPrint                  shift and go to state 209

state 178

    (95) for -> FOR operadorFor . LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor

    LPAREN          shift and go to state 210


state 179

    (100) if -> IF LPAREN . exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 211
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 180

    (106) while -> WHILE operadorWhile . LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    LPAREN          shift and go to state 212


state 181

    (67) param -> ID COMMA param agregarParametro .

    RPAREN          reduce using rule 67 (param -> ID COMMA param agregarParametro .)
    INT             reduce using rule 67 (param -> ID COMMA param agregarParametro .)
    FLOAT           reduce using rule 67 (param -> ID COMMA param agregarParametro .)
    CHAR            reduce using rule 67 (param -> ID COMMA param agregarParametro .)


state 182

    (69) param -> ID arr COMMA param .

    RPAREN          reduce using rule 69 (param -> ID arr COMMA param .)
    INT             reduce using rule 69 (param -> ID arr COMMA param .)
    FLOAT           reduce using rule 69 (param -> ID arr COMMA param .)
    CHAR            reduce using rule 69 (param -> ID arr COMMA param .)


state 183

    (70) param -> ID mat COMMA param .

    RPAREN          reduce using rule 70 (param -> ID mat COMMA param .)
    INT             reduce using rule 70 (param -> ID mat COMMA param .)
    FLOAT           reduce using rule 70 (param -> ID mat COMMA param .)
    CHAR            reduce using rule 70 (param -> ID mat COMMA param .)


state 184

    (44) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON . LCURLY var funcionGOTO estatutos RCURLY endFuncion

    LCURLY          shift and go to state 213


state 185

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON . LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    LCURLY          shift and go to state 214


state 186

    (34) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 34 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 187

    (37) mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 37 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)


state 188

    (35) mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 189

    (36) mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 36 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)


state 190

    (111) exp -> exp OR addOperadorName nexp cuadruploOr .

    RBRACKET        reduce using rule 111 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    OR              reduce using rule 111 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    RPAREN          reduce using rule 111 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    COMMA           reduce using rule 111 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    SEMICOLON       reduce using rule 111 (exp -> exp OR addOperadorName nexp cuadruploOr .)
    TO              reduce using rule 111 (exp -> exp OR addOperadorName nexp cuadruploOr .)


state 191

    (114) nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .

    AND             reduce using rule 114 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    RBRACKET        reduce using rule 114 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    OR              reduce using rule 114 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    RPAREN          reduce using rule 114 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    COMMA           reduce using rule 114 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    SEMICOLON       reduce using rule 114 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)
    TO              reduce using rule 114 (nexp -> nexp AND addOperadorName compexp1 cuadruploAnd .)


state 192

    (118) compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 118 (compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion .)


state 193

    (119) compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 119 (compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion .)


state 194

    (120) compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 120 (compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion .)


state 195

    (121) compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 121 (compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion .)


state 196

    (122) compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 122 (compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion .)


state 197

    (123) compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .

    GT              reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    LT              reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    GTE             reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    LTE             reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    NE              reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    COMPARE         reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 123 (compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion .)


state 198

    (127) sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .

    PLUS            reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    MINUS           reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    GT              reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    LT              reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    GTE             reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    LTE             reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    NE              reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    COMPARE         reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    AND             reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    RBRACKET        reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    OR              reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    RPAREN          reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    COMMA           reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    SEMICOLON       reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)
    TO              reduce using rule 127 (sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma .)


state 199

    (128) sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .

    PLUS            reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    MINUS           reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    GT              reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    LT              reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    GTE             reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    LTE             reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    NE              reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    COMPARE         reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    AND             reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    RBRACKET        reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    OR              reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    RPAREN          reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    COMMA           reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    SEMICOLON       reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)
    TO              reduce using rule 128 (sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma .)


state 200

    (131) mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .

    MUL             reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    DIV             reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    PLUS            reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    MINUS           reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    GT              reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    LT              reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    GTE             reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    LTE             reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    NE              reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    COMPARE         reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    AND             reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    RBRACKET        reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    OR              reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    RPAREN          reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    COMMA           reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    SEMICOLON       reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    TO              reduce using rule 131 (mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion .)


state 201

    (132) mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .

    MUL             reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    DIV             reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    PLUS            reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    MINUS           reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    GT              reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    LT              reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    GTE             reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    LTE             reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    NE              reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    COMPARE         reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    AND             reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    RBRACKET        reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    OR              reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    RPAREN          reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    COMMA           reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    SEMICOLON       reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    TO              reduce using rule 132 (mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion .)


state 202

    (77) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros . RPAREN cuadruploGoSub endProcesoLlena

    RPAREN          shift and go to state 215


state 203

    (80) auxiliarExp -> exp COMMA . exp
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    exp                            shift and go to state 216
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 204

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END .

    $end            reduce using rule 7 (main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END .)


state 205

    (60) asignacion -> ID guardaVariable_2 EQUALS . addOperadorName exp cuadruploAsignacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 217

state 206

    (61) asignacion -> ID guardaVariable_2 arr . EQUALS addOperadorName exp cuadruploAsignacion

    EQUALS          shift and go to state 218


state 207

    (62) asignacion -> ID guardaVariable_2 mat . EQUALS addOperadorName exp cuadruploAsignacion

    EQUALS          shift and go to state 219


state 208

    (84) lectura -> READ operadorRead LPAREN . exp cuadruploRead RPAREN
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    exp                            shift and go to state 220
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 209

    (87) escritura -> PRINT LPAREN operadorPrint . escritura1 cuadruploPrint RPAREN
    (88) escritura1 -> . escritura2 COMMA escritura2
    (89) escritura1 -> . escritura2
    (90) escritura2 -> . COMILLA CTESTRING COMILLA
    (91) escritura2 -> . exp cuadruploPrint
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    COMILLA         shift and go to state 223
    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    COMMA           reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    escritura1                     shift and go to state 221
    escritura2                     shift and go to state 222
    exp                            shift and go to state 224
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 210

    (95) for -> FOR operadorFor LPAREN . for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (96) for1 -> . FROM asignacion TO exp

    FROM            shift and go to state 226

    for1                           shift and go to state 225

state 211

    (100) if -> IF LPAREN exp . RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          shift and go to state 227
    OR              shift and go to state 86


state 212

    (106) while -> WHILE operadorWhile LPAREN . exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 228
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 213

    (44) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY . var funcionGOTO estatutos RCURLY endFuncion
    (14) var -> . vars
    (15) var -> .
    (16) vars -> . VAR var_2

    ID              reduce using rule 15 (var -> .)
    READ            reduce using rule 15 (var -> .)
    PRINT           reduce using rule 15 (var -> .)
    FOR             reduce using rule 15 (var -> .)
    IF              reduce using rule 15 (var -> .)
    WHILE           reduce using rule 15 (var -> .)
    RCURLY          reduce using rule 15 (var -> .)
    VAR             shift and go to state 11

    var                            shift and go to state 229
    vars                           shift and go to state 9

state 214

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY . var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (14) var -> . vars
    (15) var -> .
    (16) vars -> . VAR var_2

    ID              reduce using rule 15 (var -> .)
    READ            reduce using rule 15 (var -> .)
    PRINT           reduce using rule 15 (var -> .)
    FOR             reduce using rule 15 (var -> .)
    IF              reduce using rule 15 (var -> .)
    WHILE           reduce using rule 15 (var -> .)
    RETURN          reduce using rule 15 (var -> .)
    VAR             shift and go to state 11

    var                            shift and go to state 230
    vars                           shift and go to state 9

state 215

    (77) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN . cuadruploGoSub endProcesoLlena
    (82) cuadruploGoSub -> .

    MUL             reduce using rule 82 (cuadruploGoSub -> .)
    DIV             reduce using rule 82 (cuadruploGoSub -> .)
    PLUS            reduce using rule 82 (cuadruploGoSub -> .)
    MINUS           reduce using rule 82 (cuadruploGoSub -> .)
    GT              reduce using rule 82 (cuadruploGoSub -> .)
    LT              reduce using rule 82 (cuadruploGoSub -> .)
    GTE             reduce using rule 82 (cuadruploGoSub -> .)
    LTE             reduce using rule 82 (cuadruploGoSub -> .)
    NE              reduce using rule 82 (cuadruploGoSub -> .)
    COMPARE         reduce using rule 82 (cuadruploGoSub -> .)
    AND             reduce using rule 82 (cuadruploGoSub -> .)
    RBRACKET        reduce using rule 82 (cuadruploGoSub -> .)
    OR              reduce using rule 82 (cuadruploGoSub -> .)
    RPAREN          reduce using rule 82 (cuadruploGoSub -> .)
    SEMICOLON       reduce using rule 82 (cuadruploGoSub -> .)
    COMMA           reduce using rule 82 (cuadruploGoSub -> .)
    TO              reduce using rule 82 (cuadruploGoSub -> .)

    cuadruploGoSub                 shift and go to state 231

state 216

    (80) auxiliarExp -> exp COMMA exp .
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          reduce using rule 80 (auxiliarExp -> exp COMMA exp .)
    OR              shift and go to state 86


state 217

    (60) asignacion -> ID guardaVariable_2 EQUALS addOperadorName . exp cuadruploAsignacion
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 232
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 218

    (61) asignacion -> ID guardaVariable_2 arr EQUALS . addOperadorName exp cuadruploAsignacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 233

state 219

    (62) asignacion -> ID guardaVariable_2 mat EQUALS . addOperadorName exp cuadruploAsignacion
    (64) addOperadorName -> .

    CTEI            reduce using rule 64 (addOperadorName -> .)
    CTEF            reduce using rule 64 (addOperadorName -> .)
    CTEC            reduce using rule 64 (addOperadorName -> .)
    CTESTRING       reduce using rule 64 (addOperadorName -> .)
    LPAREN          reduce using rule 64 (addOperadorName -> .)
    ID              reduce using rule 64 (addOperadorName -> .)
    OR              reduce using rule 64 (addOperadorName -> .)
    AND             reduce using rule 64 (addOperadorName -> .)
    GT              reduce using rule 64 (addOperadorName -> .)
    LT              reduce using rule 64 (addOperadorName -> .)
    GTE             reduce using rule 64 (addOperadorName -> .)
    LTE             reduce using rule 64 (addOperadorName -> .)
    NE              reduce using rule 64 (addOperadorName -> .)
    COMPARE         reduce using rule 64 (addOperadorName -> .)
    PLUS            reduce using rule 64 (addOperadorName -> .)
    MINUS           reduce using rule 64 (addOperadorName -> .)
    MUL             reduce using rule 64 (addOperadorName -> .)
    DIV             reduce using rule 64 (addOperadorName -> .)
    SEMICOLON       reduce using rule 64 (addOperadorName -> .)
    TO              reduce using rule 64 (addOperadorName -> .)

    addOperadorName                shift and go to state 234

state 220

    (84) lectura -> READ operadorRead LPAREN exp . cuadruploRead RPAREN
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr
    (86) cuadruploRead -> .

    OR              shift and go to state 86
    RPAREN          reduce using rule 86 (cuadruploRead -> .)

    cuadruploRead                  shift and go to state 235

state 221

    (87) escritura -> PRINT LPAREN operadorPrint escritura1 . cuadruploPrint RPAREN
    (93) cuadruploPrint -> .

    RPAREN          reduce using rule 93 (cuadruploPrint -> .)

    cuadruploPrint                 shift and go to state 236

state 222

    (88) escritura1 -> escritura2 . COMMA escritura2
    (89) escritura1 -> escritura2 .

    COMMA           shift and go to state 237
    RPAREN          reduce using rule 89 (escritura1 -> escritura2 .)


state 223

    (90) escritura2 -> COMILLA . CTESTRING COMILLA

    CTESTRING       shift and go to state 238


state 224

    (91) escritura2 -> exp . cuadruploPrint
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr
    (93) cuadruploPrint -> .

    OR              shift and go to state 86
    COMMA           reduce using rule 93 (cuadruploPrint -> .)
    RPAREN          reduce using rule 93 (cuadruploPrint -> .)

    cuadruploPrint                 shift and go to state 239

state 225

    (95) for -> FOR operadorFor LPAREN for1 . RPAREN cuadruploFor LCURLY estatutos RCURLY endFor

    RPAREN          shift and go to state 240


state 226

    (96) for1 -> FROM . asignacion TO exp
    (60) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion

    ID              shift and go to state 242

    asignacion                     shift and go to state 241

state 227

    (100) if -> IF LPAREN exp RPAREN . cuadruploIf LCURLY estatutos RCURLY else endIf
    (101) cuadruploIf -> .

    LCURLY          reduce using rule 101 (cuadruploIf -> .)

    cuadruploIf                    shift and go to state 243

state 228

    (106) while -> WHILE operadorWhile LPAREN exp . RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          shift and go to state 244
    OR              shift and go to state 86


state 229

    (44) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var . funcionGOTO estatutos RCURLY endFuncion
    (47) funcionGOTO -> .

    ID              reduce using rule 47 (funcionGOTO -> .)
    READ            reduce using rule 47 (funcionGOTO -> .)
    PRINT           reduce using rule 47 (funcionGOTO -> .)
    FOR             reduce using rule 47 (funcionGOTO -> .)
    IF              reduce using rule 47 (funcionGOTO -> .)
    WHILE           reduce using rule 47 (funcionGOTO -> .)
    RCURLY          reduce using rule 47 (funcionGOTO -> .)

    funcionGOTO                    shift and go to state 245

state 230

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var . funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (47) funcionGOTO -> .

    ID              reduce using rule 47 (funcionGOTO -> .)
    READ            reduce using rule 47 (funcionGOTO -> .)
    PRINT           reduce using rule 47 (funcionGOTO -> .)
    FOR             reduce using rule 47 (funcionGOTO -> .)
    IF              reduce using rule 47 (funcionGOTO -> .)
    WHILE           reduce using rule 47 (funcionGOTO -> .)
    RETURN          reduce using rule 47 (funcionGOTO -> .)

    funcionGOTO                    shift and go to state 246

state 231

    (77) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub . endProcesoLlena
    (83) endProcesoLlena -> .

    MUL             reduce using rule 83 (endProcesoLlena -> .)
    DIV             reduce using rule 83 (endProcesoLlena -> .)
    PLUS            reduce using rule 83 (endProcesoLlena -> .)
    MINUS           reduce using rule 83 (endProcesoLlena -> .)
    GT              reduce using rule 83 (endProcesoLlena -> .)
    LT              reduce using rule 83 (endProcesoLlena -> .)
    GTE             reduce using rule 83 (endProcesoLlena -> .)
    LTE             reduce using rule 83 (endProcesoLlena -> .)
    NE              reduce using rule 83 (endProcesoLlena -> .)
    COMPARE         reduce using rule 83 (endProcesoLlena -> .)
    AND             reduce using rule 83 (endProcesoLlena -> .)
    RBRACKET        reduce using rule 83 (endProcesoLlena -> .)
    OR              reduce using rule 83 (endProcesoLlena -> .)
    RPAREN          reduce using rule 83 (endProcesoLlena -> .)
    SEMICOLON       reduce using rule 83 (endProcesoLlena -> .)
    COMMA           reduce using rule 83 (endProcesoLlena -> .)
    TO              reduce using rule 83 (endProcesoLlena -> .)

    endProcesoLlena                shift and go to state 247

state 232

    (60) asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp . cuadruploAsignacion
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr
    (65) cuadruploAsignacion -> .

    OR              shift and go to state 86
    SEMICOLON       reduce using rule 65 (cuadruploAsignacion -> .)
    TO              reduce using rule 65 (cuadruploAsignacion -> .)

    cuadruploAsignacion            shift and go to state 248

state 233

    (61) asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName . exp cuadruploAsignacion
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 249
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 234

    (62) asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName . exp cuadruploAsignacion
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)
    TO              reduce using rule 27 (empty -> .)

    exp                            shift and go to state 250
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 235

    (84) lectura -> READ operadorRead LPAREN exp cuadruploRead . RPAREN

    RPAREN          shift and go to state 251


state 236

    (87) escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint . RPAREN

    RPAREN          shift and go to state 252


state 237

    (88) escritura1 -> escritura2 COMMA . escritura2
    (90) escritura2 -> . COMILLA CTESTRING COMILLA
    (91) escritura2 -> . exp cuadruploPrint
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    COMILLA         shift and go to state 223
    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    escritura2                     shift and go to state 253
    exp                            shift and go to state 224
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 238

    (90) escritura2 -> COMILLA CTESTRING . COMILLA

    COMILLA         shift and go to state 254


state 239

    (91) escritura2 -> exp cuadruploPrint .

    COMMA           reduce using rule 91 (escritura2 -> exp cuadruploPrint .)
    RPAREN          reduce using rule 91 (escritura2 -> exp cuadruploPrint .)


state 240

    (95) for -> FOR operadorFor LPAREN for1 RPAREN . cuadruploFor LCURLY estatutos RCURLY endFor
    (98) cuadruploFor -> .

    LCURLY          reduce using rule 98 (cuadruploFor -> .)

    cuadruploFor                   shift and go to state 255

state 241

    (96) for1 -> FROM asignacion . TO exp

    TO              shift and go to state 256


state 242

    (60) asignacion -> ID . guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> ID . guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> ID . guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (63) guardaVariable_2 -> .

    EQUALS          reduce using rule 63 (guardaVariable_2 -> .)
    LBRACKET        reduce using rule 63 (guardaVariable_2 -> .)

    guardaVariable_2               shift and go to state 175

state 243

    (100) if -> IF LPAREN exp RPAREN cuadruploIf . LCURLY estatutos RCURLY else endIf

    LCURLY          shift and go to state 257


state 244

    (106) while -> WHILE operadorWhile LPAREN exp RPAREN . cuadruploWhile LCURLY estatutos RCURLY endWhile
    (108) cuadruploWhile -> .

    LCURLY          reduce using rule 108 (cuadruploWhile -> .)

    cuadruploWhile                 shift and go to state 258

state 245

    (44) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO . estatutos RCURLY endFuncion
    (51) estatutos -> . estatutos_2 estatutos
    (52) estatutos -> .
    (53) estatutos_2 -> . asignacion SEMICOLON
    (54) estatutos_2 -> . llamada SEMICOLON
    (55) estatutos_2 -> . lectura SEMICOLON
    (56) estatutos_2 -> . escritura SEMICOLON
    (57) estatutos_2 -> . for
    (58) estatutos_2 -> . if
    (59) estatutos_2 -> . while
    (60) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (95) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (100) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (106) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 52 (estatutos -> .)
    ID              shift and go to state 139
    READ            shift and go to state 140
    PRINT           shift and go to state 141
    FOR             shift and go to state 142
    IF              shift and go to state 143
    WHILE           shift and go to state 144

    estatutos                      shift and go to state 259
    estatutos_2                    shift and go to state 131
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    lectura                        shift and go to state 134
    escritura                      shift and go to state 135
    for                            shift and go to state 136
    if                             shift and go to state 137
    while                          shift and go to state 138

state 246

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO . estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (51) estatutos -> . estatutos_2 estatutos
    (52) estatutos -> .
    (53) estatutos_2 -> . asignacion SEMICOLON
    (54) estatutos_2 -> . llamada SEMICOLON
    (55) estatutos_2 -> . lectura SEMICOLON
    (56) estatutos_2 -> . escritura SEMICOLON
    (57) estatutos_2 -> . for
    (58) estatutos_2 -> . if
    (59) estatutos_2 -> . while
    (60) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (95) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (100) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (106) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RETURN          reduce using rule 52 (estatutos -> .)
    ID              shift and go to state 139
    READ            shift and go to state 140
    PRINT           shift and go to state 141
    FOR             shift and go to state 142
    IF              shift and go to state 143
    WHILE           shift and go to state 144

    estatutos                      shift and go to state 260
    estatutos_2                    shift and go to state 131
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    lectura                        shift and go to state 134
    escritura                      shift and go to state 135
    for                            shift and go to state 136
    if                             shift and go to state 137
    while                          shift and go to state 138

state 247

    (77) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .

    MUL             reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    DIV             reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    PLUS            reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    MINUS           reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    GT              reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    LT              reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    GTE             reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    LTE             reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    NE              reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    COMPARE         reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    AND             reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    RBRACKET        reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    OR              reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    RPAREN          reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    SEMICOLON       reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    COMMA           reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    TO              reduce using rule 77 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)


state 248

    (60) asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion .

    SEMICOLON       reduce using rule 60 (asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion .)
    TO              reduce using rule 60 (asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion .)


state 249

    (61) asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp . cuadruploAsignacion
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr
    (65) cuadruploAsignacion -> .

    OR              shift and go to state 86
    SEMICOLON       reduce using rule 65 (cuadruploAsignacion -> .)
    TO              reduce using rule 65 (cuadruploAsignacion -> .)

    cuadruploAsignacion            shift and go to state 261

state 250

    (62) asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp . cuadruploAsignacion
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr
    (65) cuadruploAsignacion -> .

    OR              shift and go to state 86
    SEMICOLON       reduce using rule 65 (cuadruploAsignacion -> .)
    TO              reduce using rule 65 (cuadruploAsignacion -> .)

    cuadruploAsignacion            shift and go to state 262

state 251

    (84) lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN .

    SEMICOLON       reduce using rule 84 (lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN .)


state 252

    (87) escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN .

    SEMICOLON       reduce using rule 87 (escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN .)


state 253

    (88) escritura1 -> escritura2 COMMA escritura2 .

    RPAREN          reduce using rule 88 (escritura1 -> escritura2 COMMA escritura2 .)


state 254

    (90) escritura2 -> COMILLA CTESTRING COMILLA .

    COMMA           reduce using rule 90 (escritura2 -> COMILLA CTESTRING COMILLA .)
    RPAREN          reduce using rule 90 (escritura2 -> COMILLA CTESTRING COMILLA .)


state 255

    (95) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor . LCURLY estatutos RCURLY endFor

    LCURLY          shift and go to state 263


state 256

    (96) for1 -> FROM asignacion TO . exp
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    RPAREN          reduce using rule 27 (empty -> .)

    exp                            shift and go to state 264
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 257

    (100) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY . estatutos RCURLY else endIf
    (51) estatutos -> . estatutos_2 estatutos
    (52) estatutos -> .
    (53) estatutos_2 -> . asignacion SEMICOLON
    (54) estatutos_2 -> . llamada SEMICOLON
    (55) estatutos_2 -> . lectura SEMICOLON
    (56) estatutos_2 -> . escritura SEMICOLON
    (57) estatutos_2 -> . for
    (58) estatutos_2 -> . if
    (59) estatutos_2 -> . while
    (60) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (95) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (100) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (106) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 52 (estatutos -> .)
    ID              shift and go to state 139
    READ            shift and go to state 140
    PRINT           shift and go to state 141
    FOR             shift and go to state 142
    IF              shift and go to state 143
    WHILE           shift and go to state 144

    estatutos                      shift and go to state 265
    estatutos_2                    shift and go to state 131
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    lectura                        shift and go to state 134
    escritura                      shift and go to state 135
    for                            shift and go to state 136
    if                             shift and go to state 137
    while                          shift and go to state 138

state 258

    (106) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile . LCURLY estatutos RCURLY endWhile

    LCURLY          shift and go to state 266


state 259

    (44) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos . RCURLY endFuncion

    RCURLY          shift and go to state 267


state 260

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos . RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    RETURN          shift and go to state 268


state 261

    (61) asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion .

    SEMICOLON       reduce using rule 61 (asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion .)
    TO              reduce using rule 61 (asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion .)


state 262

    (62) asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion .

    SEMICOLON       reduce using rule 62 (asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion .)
    TO              reduce using rule 62 (asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion .)


state 263

    (95) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY . estatutos RCURLY endFor
    (51) estatutos -> . estatutos_2 estatutos
    (52) estatutos -> .
    (53) estatutos_2 -> . asignacion SEMICOLON
    (54) estatutos_2 -> . llamada SEMICOLON
    (55) estatutos_2 -> . lectura SEMICOLON
    (56) estatutos_2 -> . escritura SEMICOLON
    (57) estatutos_2 -> . for
    (58) estatutos_2 -> . if
    (59) estatutos_2 -> . while
    (60) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (95) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (100) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (106) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 52 (estatutos -> .)
    ID              shift and go to state 139
    READ            shift and go to state 140
    PRINT           shift and go to state 141
    FOR             shift and go to state 142
    IF              shift and go to state 143
    WHILE           shift and go to state 144

    estatutos                      shift and go to state 269
    estatutos_2                    shift and go to state 131
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    lectura                        shift and go to state 134
    escritura                      shift and go to state 135
    for                            shift and go to state 136
    if                             shift and go to state 137
    while                          shift and go to state 138

state 264

    (96) for1 -> FROM asignacion TO exp .
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr

    RPAREN          reduce using rule 96 (for1 -> FROM asignacion TO exp .)
    OR              shift and go to state 86


state 265

    (100) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos . RCURLY else endIf

    RCURLY          shift and go to state 270


state 266

    (106) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY . estatutos RCURLY endWhile
    (51) estatutos -> . estatutos_2 estatutos
    (52) estatutos -> .
    (53) estatutos_2 -> . asignacion SEMICOLON
    (54) estatutos_2 -> . llamada SEMICOLON
    (55) estatutos_2 -> . lectura SEMICOLON
    (56) estatutos_2 -> . escritura SEMICOLON
    (57) estatutos_2 -> . for
    (58) estatutos_2 -> . if
    (59) estatutos_2 -> . while
    (60) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (95) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (100) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (106) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 52 (estatutos -> .)
    ID              shift and go to state 139
    READ            shift and go to state 140
    PRINT           shift and go to state 141
    FOR             shift and go to state 142
    IF              shift and go to state 143
    WHILE           shift and go to state 144

    estatutos                      shift and go to state 271
    estatutos_2                    shift and go to state 131
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    lectura                        shift and go to state 134
    escritura                      shift and go to state 135
    for                            shift and go to state 136
    if                             shift and go to state 137
    while                          shift and go to state 138

state 267

    (44) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY . endFuncion
    (48) endFuncion -> .

    FUNCION         reduce using rule 48 (endFuncion -> .)
    MAIN            reduce using rule 48 (endFuncion -> .)
    $end            reduce using rule 48 (endFuncion -> .)

    endFuncion                     shift and go to state 272

state 268

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN . operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (49) operadorReturn -> .

    CTEI            reduce using rule 49 (operadorReturn -> .)
    CTEF            reduce using rule 49 (operadorReturn -> .)
    CTEC            reduce using rule 49 (operadorReturn -> .)
    CTESTRING       reduce using rule 49 (operadorReturn -> .)
    LPAREN          reduce using rule 49 (operadorReturn -> .)
    ID              reduce using rule 49 (operadorReturn -> .)
    OR              reduce using rule 49 (operadorReturn -> .)
    SEMICOLON       reduce using rule 49 (operadorReturn -> .)
    AND             reduce using rule 49 (operadorReturn -> .)
    GT              reduce using rule 49 (operadorReturn -> .)
    LT              reduce using rule 49 (operadorReturn -> .)
    GTE             reduce using rule 49 (operadorReturn -> .)
    LTE             reduce using rule 49 (operadorReturn -> .)
    NE              reduce using rule 49 (operadorReturn -> .)
    COMPARE         reduce using rule 49 (operadorReturn -> .)
    PLUS            reduce using rule 49 (operadorReturn -> .)
    MINUS           reduce using rule 49 (operadorReturn -> .)
    MUL             reduce using rule 49 (operadorReturn -> .)
    DIV             reduce using rule 49 (operadorReturn -> .)

    operadorReturn                 shift and go to state 273

state 269

    (95) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos . RCURLY endFor

    RCURLY          shift and go to state 274


state 270

    (100) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY . else endIf
    (103) else -> . ELSE cuadruploElse LCURLY estatutos RCURLY
    (104) else -> .

    ELSE            shift and go to state 276
    ID              reduce using rule 104 (else -> .)
    READ            reduce using rule 104 (else -> .)
    PRINT           reduce using rule 104 (else -> .)
    FOR             reduce using rule 104 (else -> .)
    IF              reduce using rule 104 (else -> .)
    WHILE           reduce using rule 104 (else -> .)
    RCURLY          reduce using rule 104 (else -> .)
    RETURN          reduce using rule 104 (else -> .)

    else                           shift and go to state 275

state 271

    (106) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos . RCURLY endWhile

    RCURLY          shift and go to state 277


state 272

    (44) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .

    FUNCION         reduce using rule 44 (funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .)
    MAIN            reduce using rule 44 (funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .)
    $end            reduce using rule 44 (funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .)


state 273

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn . exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (110) exp -> . nexp
    (111) exp -> . exp OR addOperadorName nexp cuadruploOr
    (113) nexp -> . compexp1
    (114) nexp -> . nexp AND addOperadorName compexp1 cuadruploAnd
    (118) compexp1 -> . compexp1 GT addOperadorName sumexp cuadruploComparacion
    (119) compexp1 -> . compexp1 LT addOperadorName sumexp cuadruploComparacion
    (120) compexp1 -> . compexp1 GTE addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . compexp1 LTE addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . compexp1 NE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . compexp1 COMPARE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp
    (126) sumexp -> . mulexp
    (127) sumexp -> . sumexp PLUS addOperadorName mulexp cuadruploSuma
    (128) sumexp -> . sumexp MINUS addOperadorName mulexp cuadruploSuma
    (130) mulexp -> . pexp
    (131) mulexp -> . mulexp MUL addOperadorName pexp cuadruploMultiplicacion
    (132) mulexp -> . mulexp DIV addOperadorName pexp cuadruploMultiplicacion
    (134) pexp -> . var1 guardaID
    (135) pexp -> . CTEI guardaCTE
    (136) pexp -> . CTEF guardaCTE
    (137) pexp -> . CTEC guardaCTE
    (138) pexp -> . CTESTRING guardaCTE
    (139) pexp -> . llamada
    (140) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (27) empty -> .

    CTEI            shift and go to state 103
    CTEF            shift and go to state 69
    CTEC            shift and go to state 70
    CTESTRING       shift and go to state 71
    LPAREN          shift and go to state 73
    ID              shift and go to state 74
    MUL             reduce using rule 27 (empty -> .)
    DIV             reduce using rule 27 (empty -> .)
    PLUS            reduce using rule 27 (empty -> .)
    MINUS           reduce using rule 27 (empty -> .)
    GT              reduce using rule 27 (empty -> .)
    LT              reduce using rule 27 (empty -> .)
    GTE             reduce using rule 27 (empty -> .)
    LTE             reduce using rule 27 (empty -> .)
    NE              reduce using rule 27 (empty -> .)
    COMPARE         reduce using rule 27 (empty -> .)
    AND             reduce using rule 27 (empty -> .)
    OR              reduce using rule 27 (empty -> .)
    SEMICOLON       reduce using rule 27 (empty -> .)

    exp                            shift and go to state 278
    nexp                           shift and go to state 63
    compexp1                       shift and go to state 64
    sumexp                         shift and go to state 65
    mulexp                         shift and go to state 66
    pexp                           shift and go to state 67
    var1                           shift and go to state 68
    llamada                        shift and go to state 72
    empty                          shift and go to state 32

state 274

    (95) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY . endFor
    (99) endFor -> .

    ID              reduce using rule 99 (endFor -> .)
    READ            reduce using rule 99 (endFor -> .)
    PRINT           reduce using rule 99 (endFor -> .)
    FOR             reduce using rule 99 (endFor -> .)
    IF              reduce using rule 99 (endFor -> .)
    WHILE           reduce using rule 99 (endFor -> .)
    RCURLY          reduce using rule 99 (endFor -> .)
    RETURN          reduce using rule 99 (endFor -> .)

    endFor                         shift and go to state 279

state 275

    (100) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else . endIf
    (102) endIf -> .

    ID              reduce using rule 102 (endIf -> .)
    READ            reduce using rule 102 (endIf -> .)
    PRINT           reduce using rule 102 (endIf -> .)
    FOR             reduce using rule 102 (endIf -> .)
    IF              reduce using rule 102 (endIf -> .)
    WHILE           reduce using rule 102 (endIf -> .)
    RCURLY          reduce using rule 102 (endIf -> .)
    RETURN          reduce using rule 102 (endIf -> .)

    endIf                          shift and go to state 280

state 276

    (103) else -> ELSE . cuadruploElse LCURLY estatutos RCURLY
    (105) cuadruploElse -> .

    LCURLY          reduce using rule 105 (cuadruploElse -> .)

    cuadruploElse                  shift and go to state 281

state 277

    (106) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY . endWhile
    (109) endWhile -> .

    ID              reduce using rule 109 (endWhile -> .)
    READ            reduce using rule 109 (endWhile -> .)
    PRINT           reduce using rule 109 (endWhile -> .)
    FOR             reduce using rule 109 (endWhile -> .)
    IF              reduce using rule 109 (endWhile -> .)
    WHILE           reduce using rule 109 (endWhile -> .)
    RCURLY          reduce using rule 109 (endWhile -> .)
    RETURN          reduce using rule 109 (endWhile -> .)

    endWhile                       shift and go to state 282

state 278

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp . cuadruploReturn SEMICOLON RCURLY endFuncion
    (111) exp -> exp . OR addOperadorName nexp cuadruploOr
    (50) cuadruploReturn -> .

    OR              shift and go to state 86
    SEMICOLON       reduce using rule 50 (cuadruploReturn -> .)

    cuadruploReturn                shift and go to state 283

state 279

    (95) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .

    ID              reduce using rule 95 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    READ            reduce using rule 95 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    PRINT           reduce using rule 95 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    FOR             reduce using rule 95 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    IF              reduce using rule 95 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    WHILE           reduce using rule 95 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    RCURLY          reduce using rule 95 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    RETURN          reduce using rule 95 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)


state 280

    (100) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .

    ID              reduce using rule 100 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    READ            reduce using rule 100 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    PRINT           reduce using rule 100 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    FOR             reduce using rule 100 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    IF              reduce using rule 100 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    WHILE           reduce using rule 100 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    RCURLY          reduce using rule 100 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    RETURN          reduce using rule 100 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)


state 281

    (103) else -> ELSE cuadruploElse . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 284


state 282

    (106) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .

    ID              reduce using rule 106 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    READ            reduce using rule 106 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    PRINT           reduce using rule 106 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    FOR             reduce using rule 106 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    IF              reduce using rule 106 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    WHILE           reduce using rule 106 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    RCURLY          reduce using rule 106 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    RETURN          reduce using rule 106 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)


state 283

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn . SEMICOLON RCURLY endFuncion

    SEMICOLON       shift and go to state 285


state 284

    (103) else -> ELSE cuadruploElse LCURLY . estatutos RCURLY
    (51) estatutos -> . estatutos_2 estatutos
    (52) estatutos -> .
    (53) estatutos_2 -> . asignacion SEMICOLON
    (54) estatutos_2 -> . llamada SEMICOLON
    (55) estatutos_2 -> . lectura SEMICOLON
    (56) estatutos_2 -> . escritura SEMICOLON
    (57) estatutos_2 -> . for
    (58) estatutos_2 -> . if
    (59) estatutos_2 -> . while
    (60) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (62) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (77) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (95) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (100) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (106) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 52 (estatutos -> .)
    ID              shift and go to state 139
    READ            shift and go to state 140
    PRINT           shift and go to state 141
    FOR             shift and go to state 142
    IF              shift and go to state 143
    WHILE           shift and go to state 144

    estatutos                      shift and go to state 286
    estatutos_2                    shift and go to state 131
    asignacion                     shift and go to state 132
    llamada                        shift and go to state 133
    lectura                        shift and go to state 134
    escritura                      shift and go to state 135
    for                            shift and go to state 136
    if                             shift and go to state 137
    while                          shift and go to state 138

state 285

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON . RCURLY endFuncion

    RCURLY          shift and go to state 287


state 286

    (103) else -> ELSE cuadruploElse LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 288


state 287

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY . endFuncion
    (48) endFuncion -> .

    FUNCION         reduce using rule 48 (endFuncion -> .)
    MAIN            reduce using rule 48 (endFuncion -> .)
    $end            reduce using rule 48 (endFuncion -> .)

    endFuncion                     shift and go to state 289

state 288

    (103) else -> ELSE cuadruploElse LCURLY estatutos RCURLY .

    ID              reduce using rule 103 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    READ            reduce using rule 103 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    PRINT           reduce using rule 103 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    FOR             reduce using rule 103 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    IF              reduce using rule 103 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    WHILE           reduce using rule 103 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 103 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    RETURN          reduce using rule 103 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)


state 289

    (45) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .

    FUNCION         reduce using rule 45 (funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .)
    MAIN            reduce using rule 45 (funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .)
    $end            reduce using rule 45 (funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 5 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 31 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 46 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 47 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 61 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 74 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 151 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 154 resolved as shift
