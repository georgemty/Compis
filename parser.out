Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PROGRAM ID SEMICOLON agregarProg prog_1
Rule 2     agregarProg -> <empty>
Rule 3     prog_1 -> var cuadruploMain metodos mainEnd prog_2
Rule 4     prog_1 -> var cuadruploMain metodos
Rule 5     prog_1 -> prog_2
Rule 6     prog_2 -> main
Rule 7     main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END
Rule 8     cuadruploMain -> <empty>
Rule 9     mainEnd -> <empty>
Rule 10    type -> INT guardaTipoDeVariable
Rule 11    type -> FLOAT guardaTipoDeVariable
Rule 12    type -> CHAR guardaTipoDeVariable
Rule 13    guardaTipoDeVariable -> <empty>
Rule 14    var -> vars
Rule 15    var -> empty
Rule 16    vars -> VAR var_2
Rule 17    var_2 -> var_2 type var1 SEMICOLON agregarVar
Rule 18    var_2 -> empty
Rule 19    var1 -> ID
Rule 20    var1 -> ID COMMA var1 agregarVar
Rule 21    var1 -> ID arr
Rule 22    var1 -> ID arr COMMA var1 agregarVar
Rule 23    var1 -> ID mat COMMA var1 agregarVar
Rule 24    var1 -> ID mat
Rule 25    var1 -> ID mat especial
Rule 26    var1 -> empty
Rule 27    agregarVar -> <empty>
Rule 28    especial -> TRANSPUESTA
Rule 29    especial -> INVERSA
Rule 30    especial -> DETERMINANTE
Rule 31    arr -> LBRACKET CTEI RBRACKET
Rule 32    arr -> LBRACKET exp RBRACKET
Rule 33    mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
Rule 34    mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET
Rule 35    mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
Rule 36    mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET
Rule 37    metodos -> funcion metodos
Rule 38    metodos -> empty
Rule 39    funcion -> FUNCION VOID funcion_1
Rule 40    funcion -> FUNCION INT funcion_2
Rule 41    funcion -> FUNCION CHAR funcion_2
Rule 42    funcion -> FUNCION FLOAT funcion_2
Rule 43    funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
Rule 44    funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
Rule 45    guardaFuncion -> <empty>
Rule 46    funcionGOTO -> <empty>
Rule 47    endFuncion -> <empty>
Rule 48    operadorReturn -> <empty>
Rule 49    cuadruploReturn -> <empty>
Rule 50    estatutos -> estatutos_2 estatutos
Rule 51    estatutos -> empty
Rule 52    estatutos_2 -> asignacion SEMICOLON
Rule 53    estatutos_2 -> llamada SEMICOLON
Rule 54    estatutos_2 -> lectura SEMICOLON
Rule 55    estatutos_2 -> escritura SEMICOLON
Rule 56    estatutos_2 -> for
Rule 57    estatutos_2 -> if
Rule 58    estatutos_2 -> while
Rule 59    asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
Rule 60    asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
Rule 61    asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
Rule 62    guardaVariable_2 -> <empty>
Rule 63    addOperadorName -> <empty>
Rule 64    cuadruploAsignacion -> <empty>
Rule 65    param -> ID agregarParametro
Rule 66    param -> ID COMMA param agregarParametro
Rule 67    param -> ID arr
Rule 68    param -> ID arr COMMA param
Rule 69    param -> ID mat COMMA param
Rule 70    param -> ID mat
Rule 71    param -> ID mat especial
Rule 72    param -> empty
Rule 73    agregarParametro -> <empty>
Rule 74    param2 -> param2 type param
Rule 75    param2 -> empty
Rule 76    llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
Rule 77    llamadaEra -> <empty>
Rule 78    auxiliarExp -> exp
Rule 79    auxiliarExp -> exp COMMA auxiliarExp
Rule 80    auxiliarExp -> empty
Rule 81    cuadruploParametros -> <empty>
Rule 82    cuadruploGoSub -> <empty>
Rule 83    endProcesoLlena -> <empty>
Rule 84    lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN
Rule 85    operadorRead -> <empty>
Rule 86    cuadruploRead -> <empty>
Rule 87    escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
Rule 88    escritura1 -> escritura2 COMMA escritura2
Rule 89    escritura1 -> escritura2
Rule 90    escritura2 -> COMILLA CTESTRING COMILLA
Rule 91    escritura2 -> CTEI guardaCTE cuadruploPrint
Rule 92    escritura2 -> CTEF guardaCTE cuadruploPrint
Rule 93    escritura2 -> exp
Rule 94    operadorPrint -> <empty>
Rule 95    cuadruploPrint -> <empty>
Rule 96    guardaCTE -> <empty>
Rule 97    for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
Rule 98    for1 -> FROM asignacion TO exp
Rule 99    operadorFor -> <empty>
Rule 100   cuadruploFor -> <empty>
Rule 101   endFor -> <empty>
Rule 102   if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
Rule 103   cuadruploIf -> <empty>
Rule 104   endIf -> <empty>
Rule 105   else -> ELSE cuadruploElse LCURLY estatutos RCURLY
Rule 106   else -> empty
Rule 107   cuadruploElse -> <empty>
Rule 108   while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
Rule 109   operadorWhile -> <empty>
Rule 110   cuadruploWhile -> <empty>
Rule 111   endWhile -> <empty>
Rule 112   exp -> nexp
Rule 113   exp -> nexp OR addOperadorName nexp cuadruploOr
Rule 114   cuadruploOr -> <empty>
Rule 115   nexp -> compexp
Rule 116   nexp -> compexp AND addOperadorName compexp cuadruploAnd
Rule 117   cuadruploAnd -> <empty>
Rule 118   compexp -> sumexp
Rule 119   compexp -> compexp1 sumexp
Rule 120   compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion
Rule 121   compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion
Rule 122   compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion
Rule 123   compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion
Rule 124   compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion
Rule 125   compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion
Rule 126   cuadruploComparacion -> <empty>
Rule 127   sumexp -> mulexp
Rule 128   sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma
Rule 129   sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma
Rule 130   cuadruploSuma -> <empty>
Rule 131   mulexp -> pexp
Rule 132   mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion
Rule 133   mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion
Rule 134   cuadruploMultiplicacion -> <empty>
Rule 135   pexp -> var1 guardaID
Rule 136   pexp -> CTEI guardaCTE
Rule 137   pexp -> CTEF guardaCTE
Rule 138   pexp -> CTEC guardaCTE
Rule 139   pexp -> CTESTRING guardaCTE
Rule 140   pexp -> llamada
Rule 141   pexp -> LPAREN exp RPAREN
Rule 142   guardaID -> <empty>
Rule 143   empty -> <empty>

Terminals, with rules where they appear

AND                  : 116
CHAR                 : 12 41
COMILLA              : 90 90
COMMA                : 20 22 23 66 68 69 79 88
COMPARE              : 125
CTEC                 : 138
CTEF                 : 92 137
CTEI                 : 31 33 33 35 36 91 136
CTESTRING            : 90 139
DETERMINANTE         : 30
DIV                  : 133
ELSE                 : 105
END                  : 7
EQUALS               : 59 60 61
FLOAT                : 11 42
FOR                  : 97
FROM                 : 98
FUNCION              : 39 40 41 42
GT                   : 120
GTE                  : 122
ID                   : 1 19 20 21 22 23 24 25 43 44 59 60 61 65 66 67 68 69 70 71 76
IF                   : 102
INT                  : 10 40
INVERSA              : 29
LBRACKET             : 31 32 33 33 34 34 35 35 36 36
LCURLY               : 7 43 44 97 102 105 108
LPAREN               : 7 43 44 76 84 87 97 102 108 141
LT                   : 121
LTE                  : 123
MAIN                 : 7
MINUS                : 129
MUL                  : 132
NE                   : 124
OR                   : 113
PLUS                 : 128
PRINT                : 87
PROGRAM              : 1
RBRACKET             : 31 32 33 33 34 34 35 35 36 36
RCURLY               : 7 43 44 97 102 105 108
READ                 : 84
RETURN               : 44
RPAREN               : 7 43 44 76 84 87 97 102 108 141
SEMICOLON            : 1 17 43 44 44 52 53 54 55
TO                   : 98
TRANSPUESTA          : 28
VAR                  : 16
VOID                 : 39
WHILE                : 108
error                : 

Nonterminals, with rules where they appear

addOperadorName      : 59 60 61 113 116 120 121 122 123 124 125 128 129 132 133
agregarParametro     : 65 66
agregarProg          : 1
agregarVar           : 17 20 22 23
arr                  : 21 22 60 67 68
asignacion           : 52 98
auxiliarExp          : 76 79
compexp              : 115 116 116
compexp1             : 119
cuadruploAnd         : 116
cuadruploAsignacion  : 59 60 61
cuadruploComparacion : 120 121 122 123 124 125
cuadruploElse        : 105
cuadruploFor         : 97
cuadruploGoSub       : 76
cuadruploIf          : 102
cuadruploMain        : 3 4
cuadruploMultiplicacion : 132 133
cuadruploOr          : 113
cuadruploParametros  : 76
cuadruploPrint       : 87 91 92
cuadruploRead        : 84
cuadruploReturn      : 44
cuadruploSuma        : 128 129
cuadruploWhile       : 108
else                 : 102
empty                : 15 18 26 38 51 72 75 80 106
endFor               : 97
endFuncion           : 43 44
endIf                : 102
endProcesoLlena      : 76
endWhile             : 108
escritura            : 55
escritura1           : 87
escritura2           : 88 88 89
especial             : 25 71
estatutos            : 7 43 44 50 97 102 105 108
estatutos_2          : 50
exp                  : 32 34 34 35 36 44 59 60 61 78 79 84 93 98 102 108 141
for                  : 56
for1                 : 97
funcion              : 37
funcionGOTO          : 43 44
funcion_1            : 39
funcion_2            : 40 41 42
guardaCTE            : 91 92 136 137 138 139
guardaFuncion        : 7 43 44
guardaID             : 135
guardaTipoDeVariable : 10 11 12
guardaVariable_2     : 59 60 61
if                   : 57
lectura              : 54
llamada              : 53 140
llamadaEra           : 76
main                 : 6
mainEnd              : 3
mat                  : 23 24 25 61 69 70 71
metodos              : 3 4 37
mulexp               : 127 128 128 129 129
nexp                 : 112 113 113
operadorFor          : 97
operadorPrint        : 87
operadorRead         : 84
operadorReturn       : 44
operadorWhile        : 108
param                : 66 68 69 74
param2               : 7 43 44 74
pexp                 : 131 132 132 133 133
prog                 : 0
prog_1               : 1
prog_2               : 3 5
sumexp               : 118 119 120 120 121 121 122 122 123 123 124 124 125 125
type                 : 17 74
var                  : 3 4 7 43 44
var1                 : 17 20 22 23 135
var_2                : 16 17
vars                 : 14
while                : 58

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PROGRAM ID SEMICOLON agregarProg prog_1

    PROGRAM         shift and go to state 2

    prog                           shift and go to state 1

state 1

    (0) S' -> prog .



state 2

    (1) prog -> PROGRAM . ID SEMICOLON agregarProg prog_1

    ID              shift and go to state 3


state 3

    (1) prog -> PROGRAM ID . SEMICOLON agregarProg prog_1

    SEMICOLON       shift and go to state 4


state 4

    (1) prog -> PROGRAM ID SEMICOLON . agregarProg prog_1
    (2) agregarProg -> .

    VAR             reduce using rule 2 (agregarProg -> .)
    MAIN            reduce using rule 2 (agregarProg -> .)
    FUNCION         reduce using rule 2 (agregarProg -> .)
    $end            reduce using rule 2 (agregarProg -> .)

    agregarProg                    shift and go to state 5

state 5

    (1) prog -> PROGRAM ID SEMICOLON agregarProg . prog_1
    (3) prog_1 -> . var cuadruploMain metodos mainEnd prog_2
    (4) prog_1 -> . var cuadruploMain metodos
    (5) prog_1 -> . prog_2
    (14) var -> . vars
    (15) var -> . empty
    (6) prog_2 -> . main
    (16) vars -> . VAR var_2
    (143) empty -> .
    (7) main -> . MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END

  ! shift/reduce conflict for MAIN resolved as shift
    VAR             shift and go to state 12
    FUNCION         reduce using rule 143 (empty -> .)
    $end            reduce using rule 143 (empty -> .)
    MAIN            shift and go to state 13

  ! MAIN            [ reduce using rule 143 (empty -> .) ]

    prog_1                         shift and go to state 6
    var                            shift and go to state 7
    prog_2                         shift and go to state 8
    vars                           shift and go to state 9
    empty                          shift and go to state 10
    main                           shift and go to state 11

state 6

    (1) prog -> PROGRAM ID SEMICOLON agregarProg prog_1 .

    $end            reduce using rule 1 (prog -> PROGRAM ID SEMICOLON agregarProg prog_1 .)


state 7

    (3) prog_1 -> var . cuadruploMain metodos mainEnd prog_2
    (4) prog_1 -> var . cuadruploMain metodos
    (8) cuadruploMain -> .

    FUNCION         reduce using rule 8 (cuadruploMain -> .)
    MAIN            reduce using rule 8 (cuadruploMain -> .)
    $end            reduce using rule 8 (cuadruploMain -> .)

    cuadruploMain                  shift and go to state 14

state 8

    (5) prog_1 -> prog_2 .

    $end            reduce using rule 5 (prog_1 -> prog_2 .)


state 9

    (14) var -> vars .

    FUNCION         reduce using rule 14 (var -> vars .)
    MAIN            reduce using rule 14 (var -> vars .)
    $end            reduce using rule 14 (var -> vars .)
    ID              reduce using rule 14 (var -> vars .)
    READ            reduce using rule 14 (var -> vars .)
    PRINT           reduce using rule 14 (var -> vars .)
    FOR             reduce using rule 14 (var -> vars .)
    IF              reduce using rule 14 (var -> vars .)
    WHILE           reduce using rule 14 (var -> vars .)
    RCURLY          reduce using rule 14 (var -> vars .)
    RETURN          reduce using rule 14 (var -> vars .)


state 10

    (15) var -> empty .

    FUNCION         reduce using rule 15 (var -> empty .)
    MAIN            reduce using rule 15 (var -> empty .)
    $end            reduce using rule 15 (var -> empty .)
    ID              reduce using rule 15 (var -> empty .)
    READ            reduce using rule 15 (var -> empty .)
    PRINT           reduce using rule 15 (var -> empty .)
    FOR             reduce using rule 15 (var -> empty .)
    IF              reduce using rule 15 (var -> empty .)
    WHILE           reduce using rule 15 (var -> empty .)
    RCURLY          reduce using rule 15 (var -> empty .)
    RETURN          reduce using rule 15 (var -> empty .)


state 11

    (6) prog_2 -> main .

    $end            reduce using rule 6 (prog_2 -> main .)


state 12

    (16) vars -> VAR . var_2
    (17) var_2 -> . var_2 type var1 SEMICOLON agregarVar
    (18) var_2 -> . empty
    (143) empty -> .

    INT             reduce using rule 143 (empty -> .)
    FLOAT           reduce using rule 143 (empty -> .)
    CHAR            reduce using rule 143 (empty -> .)
    FUNCION         reduce using rule 143 (empty -> .)
    MAIN            reduce using rule 143 (empty -> .)
    $end            reduce using rule 143 (empty -> .)
    ID              reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RCURLY          reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)

    var_2                          shift and go to state 15
    empty                          shift and go to state 16

state 13

    (7) main -> MAIN . guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END
    (45) guardaFuncion -> .

    LPAREN          reduce using rule 45 (guardaFuncion -> .)

    guardaFuncion                  shift and go to state 17

state 14

    (3) prog_1 -> var cuadruploMain . metodos mainEnd prog_2
    (4) prog_1 -> var cuadruploMain . metodos
    (37) metodos -> . funcion metodos
    (38) metodos -> . empty
    (39) funcion -> . FUNCION VOID funcion_1
    (40) funcion -> . FUNCION INT funcion_2
    (41) funcion -> . FUNCION CHAR funcion_2
    (42) funcion -> . FUNCION FLOAT funcion_2
    (143) empty -> .

    FUNCION         shift and go to state 21
    MAIN            reduce using rule 143 (empty -> .)
    $end            reduce using rule 143 (empty -> .)

    metodos                        shift and go to state 18
    funcion                        shift and go to state 19
    empty                          shift and go to state 20

state 15

    (16) vars -> VAR var_2 .
    (17) var_2 -> var_2 . type var1 SEMICOLON agregarVar
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    FUNCION         reduce using rule 16 (vars -> VAR var_2 .)
    MAIN            reduce using rule 16 (vars -> VAR var_2 .)
    $end            reduce using rule 16 (vars -> VAR var_2 .)
    ID              reduce using rule 16 (vars -> VAR var_2 .)
    READ            reduce using rule 16 (vars -> VAR var_2 .)
    PRINT           reduce using rule 16 (vars -> VAR var_2 .)
    FOR             reduce using rule 16 (vars -> VAR var_2 .)
    IF              reduce using rule 16 (vars -> VAR var_2 .)
    WHILE           reduce using rule 16 (vars -> VAR var_2 .)
    RCURLY          reduce using rule 16 (vars -> VAR var_2 .)
    RETURN          reduce using rule 16 (vars -> VAR var_2 .)
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    type                           shift and go to state 22

state 16

    (18) var_2 -> empty .

    INT             reduce using rule 18 (var_2 -> empty .)
    FLOAT           reduce using rule 18 (var_2 -> empty .)
    CHAR            reduce using rule 18 (var_2 -> empty .)
    FUNCION         reduce using rule 18 (var_2 -> empty .)
    MAIN            reduce using rule 18 (var_2 -> empty .)
    $end            reduce using rule 18 (var_2 -> empty .)
    ID              reduce using rule 18 (var_2 -> empty .)
    READ            reduce using rule 18 (var_2 -> empty .)
    PRINT           reduce using rule 18 (var_2 -> empty .)
    FOR             reduce using rule 18 (var_2 -> empty .)
    IF              reduce using rule 18 (var_2 -> empty .)
    WHILE           reduce using rule 18 (var_2 -> empty .)
    RCURLY          reduce using rule 18 (var_2 -> empty .)
    RETURN          reduce using rule 18 (var_2 -> empty .)


state 17

    (7) main -> MAIN guardaFuncion . LPAREN param2 RPAREN LCURLY var estatutos RCURLY END

    LPAREN          shift and go to state 26


state 18

    (3) prog_1 -> var cuadruploMain metodos . mainEnd prog_2
    (4) prog_1 -> var cuadruploMain metodos .
    (9) mainEnd -> .

    $end            reduce using rule 4 (prog_1 -> var cuadruploMain metodos .)
    MAIN            reduce using rule 9 (mainEnd -> .)

    mainEnd                        shift and go to state 27

state 19

    (37) metodos -> funcion . metodos
    (37) metodos -> . funcion metodos
    (38) metodos -> . empty
    (39) funcion -> . FUNCION VOID funcion_1
    (40) funcion -> . FUNCION INT funcion_2
    (41) funcion -> . FUNCION CHAR funcion_2
    (42) funcion -> . FUNCION FLOAT funcion_2
    (143) empty -> .

    FUNCION         shift and go to state 21
    MAIN            reduce using rule 143 (empty -> .)
    $end            reduce using rule 143 (empty -> .)

    funcion                        shift and go to state 19
    metodos                        shift and go to state 28
    empty                          shift and go to state 20

state 20

    (38) metodos -> empty .

    MAIN            reduce using rule 38 (metodos -> empty .)
    $end            reduce using rule 38 (metodos -> empty .)


state 21

    (39) funcion -> FUNCION . VOID funcion_1
    (40) funcion -> FUNCION . INT funcion_2
    (41) funcion -> FUNCION . CHAR funcion_2
    (42) funcion -> FUNCION . FLOAT funcion_2

    VOID            shift and go to state 29
    INT             shift and go to state 30
    CHAR            shift and go to state 31
    FLOAT           shift and go to state 32


state 22

    (17) var_2 -> var_2 type . var1 SEMICOLON agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (143) empty -> .

    ID              shift and go to state 34
    SEMICOLON       reduce using rule 143 (empty -> .)

    var1                           shift and go to state 33
    empty                          shift and go to state 35

state 23

    (10) type -> INT . guardaTipoDeVariable
    (13) guardaTipoDeVariable -> .

    ID              reduce using rule 13 (guardaTipoDeVariable -> .)
    SEMICOLON       reduce using rule 13 (guardaTipoDeVariable -> .)
    RPAREN          reduce using rule 13 (guardaTipoDeVariable -> .)
    INT             reduce using rule 13 (guardaTipoDeVariable -> .)
    FLOAT           reduce using rule 13 (guardaTipoDeVariable -> .)
    CHAR            reduce using rule 13 (guardaTipoDeVariable -> .)

    guardaTipoDeVariable           shift and go to state 36

state 24

    (11) type -> FLOAT . guardaTipoDeVariable
    (13) guardaTipoDeVariable -> .

    ID              reduce using rule 13 (guardaTipoDeVariable -> .)
    SEMICOLON       reduce using rule 13 (guardaTipoDeVariable -> .)
    RPAREN          reduce using rule 13 (guardaTipoDeVariable -> .)
    INT             reduce using rule 13 (guardaTipoDeVariable -> .)
    FLOAT           reduce using rule 13 (guardaTipoDeVariable -> .)
    CHAR            reduce using rule 13 (guardaTipoDeVariable -> .)

    guardaTipoDeVariable           shift and go to state 37

state 25

    (12) type -> CHAR . guardaTipoDeVariable
    (13) guardaTipoDeVariable -> .

    ID              reduce using rule 13 (guardaTipoDeVariable -> .)
    SEMICOLON       reduce using rule 13 (guardaTipoDeVariable -> .)
    RPAREN          reduce using rule 13 (guardaTipoDeVariable -> .)
    INT             reduce using rule 13 (guardaTipoDeVariable -> .)
    FLOAT           reduce using rule 13 (guardaTipoDeVariable -> .)
    CHAR            reduce using rule 13 (guardaTipoDeVariable -> .)

    guardaTipoDeVariable           shift and go to state 38

state 26

    (7) main -> MAIN guardaFuncion LPAREN . param2 RPAREN LCURLY var estatutos RCURLY END
    (74) param2 -> . param2 type param
    (75) param2 -> . empty
    (143) empty -> .

    RPAREN          reduce using rule 143 (empty -> .)
    INT             reduce using rule 143 (empty -> .)
    FLOAT           reduce using rule 143 (empty -> .)
    CHAR            reduce using rule 143 (empty -> .)

    param2                         shift and go to state 39
    empty                          shift and go to state 40

state 27

    (3) prog_1 -> var cuadruploMain metodos mainEnd . prog_2
    (6) prog_2 -> . main
    (7) main -> . MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END

    MAIN            shift and go to state 13

    prog_2                         shift and go to state 41
    main                           shift and go to state 11

state 28

    (37) metodos -> funcion metodos .

    MAIN            reduce using rule 37 (metodos -> funcion metodos .)
    $end            reduce using rule 37 (metodos -> funcion metodos .)


state 29

    (39) funcion -> FUNCION VOID . funcion_1
    (43) funcion_1 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion

    ID              shift and go to state 43

    funcion_1                      shift and go to state 42

state 30

    (40) funcion -> FUNCION INT . funcion_2
    (44) funcion_2 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    ID              shift and go to state 45

    funcion_2                      shift and go to state 44

state 31

    (41) funcion -> FUNCION CHAR . funcion_2
    (44) funcion_2 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    ID              shift and go to state 45

    funcion_2                      shift and go to state 46

state 32

    (42) funcion -> FUNCION FLOAT . funcion_2
    (44) funcion_2 -> . ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    ID              shift and go to state 45

    funcion_2                      shift and go to state 47

state 33

    (17) var_2 -> var_2 type var1 . SEMICOLON agregarVar

    SEMICOLON       shift and go to state 48


state 34

    (19) var1 -> ID .
    (20) var1 -> ID . COMMA var1 agregarVar
    (21) var1 -> ID . arr
    (22) var1 -> ID . arr COMMA var1 agregarVar
    (23) var1 -> ID . mat COMMA var1 agregarVar
    (24) var1 -> ID . mat
    (25) var1 -> ID . mat especial
    (31) arr -> . LBRACKET CTEI RBRACKET
    (32) arr -> . LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (35) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (36) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 19 (var1 -> ID .)
    MUL             reduce using rule 19 (var1 -> ID .)
    DIV             reduce using rule 19 (var1 -> ID .)
    PLUS            reduce using rule 19 (var1 -> ID .)
    MINUS           reduce using rule 19 (var1 -> ID .)
    GT              reduce using rule 19 (var1 -> ID .)
    LT              reduce using rule 19 (var1 -> ID .)
    GTE             reduce using rule 19 (var1 -> ID .)
    LTE             reduce using rule 19 (var1 -> ID .)
    NE              reduce using rule 19 (var1 -> ID .)
    COMPARE         reduce using rule 19 (var1 -> ID .)
    AND             reduce using rule 19 (var1 -> ID .)
    OR              reduce using rule 19 (var1 -> ID .)
    RBRACKET        reduce using rule 19 (var1 -> ID .)
    RPAREN          reduce using rule 19 (var1 -> ID .)
    TO              reduce using rule 19 (var1 -> ID .)
    CTEI            reduce using rule 19 (var1 -> ID .)
    CTEF            reduce using rule 19 (var1 -> ID .)
    CTEC            reduce using rule 19 (var1 -> ID .)
    CTESTRING       reduce using rule 19 (var1 -> ID .)
    LPAREN          reduce using rule 19 (var1 -> ID .)
    ID              reduce using rule 19 (var1 -> ID .)
    COMMA           shift and go to state 49
    LBRACKET        shift and go to state 52

  ! COMMA           [ reduce using rule 19 (var1 -> ID .) ]

    arr                            shift and go to state 50
    mat                            shift and go to state 51

state 35

    (26) var1 -> empty .

    SEMICOLON       reduce using rule 26 (var1 -> empty .)
    MUL             reduce using rule 26 (var1 -> empty .)
    DIV             reduce using rule 26 (var1 -> empty .)
    PLUS            reduce using rule 26 (var1 -> empty .)
    MINUS           reduce using rule 26 (var1 -> empty .)
    GT              reduce using rule 26 (var1 -> empty .)
    LT              reduce using rule 26 (var1 -> empty .)
    GTE             reduce using rule 26 (var1 -> empty .)
    LTE             reduce using rule 26 (var1 -> empty .)
    NE              reduce using rule 26 (var1 -> empty .)
    COMPARE         reduce using rule 26 (var1 -> empty .)
    AND             reduce using rule 26 (var1 -> empty .)
    OR              reduce using rule 26 (var1 -> empty .)
    RBRACKET        reduce using rule 26 (var1 -> empty .)
    RPAREN          reduce using rule 26 (var1 -> empty .)
    COMMA           reduce using rule 26 (var1 -> empty .)
    TO              reduce using rule 26 (var1 -> empty .)
    CTEI            reduce using rule 26 (var1 -> empty .)
    CTEF            reduce using rule 26 (var1 -> empty .)
    CTEC            reduce using rule 26 (var1 -> empty .)
    CTESTRING       reduce using rule 26 (var1 -> empty .)
    LPAREN          reduce using rule 26 (var1 -> empty .)
    ID              reduce using rule 26 (var1 -> empty .)


state 36

    (10) type -> INT guardaTipoDeVariable .

    ID              reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    SEMICOLON       reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    RPAREN          reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    INT             reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    FLOAT           reduce using rule 10 (type -> INT guardaTipoDeVariable .)
    CHAR            reduce using rule 10 (type -> INT guardaTipoDeVariable .)


state 37

    (11) type -> FLOAT guardaTipoDeVariable .

    ID              reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    SEMICOLON       reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    RPAREN          reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    INT             reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    FLOAT           reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)
    CHAR            reduce using rule 11 (type -> FLOAT guardaTipoDeVariable .)


state 38

    (12) type -> CHAR guardaTipoDeVariable .

    ID              reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    SEMICOLON       reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    RPAREN          reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    INT             reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    FLOAT           reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)
    CHAR            reduce using rule 12 (type -> CHAR guardaTipoDeVariable .)


state 39

    (7) main -> MAIN guardaFuncion LPAREN param2 . RPAREN LCURLY var estatutos RCURLY END
    (74) param2 -> param2 . type param
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    RPAREN          shift and go to state 53
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    type                           shift and go to state 54

state 40

    (75) param2 -> empty .

    RPAREN          reduce using rule 75 (param2 -> empty .)
    INT             reduce using rule 75 (param2 -> empty .)
    FLOAT           reduce using rule 75 (param2 -> empty .)
    CHAR            reduce using rule 75 (param2 -> empty .)


state 41

    (3) prog_1 -> var cuadruploMain metodos mainEnd prog_2 .

    $end            reduce using rule 3 (prog_1 -> var cuadruploMain metodos mainEnd prog_2 .)


state 42

    (39) funcion -> FUNCION VOID funcion_1 .

    FUNCION         reduce using rule 39 (funcion -> FUNCION VOID funcion_1 .)
    MAIN            reduce using rule 39 (funcion -> FUNCION VOID funcion_1 .)
    $end            reduce using rule 39 (funcion -> FUNCION VOID funcion_1 .)


state 43

    (43) funcion_1 -> ID . guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
    (45) guardaFuncion -> .

    LPAREN          reduce using rule 45 (guardaFuncion -> .)

    guardaFuncion                  shift and go to state 55

state 44

    (40) funcion -> FUNCION INT funcion_2 .

    FUNCION         reduce using rule 40 (funcion -> FUNCION INT funcion_2 .)
    MAIN            reduce using rule 40 (funcion -> FUNCION INT funcion_2 .)
    $end            reduce using rule 40 (funcion -> FUNCION INT funcion_2 .)


state 45

    (44) funcion_2 -> ID . guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (45) guardaFuncion -> .

    LPAREN          reduce using rule 45 (guardaFuncion -> .)

    guardaFuncion                  shift and go to state 56

state 46

    (41) funcion -> FUNCION CHAR funcion_2 .

    FUNCION         reduce using rule 41 (funcion -> FUNCION CHAR funcion_2 .)
    MAIN            reduce using rule 41 (funcion -> FUNCION CHAR funcion_2 .)
    $end            reduce using rule 41 (funcion -> FUNCION CHAR funcion_2 .)


state 47

    (42) funcion -> FUNCION FLOAT funcion_2 .

    FUNCION         reduce using rule 42 (funcion -> FUNCION FLOAT funcion_2 .)
    MAIN            reduce using rule 42 (funcion -> FUNCION FLOAT funcion_2 .)
    $end            reduce using rule 42 (funcion -> FUNCION FLOAT funcion_2 .)


state 48

    (17) var_2 -> var_2 type var1 SEMICOLON . agregarVar
    (27) agregarVar -> .

    INT             reduce using rule 27 (agregarVar -> .)
    FLOAT           reduce using rule 27 (agregarVar -> .)
    CHAR            reduce using rule 27 (agregarVar -> .)
    FUNCION         reduce using rule 27 (agregarVar -> .)
    MAIN            reduce using rule 27 (agregarVar -> .)
    $end            reduce using rule 27 (agregarVar -> .)
    ID              reduce using rule 27 (agregarVar -> .)
    READ            reduce using rule 27 (agregarVar -> .)
    PRINT           reduce using rule 27 (agregarVar -> .)
    FOR             reduce using rule 27 (agregarVar -> .)
    IF              reduce using rule 27 (agregarVar -> .)
    WHILE           reduce using rule 27 (agregarVar -> .)
    RCURLY          reduce using rule 27 (agregarVar -> .)
    RETURN          reduce using rule 27 (agregarVar -> .)

    agregarVar                     shift and go to state 57

state 49

    (20) var1 -> ID COMMA . var1 agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (143) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 34
    SEMICOLON       reduce using rule 143 (empty -> .)
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)
    CTEI            reduce using rule 143 (empty -> .)
    CTEF            reduce using rule 143 (empty -> .)
    CTEC            reduce using rule 143 (empty -> .)
    CTESTRING       reduce using rule 143 (empty -> .)
    LPAREN          reduce using rule 143 (empty -> .)

  ! ID              [ reduce using rule 143 (empty -> .) ]

    var1                           shift and go to state 58
    empty                          shift and go to state 35

state 50

    (21) var1 -> ID arr .
    (22) var1 -> ID arr . COMMA var1 agregarVar

  ! shift/reduce conflict for COMMA resolved as shift
    SEMICOLON       reduce using rule 21 (var1 -> ID arr .)
    MUL             reduce using rule 21 (var1 -> ID arr .)
    DIV             reduce using rule 21 (var1 -> ID arr .)
    PLUS            reduce using rule 21 (var1 -> ID arr .)
    MINUS           reduce using rule 21 (var1 -> ID arr .)
    GT              reduce using rule 21 (var1 -> ID arr .)
    LT              reduce using rule 21 (var1 -> ID arr .)
    GTE             reduce using rule 21 (var1 -> ID arr .)
    LTE             reduce using rule 21 (var1 -> ID arr .)
    NE              reduce using rule 21 (var1 -> ID arr .)
    COMPARE         reduce using rule 21 (var1 -> ID arr .)
    AND             reduce using rule 21 (var1 -> ID arr .)
    OR              reduce using rule 21 (var1 -> ID arr .)
    RBRACKET        reduce using rule 21 (var1 -> ID arr .)
    RPAREN          reduce using rule 21 (var1 -> ID arr .)
    TO              reduce using rule 21 (var1 -> ID arr .)
    CTEI            reduce using rule 21 (var1 -> ID arr .)
    CTEF            reduce using rule 21 (var1 -> ID arr .)
    CTEC            reduce using rule 21 (var1 -> ID arr .)
    CTESTRING       reduce using rule 21 (var1 -> ID arr .)
    LPAREN          reduce using rule 21 (var1 -> ID arr .)
    ID              reduce using rule 21 (var1 -> ID arr .)
    COMMA           shift and go to state 59

  ! COMMA           [ reduce using rule 21 (var1 -> ID arr .) ]


state 51

    (23) var1 -> ID mat . COMMA var1 agregarVar
    (24) var1 -> ID mat .
    (25) var1 -> ID mat . especial
    (28) especial -> . TRANSPUESTA
    (29) especial -> . INVERSA
    (30) especial -> . DETERMINANTE

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 60
    SEMICOLON       reduce using rule 24 (var1 -> ID mat .)
    MUL             reduce using rule 24 (var1 -> ID mat .)
    DIV             reduce using rule 24 (var1 -> ID mat .)
    PLUS            reduce using rule 24 (var1 -> ID mat .)
    MINUS           reduce using rule 24 (var1 -> ID mat .)
    GT              reduce using rule 24 (var1 -> ID mat .)
    LT              reduce using rule 24 (var1 -> ID mat .)
    GTE             reduce using rule 24 (var1 -> ID mat .)
    LTE             reduce using rule 24 (var1 -> ID mat .)
    NE              reduce using rule 24 (var1 -> ID mat .)
    COMPARE         reduce using rule 24 (var1 -> ID mat .)
    AND             reduce using rule 24 (var1 -> ID mat .)
    OR              reduce using rule 24 (var1 -> ID mat .)
    RBRACKET        reduce using rule 24 (var1 -> ID mat .)
    RPAREN          reduce using rule 24 (var1 -> ID mat .)
    TO              reduce using rule 24 (var1 -> ID mat .)
    CTEI            reduce using rule 24 (var1 -> ID mat .)
    CTEF            reduce using rule 24 (var1 -> ID mat .)
    CTEC            reduce using rule 24 (var1 -> ID mat .)
    CTESTRING       reduce using rule 24 (var1 -> ID mat .)
    LPAREN          reduce using rule 24 (var1 -> ID mat .)
    ID              reduce using rule 24 (var1 -> ID mat .)
    TRANSPUESTA     shift and go to state 62
    INVERSA         shift and go to state 63
    DETERMINANTE    shift and go to state 64

  ! COMMA           [ reduce using rule 24 (var1 -> ID mat .) ]

    especial                       shift and go to state 61

state 52

    (31) arr -> LBRACKET . CTEI RBRACKET
    (32) arr -> LBRACKET . exp RBRACKET
    (33) mat -> LBRACKET . CTEI RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> LBRACKET . exp RBRACKET LBRACKET exp RBRACKET
    (35) mat -> LBRACKET . exp RBRACKET LBRACKET CTEI RBRACKET
    (36) mat -> LBRACKET . CTEI RBRACKET LBRACKET exp RBRACKET
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 65
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)

    exp                            shift and go to state 66
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 53

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN . LCURLY var estatutos RCURLY END

    LCURLY          shift and go to state 80


state 54

    (74) param2 -> param2 type . param
    (65) param -> . ID agregarParametro
    (66) param -> . ID COMMA param agregarParametro
    (67) param -> . ID arr
    (68) param -> . ID arr COMMA param
    (69) param -> . ID mat COMMA param
    (70) param -> . ID mat
    (71) param -> . ID mat especial
    (72) param -> . empty
    (143) empty -> .

    ID              shift and go to state 82
    RPAREN          reduce using rule 143 (empty -> .)
    INT             reduce using rule 143 (empty -> .)
    FLOAT           reduce using rule 143 (empty -> .)
    CHAR            reduce using rule 143 (empty -> .)

    param                          shift and go to state 81
    empty                          shift and go to state 83

state 55

    (43) funcion_1 -> ID guardaFuncion . LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion

    LPAREN          shift and go to state 84


state 56

    (44) funcion_2 -> ID guardaFuncion . LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    LPAREN          shift and go to state 85


state 57

    (17) var_2 -> var_2 type var1 SEMICOLON agregarVar .

    INT             reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    FLOAT           reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    CHAR            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    FUNCION         reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    MAIN            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    $end            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    ID              reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    READ            reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    PRINT           reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    FOR             reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    IF              reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    WHILE           reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    RCURLY          reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)
    RETURN          reduce using rule 17 (var_2 -> var_2 type var1 SEMICOLON agregarVar .)


state 58

    (20) var1 -> ID COMMA var1 . agregarVar
    (27) agregarVar -> .

    SEMICOLON       reduce using rule 27 (agregarVar -> .)
    MUL             reduce using rule 27 (agregarVar -> .)
    DIV             reduce using rule 27 (agregarVar -> .)
    PLUS            reduce using rule 27 (agregarVar -> .)
    MINUS           reduce using rule 27 (agregarVar -> .)
    GT              reduce using rule 27 (agregarVar -> .)
    LT              reduce using rule 27 (agregarVar -> .)
    GTE             reduce using rule 27 (agregarVar -> .)
    LTE             reduce using rule 27 (agregarVar -> .)
    NE              reduce using rule 27 (agregarVar -> .)
    COMPARE         reduce using rule 27 (agregarVar -> .)
    AND             reduce using rule 27 (agregarVar -> .)
    OR              reduce using rule 27 (agregarVar -> .)
    RBRACKET        reduce using rule 27 (agregarVar -> .)
    RPAREN          reduce using rule 27 (agregarVar -> .)
    COMMA           reduce using rule 27 (agregarVar -> .)
    TO              reduce using rule 27 (agregarVar -> .)
    CTEI            reduce using rule 27 (agregarVar -> .)
    CTEF            reduce using rule 27 (agregarVar -> .)
    CTEC            reduce using rule 27 (agregarVar -> .)
    CTESTRING       reduce using rule 27 (agregarVar -> .)
    LPAREN          reduce using rule 27 (agregarVar -> .)
    ID              reduce using rule 27 (agregarVar -> .)

    agregarVar                     shift and go to state 86

state 59

    (22) var1 -> ID arr COMMA . var1 agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (143) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 34
    SEMICOLON       reduce using rule 143 (empty -> .)
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)
    CTEI            reduce using rule 143 (empty -> .)
    CTEF            reduce using rule 143 (empty -> .)
    CTEC            reduce using rule 143 (empty -> .)
    CTESTRING       reduce using rule 143 (empty -> .)
    LPAREN          reduce using rule 143 (empty -> .)

  ! ID              [ reduce using rule 143 (empty -> .) ]

    var1                           shift and go to state 87
    empty                          shift and go to state 35

state 60

    (23) var1 -> ID mat COMMA . var1 agregarVar
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (143) empty -> .

  ! shift/reduce conflict for ID resolved as shift
    ID              shift and go to state 34
    SEMICOLON       reduce using rule 143 (empty -> .)
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)
    CTEI            reduce using rule 143 (empty -> .)
    CTEF            reduce using rule 143 (empty -> .)
    CTEC            reduce using rule 143 (empty -> .)
    CTESTRING       reduce using rule 143 (empty -> .)
    LPAREN          reduce using rule 143 (empty -> .)

  ! ID              [ reduce using rule 143 (empty -> .) ]

    var1                           shift and go to state 88
    empty                          shift and go to state 35

state 61

    (25) var1 -> ID mat especial .

    SEMICOLON       reduce using rule 25 (var1 -> ID mat especial .)
    MUL             reduce using rule 25 (var1 -> ID mat especial .)
    DIV             reduce using rule 25 (var1 -> ID mat especial .)
    PLUS            reduce using rule 25 (var1 -> ID mat especial .)
    MINUS           reduce using rule 25 (var1 -> ID mat especial .)
    GT              reduce using rule 25 (var1 -> ID mat especial .)
    LT              reduce using rule 25 (var1 -> ID mat especial .)
    GTE             reduce using rule 25 (var1 -> ID mat especial .)
    LTE             reduce using rule 25 (var1 -> ID mat especial .)
    NE              reduce using rule 25 (var1 -> ID mat especial .)
    COMPARE         reduce using rule 25 (var1 -> ID mat especial .)
    AND             reduce using rule 25 (var1 -> ID mat especial .)
    OR              reduce using rule 25 (var1 -> ID mat especial .)
    RBRACKET        reduce using rule 25 (var1 -> ID mat especial .)
    RPAREN          reduce using rule 25 (var1 -> ID mat especial .)
    COMMA           reduce using rule 25 (var1 -> ID mat especial .)
    TO              reduce using rule 25 (var1 -> ID mat especial .)
    CTEI            reduce using rule 25 (var1 -> ID mat especial .)
    CTEF            reduce using rule 25 (var1 -> ID mat especial .)
    CTEC            reduce using rule 25 (var1 -> ID mat especial .)
    CTESTRING       reduce using rule 25 (var1 -> ID mat especial .)
    LPAREN          reduce using rule 25 (var1 -> ID mat especial .)
    ID              reduce using rule 25 (var1 -> ID mat especial .)


state 62

    (28) especial -> TRANSPUESTA .

    SEMICOLON       reduce using rule 28 (especial -> TRANSPUESTA .)
    MUL             reduce using rule 28 (especial -> TRANSPUESTA .)
    DIV             reduce using rule 28 (especial -> TRANSPUESTA .)
    PLUS            reduce using rule 28 (especial -> TRANSPUESTA .)
    MINUS           reduce using rule 28 (especial -> TRANSPUESTA .)
    GT              reduce using rule 28 (especial -> TRANSPUESTA .)
    LT              reduce using rule 28 (especial -> TRANSPUESTA .)
    GTE             reduce using rule 28 (especial -> TRANSPUESTA .)
    LTE             reduce using rule 28 (especial -> TRANSPUESTA .)
    NE              reduce using rule 28 (especial -> TRANSPUESTA .)
    COMPARE         reduce using rule 28 (especial -> TRANSPUESTA .)
    AND             reduce using rule 28 (especial -> TRANSPUESTA .)
    OR              reduce using rule 28 (especial -> TRANSPUESTA .)
    RBRACKET        reduce using rule 28 (especial -> TRANSPUESTA .)
    RPAREN          reduce using rule 28 (especial -> TRANSPUESTA .)
    COMMA           reduce using rule 28 (especial -> TRANSPUESTA .)
    TO              reduce using rule 28 (especial -> TRANSPUESTA .)
    CTEI            reduce using rule 28 (especial -> TRANSPUESTA .)
    CTEF            reduce using rule 28 (especial -> TRANSPUESTA .)
    CTEC            reduce using rule 28 (especial -> TRANSPUESTA .)
    CTESTRING       reduce using rule 28 (especial -> TRANSPUESTA .)
    LPAREN          reduce using rule 28 (especial -> TRANSPUESTA .)
    ID              reduce using rule 28 (especial -> TRANSPUESTA .)
    INT             reduce using rule 28 (especial -> TRANSPUESTA .)
    FLOAT           reduce using rule 28 (especial -> TRANSPUESTA .)
    CHAR            reduce using rule 28 (especial -> TRANSPUESTA .)


state 63

    (29) especial -> INVERSA .

    SEMICOLON       reduce using rule 29 (especial -> INVERSA .)
    MUL             reduce using rule 29 (especial -> INVERSA .)
    DIV             reduce using rule 29 (especial -> INVERSA .)
    PLUS            reduce using rule 29 (especial -> INVERSA .)
    MINUS           reduce using rule 29 (especial -> INVERSA .)
    GT              reduce using rule 29 (especial -> INVERSA .)
    LT              reduce using rule 29 (especial -> INVERSA .)
    GTE             reduce using rule 29 (especial -> INVERSA .)
    LTE             reduce using rule 29 (especial -> INVERSA .)
    NE              reduce using rule 29 (especial -> INVERSA .)
    COMPARE         reduce using rule 29 (especial -> INVERSA .)
    AND             reduce using rule 29 (especial -> INVERSA .)
    OR              reduce using rule 29 (especial -> INVERSA .)
    RBRACKET        reduce using rule 29 (especial -> INVERSA .)
    RPAREN          reduce using rule 29 (especial -> INVERSA .)
    COMMA           reduce using rule 29 (especial -> INVERSA .)
    TO              reduce using rule 29 (especial -> INVERSA .)
    CTEI            reduce using rule 29 (especial -> INVERSA .)
    CTEF            reduce using rule 29 (especial -> INVERSA .)
    CTEC            reduce using rule 29 (especial -> INVERSA .)
    CTESTRING       reduce using rule 29 (especial -> INVERSA .)
    LPAREN          reduce using rule 29 (especial -> INVERSA .)
    ID              reduce using rule 29 (especial -> INVERSA .)
    INT             reduce using rule 29 (especial -> INVERSA .)
    FLOAT           reduce using rule 29 (especial -> INVERSA .)
    CHAR            reduce using rule 29 (especial -> INVERSA .)


state 64

    (30) especial -> DETERMINANTE .

    SEMICOLON       reduce using rule 30 (especial -> DETERMINANTE .)
    MUL             reduce using rule 30 (especial -> DETERMINANTE .)
    DIV             reduce using rule 30 (especial -> DETERMINANTE .)
    PLUS            reduce using rule 30 (especial -> DETERMINANTE .)
    MINUS           reduce using rule 30 (especial -> DETERMINANTE .)
    GT              reduce using rule 30 (especial -> DETERMINANTE .)
    LT              reduce using rule 30 (especial -> DETERMINANTE .)
    GTE             reduce using rule 30 (especial -> DETERMINANTE .)
    LTE             reduce using rule 30 (especial -> DETERMINANTE .)
    NE              reduce using rule 30 (especial -> DETERMINANTE .)
    COMPARE         reduce using rule 30 (especial -> DETERMINANTE .)
    AND             reduce using rule 30 (especial -> DETERMINANTE .)
    OR              reduce using rule 30 (especial -> DETERMINANTE .)
    RBRACKET        reduce using rule 30 (especial -> DETERMINANTE .)
    RPAREN          reduce using rule 30 (especial -> DETERMINANTE .)
    COMMA           reduce using rule 30 (especial -> DETERMINANTE .)
    TO              reduce using rule 30 (especial -> DETERMINANTE .)
    CTEI            reduce using rule 30 (especial -> DETERMINANTE .)
    CTEF            reduce using rule 30 (especial -> DETERMINANTE .)
    CTEC            reduce using rule 30 (especial -> DETERMINANTE .)
    CTESTRING       reduce using rule 30 (especial -> DETERMINANTE .)
    LPAREN          reduce using rule 30 (especial -> DETERMINANTE .)
    ID              reduce using rule 30 (especial -> DETERMINANTE .)
    INT             reduce using rule 30 (especial -> DETERMINANTE .)
    FLOAT           reduce using rule 30 (especial -> DETERMINANTE .)
    CHAR            reduce using rule 30 (especial -> DETERMINANTE .)


state 65

    (31) arr -> LBRACKET CTEI . RBRACKET
    (33) mat -> LBRACKET CTEI . RBRACKET LBRACKET CTEI RBRACKET
    (36) mat -> LBRACKET CTEI . RBRACKET LBRACKET exp RBRACKET
    (136) pexp -> CTEI . guardaCTE
    (96) guardaCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 89
    MUL             reduce using rule 96 (guardaCTE -> .)
    DIV             reduce using rule 96 (guardaCTE -> .)
    PLUS            reduce using rule 96 (guardaCTE -> .)
    MINUS           reduce using rule 96 (guardaCTE -> .)
    GT              reduce using rule 96 (guardaCTE -> .)
    LT              reduce using rule 96 (guardaCTE -> .)
    GTE             reduce using rule 96 (guardaCTE -> .)
    LTE             reduce using rule 96 (guardaCTE -> .)
    NE              reduce using rule 96 (guardaCTE -> .)
    COMPARE         reduce using rule 96 (guardaCTE -> .)
    AND             reduce using rule 96 (guardaCTE -> .)
    OR              reduce using rule 96 (guardaCTE -> .)

  ! RBRACKET        [ reduce using rule 96 (guardaCTE -> .) ]

    guardaCTE                      shift and go to state 90

state 66

    (32) arr -> LBRACKET exp . RBRACKET
    (34) mat -> LBRACKET exp . RBRACKET LBRACKET exp RBRACKET
    (35) mat -> LBRACKET exp . RBRACKET LBRACKET CTEI RBRACKET

    RBRACKET        shift and go to state 91


state 67

    (112) exp -> nexp .
    (113) exp -> nexp . OR addOperadorName nexp cuadruploOr

    RBRACKET        reduce using rule 112 (exp -> nexp .)
    RPAREN          reduce using rule 112 (exp -> nexp .)
    COMMA           reduce using rule 112 (exp -> nexp .)
    SEMICOLON       reduce using rule 112 (exp -> nexp .)
    TO              reduce using rule 112 (exp -> nexp .)
    OR              shift and go to state 92


state 68

    (115) nexp -> compexp .
    (116) nexp -> compexp . AND addOperadorName compexp cuadruploAnd

    OR              reduce using rule 115 (nexp -> compexp .)
    RBRACKET        reduce using rule 115 (nexp -> compexp .)
    RPAREN          reduce using rule 115 (nexp -> compexp .)
    COMMA           reduce using rule 115 (nexp -> compexp .)
    SEMICOLON       reduce using rule 115 (nexp -> compexp .)
    TO              reduce using rule 115 (nexp -> compexp .)
    AND             shift and go to state 93


state 69

    (118) compexp -> sumexp .
    (120) compexp1 -> sumexp . GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> sumexp . LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> sumexp . GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> sumexp . LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> sumexp . NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> sumexp . COMPARE addOperadorName sumexp cuadruploComparacion

    AND             reduce using rule 118 (compexp -> sumexp .)
    OR              reduce using rule 118 (compexp -> sumexp .)
    RBRACKET        reduce using rule 118 (compexp -> sumexp .)
    RPAREN          reduce using rule 118 (compexp -> sumexp .)
    COMMA           reduce using rule 118 (compexp -> sumexp .)
    SEMICOLON       reduce using rule 118 (compexp -> sumexp .)
    TO              reduce using rule 118 (compexp -> sumexp .)
    GT              shift and go to state 94
    LT              shift and go to state 95
    GTE             shift and go to state 96
    LTE             shift and go to state 97
    NE              shift and go to state 98
    COMPARE         shift and go to state 99


state 70

    (119) compexp -> compexp1 . sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

    sumexp                         shift and go to state 100
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 71

    (127) sumexp -> mulexp .
    (128) sumexp -> mulexp . PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> mulexp . MINUS addOperadorName mulexp cuadruploSuma

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    GT              reduce using rule 127 (sumexp -> mulexp .)
    LT              reduce using rule 127 (sumexp -> mulexp .)
    GTE             reduce using rule 127 (sumexp -> mulexp .)
    LTE             reduce using rule 127 (sumexp -> mulexp .)
    NE              reduce using rule 127 (sumexp -> mulexp .)
    COMPARE         reduce using rule 127 (sumexp -> mulexp .)
    AND             reduce using rule 127 (sumexp -> mulexp .)
    OR              reduce using rule 127 (sumexp -> mulexp .)
    RBRACKET        reduce using rule 127 (sumexp -> mulexp .)
    RPAREN          reduce using rule 127 (sumexp -> mulexp .)
    COMMA           reduce using rule 127 (sumexp -> mulexp .)
    SEMICOLON       reduce using rule 127 (sumexp -> mulexp .)
    TO              reduce using rule 127 (sumexp -> mulexp .)
    CTEI            reduce using rule 127 (sumexp -> mulexp .)
    CTEF            reduce using rule 127 (sumexp -> mulexp .)
    CTEC            reduce using rule 127 (sumexp -> mulexp .)
    CTESTRING       reduce using rule 127 (sumexp -> mulexp .)
    LPAREN          reduce using rule 127 (sumexp -> mulexp .)
    ID              reduce using rule 127 (sumexp -> mulexp .)
    MUL             reduce using rule 127 (sumexp -> mulexp .)
    DIV             reduce using rule 127 (sumexp -> mulexp .)
    PLUS            shift and go to state 102
    MINUS           shift and go to state 103

  ! PLUS            [ reduce using rule 127 (sumexp -> mulexp .) ]
  ! MINUS           [ reduce using rule 127 (sumexp -> mulexp .) ]


state 72

    (131) mulexp -> pexp .
    (132) mulexp -> pexp . MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> pexp . DIV addOperadorName pexp cuadruploMultiplicacion

  ! shift/reduce conflict for MUL resolved as shift
  ! shift/reduce conflict for DIV resolved as shift
    PLUS            reduce using rule 131 (mulexp -> pexp .)
    MINUS           reduce using rule 131 (mulexp -> pexp .)
    GT              reduce using rule 131 (mulexp -> pexp .)
    LT              reduce using rule 131 (mulexp -> pexp .)
    GTE             reduce using rule 131 (mulexp -> pexp .)
    LTE             reduce using rule 131 (mulexp -> pexp .)
    NE              reduce using rule 131 (mulexp -> pexp .)
    COMPARE         reduce using rule 131 (mulexp -> pexp .)
    AND             reduce using rule 131 (mulexp -> pexp .)
    OR              reduce using rule 131 (mulexp -> pexp .)
    RBRACKET        reduce using rule 131 (mulexp -> pexp .)
    RPAREN          reduce using rule 131 (mulexp -> pexp .)
    COMMA           reduce using rule 131 (mulexp -> pexp .)
    SEMICOLON       reduce using rule 131 (mulexp -> pexp .)
    TO              reduce using rule 131 (mulexp -> pexp .)
    CTEI            reduce using rule 131 (mulexp -> pexp .)
    CTEF            reduce using rule 131 (mulexp -> pexp .)
    CTEC            reduce using rule 131 (mulexp -> pexp .)
    CTESTRING       reduce using rule 131 (mulexp -> pexp .)
    LPAREN          reduce using rule 131 (mulexp -> pexp .)
    ID              reduce using rule 131 (mulexp -> pexp .)
    MUL             shift and go to state 104
    DIV             shift and go to state 105

  ! MUL             [ reduce using rule 131 (mulexp -> pexp .) ]
  ! DIV             [ reduce using rule 131 (mulexp -> pexp .) ]


state 73

    (135) pexp -> var1 . guardaID
    (142) guardaID -> .

    MUL             reduce using rule 142 (guardaID -> .)
    DIV             reduce using rule 142 (guardaID -> .)
    PLUS            reduce using rule 142 (guardaID -> .)
    MINUS           reduce using rule 142 (guardaID -> .)
    GT              reduce using rule 142 (guardaID -> .)
    LT              reduce using rule 142 (guardaID -> .)
    GTE             reduce using rule 142 (guardaID -> .)
    LTE             reduce using rule 142 (guardaID -> .)
    NE              reduce using rule 142 (guardaID -> .)
    COMPARE         reduce using rule 142 (guardaID -> .)
    AND             reduce using rule 142 (guardaID -> .)
    OR              reduce using rule 142 (guardaID -> .)
    RBRACKET        reduce using rule 142 (guardaID -> .)
    RPAREN          reduce using rule 142 (guardaID -> .)
    COMMA           reduce using rule 142 (guardaID -> .)
    SEMICOLON       reduce using rule 142 (guardaID -> .)
    TO              reduce using rule 142 (guardaID -> .)
    CTEI            reduce using rule 142 (guardaID -> .)
    CTEF            reduce using rule 142 (guardaID -> .)
    CTEC            reduce using rule 142 (guardaID -> .)
    CTESTRING       reduce using rule 142 (guardaID -> .)
    LPAREN          reduce using rule 142 (guardaID -> .)
    ID              reduce using rule 142 (guardaID -> .)

    guardaID                       shift and go to state 106

state 74

    (137) pexp -> CTEF . guardaCTE
    (96) guardaCTE -> .

    MUL             reduce using rule 96 (guardaCTE -> .)
    DIV             reduce using rule 96 (guardaCTE -> .)
    PLUS            reduce using rule 96 (guardaCTE -> .)
    MINUS           reduce using rule 96 (guardaCTE -> .)
    GT              reduce using rule 96 (guardaCTE -> .)
    LT              reduce using rule 96 (guardaCTE -> .)
    GTE             reduce using rule 96 (guardaCTE -> .)
    LTE             reduce using rule 96 (guardaCTE -> .)
    NE              reduce using rule 96 (guardaCTE -> .)
    COMPARE         reduce using rule 96 (guardaCTE -> .)
    AND             reduce using rule 96 (guardaCTE -> .)
    OR              reduce using rule 96 (guardaCTE -> .)
    RBRACKET        reduce using rule 96 (guardaCTE -> .)
    RPAREN          reduce using rule 96 (guardaCTE -> .)
    COMMA           reduce using rule 96 (guardaCTE -> .)
    SEMICOLON       reduce using rule 96 (guardaCTE -> .)
    TO              reduce using rule 96 (guardaCTE -> .)
    CTEI            reduce using rule 96 (guardaCTE -> .)
    CTEF            reduce using rule 96 (guardaCTE -> .)
    CTEC            reduce using rule 96 (guardaCTE -> .)
    CTESTRING       reduce using rule 96 (guardaCTE -> .)
    LPAREN          reduce using rule 96 (guardaCTE -> .)
    ID              reduce using rule 96 (guardaCTE -> .)

    guardaCTE                      shift and go to state 107

state 75

    (138) pexp -> CTEC . guardaCTE
    (96) guardaCTE -> .

    MUL             reduce using rule 96 (guardaCTE -> .)
    DIV             reduce using rule 96 (guardaCTE -> .)
    PLUS            reduce using rule 96 (guardaCTE -> .)
    MINUS           reduce using rule 96 (guardaCTE -> .)
    GT              reduce using rule 96 (guardaCTE -> .)
    LT              reduce using rule 96 (guardaCTE -> .)
    GTE             reduce using rule 96 (guardaCTE -> .)
    LTE             reduce using rule 96 (guardaCTE -> .)
    NE              reduce using rule 96 (guardaCTE -> .)
    COMPARE         reduce using rule 96 (guardaCTE -> .)
    AND             reduce using rule 96 (guardaCTE -> .)
    OR              reduce using rule 96 (guardaCTE -> .)
    RBRACKET        reduce using rule 96 (guardaCTE -> .)
    RPAREN          reduce using rule 96 (guardaCTE -> .)
    COMMA           reduce using rule 96 (guardaCTE -> .)
    SEMICOLON       reduce using rule 96 (guardaCTE -> .)
    TO              reduce using rule 96 (guardaCTE -> .)
    CTEI            reduce using rule 96 (guardaCTE -> .)
    CTEF            reduce using rule 96 (guardaCTE -> .)
    CTEC            reduce using rule 96 (guardaCTE -> .)
    CTESTRING       reduce using rule 96 (guardaCTE -> .)
    LPAREN          reduce using rule 96 (guardaCTE -> .)
    ID              reduce using rule 96 (guardaCTE -> .)

    guardaCTE                      shift and go to state 108

state 76

    (139) pexp -> CTESTRING . guardaCTE
    (96) guardaCTE -> .

    MUL             reduce using rule 96 (guardaCTE -> .)
    DIV             reduce using rule 96 (guardaCTE -> .)
    PLUS            reduce using rule 96 (guardaCTE -> .)
    MINUS           reduce using rule 96 (guardaCTE -> .)
    GT              reduce using rule 96 (guardaCTE -> .)
    LT              reduce using rule 96 (guardaCTE -> .)
    GTE             reduce using rule 96 (guardaCTE -> .)
    LTE             reduce using rule 96 (guardaCTE -> .)
    NE              reduce using rule 96 (guardaCTE -> .)
    COMPARE         reduce using rule 96 (guardaCTE -> .)
    AND             reduce using rule 96 (guardaCTE -> .)
    OR              reduce using rule 96 (guardaCTE -> .)
    RBRACKET        reduce using rule 96 (guardaCTE -> .)
    RPAREN          reduce using rule 96 (guardaCTE -> .)
    COMMA           reduce using rule 96 (guardaCTE -> .)
    SEMICOLON       reduce using rule 96 (guardaCTE -> .)
    TO              reduce using rule 96 (guardaCTE -> .)
    CTEI            reduce using rule 96 (guardaCTE -> .)
    CTEF            reduce using rule 96 (guardaCTE -> .)
    CTEC            reduce using rule 96 (guardaCTE -> .)
    CTESTRING       reduce using rule 96 (guardaCTE -> .)
    LPAREN          reduce using rule 96 (guardaCTE -> .)
    ID              reduce using rule 96 (guardaCTE -> .)

    guardaCTE                      shift and go to state 109

state 77

    (140) pexp -> llamada .

    MUL             reduce using rule 140 (pexp -> llamada .)
    DIV             reduce using rule 140 (pexp -> llamada .)
    PLUS            reduce using rule 140 (pexp -> llamada .)
    MINUS           reduce using rule 140 (pexp -> llamada .)
    GT              reduce using rule 140 (pexp -> llamada .)
    LT              reduce using rule 140 (pexp -> llamada .)
    GTE             reduce using rule 140 (pexp -> llamada .)
    LTE             reduce using rule 140 (pexp -> llamada .)
    NE              reduce using rule 140 (pexp -> llamada .)
    COMPARE         reduce using rule 140 (pexp -> llamada .)
    AND             reduce using rule 140 (pexp -> llamada .)
    OR              reduce using rule 140 (pexp -> llamada .)
    RBRACKET        reduce using rule 140 (pexp -> llamada .)
    RPAREN          reduce using rule 140 (pexp -> llamada .)
    COMMA           reduce using rule 140 (pexp -> llamada .)
    SEMICOLON       reduce using rule 140 (pexp -> llamada .)
    TO              reduce using rule 140 (pexp -> llamada .)
    CTEI            reduce using rule 140 (pexp -> llamada .)
    CTEF            reduce using rule 140 (pexp -> llamada .)
    CTEC            reduce using rule 140 (pexp -> llamada .)
    CTESTRING       reduce using rule 140 (pexp -> llamada .)
    LPAREN          reduce using rule 140 (pexp -> llamada .)
    ID              reduce using rule 140 (pexp -> llamada .)


state 78

    (141) pexp -> LPAREN . exp RPAREN
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)

    exp                            shift and go to state 110
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 79

    (19) var1 -> ID .
    (20) var1 -> ID . COMMA var1 agregarVar
    (21) var1 -> ID . arr
    (22) var1 -> ID . arr COMMA var1 agregarVar
    (23) var1 -> ID . mat COMMA var1 agregarVar
    (24) var1 -> ID . mat
    (25) var1 -> ID . mat especial
    (76) llamada -> ID . llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (31) arr -> . LBRACKET CTEI RBRACKET
    (32) arr -> . LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (35) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (36) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET
    (77) llamadaEra -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for LPAREN resolved using rule 19 (var1 -> ID .)
    MUL             reduce using rule 19 (var1 -> ID .)
    DIV             reduce using rule 19 (var1 -> ID .)
    PLUS            reduce using rule 19 (var1 -> ID .)
    MINUS           reduce using rule 19 (var1 -> ID .)
    GT              reduce using rule 19 (var1 -> ID .)
    LT              reduce using rule 19 (var1 -> ID .)
    GTE             reduce using rule 19 (var1 -> ID .)
    LTE             reduce using rule 19 (var1 -> ID .)
    NE              reduce using rule 19 (var1 -> ID .)
    COMPARE         reduce using rule 19 (var1 -> ID .)
    AND             reduce using rule 19 (var1 -> ID .)
    OR              reduce using rule 19 (var1 -> ID .)
    RBRACKET        reduce using rule 19 (var1 -> ID .)
    RPAREN          reduce using rule 19 (var1 -> ID .)
    SEMICOLON       reduce using rule 19 (var1 -> ID .)
    TO              reduce using rule 19 (var1 -> ID .)
    CTEI            reduce using rule 19 (var1 -> ID .)
    CTEF            reduce using rule 19 (var1 -> ID .)
    CTEC            reduce using rule 19 (var1 -> ID .)
    CTESTRING       reduce using rule 19 (var1 -> ID .)
    LPAREN          reduce using rule 19 (var1 -> ID .)
    ID              reduce using rule 19 (var1 -> ID .)
    COMMA           shift and go to state 49
    LBRACKET        shift and go to state 52

  ! COMMA           [ reduce using rule 19 (var1 -> ID .) ]
  ! LPAREN          [ reduce using rule 77 (llamadaEra -> .) ]

    arr                            shift and go to state 50
    mat                            shift and go to state 51
    llamadaEra                     shift and go to state 111

state 80

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY . var estatutos RCURLY END
    (14) var -> . vars
    (15) var -> . empty
    (16) vars -> . VAR var_2
    (143) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RCURLY          reduce using rule 143 (empty -> .)

    var                            shift and go to state 112
    vars                           shift and go to state 9
    empty                          shift and go to state 10

state 81

    (74) param2 -> param2 type param .

    RPAREN          reduce using rule 74 (param2 -> param2 type param .)
    INT             reduce using rule 74 (param2 -> param2 type param .)
    FLOAT           reduce using rule 74 (param2 -> param2 type param .)
    CHAR            reduce using rule 74 (param2 -> param2 type param .)


state 82

    (65) param -> ID . agregarParametro
    (66) param -> ID . COMMA param agregarParametro
    (67) param -> ID . arr
    (68) param -> ID . arr COMMA param
    (69) param -> ID . mat COMMA param
    (70) param -> ID . mat
    (71) param -> ID . mat especial
    (73) agregarParametro -> .
    (31) arr -> . LBRACKET CTEI RBRACKET
    (32) arr -> . LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (35) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (36) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    COMMA           shift and go to state 114
    RPAREN          reduce using rule 73 (agregarParametro -> .)
    INT             reduce using rule 73 (agregarParametro -> .)
    FLOAT           reduce using rule 73 (agregarParametro -> .)
    CHAR            reduce using rule 73 (agregarParametro -> .)
    LBRACKET        shift and go to state 52

    agregarParametro               shift and go to state 113
    arr                            shift and go to state 115
    mat                            shift and go to state 116

state 83

    (72) param -> empty .

    RPAREN          reduce using rule 72 (param -> empty .)
    INT             reduce using rule 72 (param -> empty .)
    FLOAT           reduce using rule 72 (param -> empty .)
    CHAR            reduce using rule 72 (param -> empty .)


state 84

    (43) funcion_1 -> ID guardaFuncion LPAREN . param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
    (74) param2 -> . param2 type param
    (75) param2 -> . empty
    (143) empty -> .

    RPAREN          reduce using rule 143 (empty -> .)
    INT             reduce using rule 143 (empty -> .)
    FLOAT           reduce using rule 143 (empty -> .)
    CHAR            reduce using rule 143 (empty -> .)

    param2                         shift and go to state 117
    empty                          shift and go to state 40

state 85

    (44) funcion_2 -> ID guardaFuncion LPAREN . param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (74) param2 -> . param2 type param
    (75) param2 -> . empty
    (143) empty -> .

    RPAREN          reduce using rule 143 (empty -> .)
    INT             reduce using rule 143 (empty -> .)
    FLOAT           reduce using rule 143 (empty -> .)
    CHAR            reduce using rule 143 (empty -> .)

    param2                         shift and go to state 118
    empty                          shift and go to state 40

state 86

    (20) var1 -> ID COMMA var1 agregarVar .

    SEMICOLON       reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    MUL             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    DIV             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    PLUS            reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    MINUS           reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    GT              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    LT              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    GTE             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    LTE             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    NE              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    COMPARE         reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    AND             reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    OR              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    RBRACKET        reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    RPAREN          reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    COMMA           reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    TO              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    CTEI            reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    CTEF            reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    CTEC            reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    CTESTRING       reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    LPAREN          reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)
    ID              reduce using rule 20 (var1 -> ID COMMA var1 agregarVar .)


state 87

    (22) var1 -> ID arr COMMA var1 . agregarVar
    (27) agregarVar -> .

    SEMICOLON       reduce using rule 27 (agregarVar -> .)
    MUL             reduce using rule 27 (agregarVar -> .)
    DIV             reduce using rule 27 (agregarVar -> .)
    PLUS            reduce using rule 27 (agregarVar -> .)
    MINUS           reduce using rule 27 (agregarVar -> .)
    GT              reduce using rule 27 (agregarVar -> .)
    LT              reduce using rule 27 (agregarVar -> .)
    GTE             reduce using rule 27 (agregarVar -> .)
    LTE             reduce using rule 27 (agregarVar -> .)
    NE              reduce using rule 27 (agregarVar -> .)
    COMPARE         reduce using rule 27 (agregarVar -> .)
    AND             reduce using rule 27 (agregarVar -> .)
    OR              reduce using rule 27 (agregarVar -> .)
    RBRACKET        reduce using rule 27 (agregarVar -> .)
    RPAREN          reduce using rule 27 (agregarVar -> .)
    COMMA           reduce using rule 27 (agregarVar -> .)
    TO              reduce using rule 27 (agregarVar -> .)
    CTEI            reduce using rule 27 (agregarVar -> .)
    CTEF            reduce using rule 27 (agregarVar -> .)
    CTEC            reduce using rule 27 (agregarVar -> .)
    CTESTRING       reduce using rule 27 (agregarVar -> .)
    LPAREN          reduce using rule 27 (agregarVar -> .)
    ID              reduce using rule 27 (agregarVar -> .)

    agregarVar                     shift and go to state 119

state 88

    (23) var1 -> ID mat COMMA var1 . agregarVar
    (27) agregarVar -> .

    SEMICOLON       reduce using rule 27 (agregarVar -> .)
    MUL             reduce using rule 27 (agregarVar -> .)
    DIV             reduce using rule 27 (agregarVar -> .)
    PLUS            reduce using rule 27 (agregarVar -> .)
    MINUS           reduce using rule 27 (agregarVar -> .)
    GT              reduce using rule 27 (agregarVar -> .)
    LT              reduce using rule 27 (agregarVar -> .)
    GTE             reduce using rule 27 (agregarVar -> .)
    LTE             reduce using rule 27 (agregarVar -> .)
    NE              reduce using rule 27 (agregarVar -> .)
    COMPARE         reduce using rule 27 (agregarVar -> .)
    AND             reduce using rule 27 (agregarVar -> .)
    OR              reduce using rule 27 (agregarVar -> .)
    RBRACKET        reduce using rule 27 (agregarVar -> .)
    RPAREN          reduce using rule 27 (agregarVar -> .)
    COMMA           reduce using rule 27 (agregarVar -> .)
    TO              reduce using rule 27 (agregarVar -> .)
    CTEI            reduce using rule 27 (agregarVar -> .)
    CTEF            reduce using rule 27 (agregarVar -> .)
    CTEC            reduce using rule 27 (agregarVar -> .)
    CTESTRING       reduce using rule 27 (agregarVar -> .)
    LPAREN          reduce using rule 27 (agregarVar -> .)
    ID              reduce using rule 27 (agregarVar -> .)

    agregarVar                     shift and go to state 120

state 89

    (31) arr -> LBRACKET CTEI RBRACKET .
    (33) mat -> LBRACKET CTEI RBRACKET . LBRACKET CTEI RBRACKET
    (36) mat -> LBRACKET CTEI RBRACKET . LBRACKET exp RBRACKET

    COMMA           reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    CTESTRING       reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 31 (arr -> LBRACKET CTEI RBRACKET .)
    LBRACKET        shift and go to state 121


state 90

    (136) pexp -> CTEI guardaCTE .

    MUL             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    DIV             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    PLUS            reduce using rule 136 (pexp -> CTEI guardaCTE .)
    MINUS           reduce using rule 136 (pexp -> CTEI guardaCTE .)
    GT              reduce using rule 136 (pexp -> CTEI guardaCTE .)
    LT              reduce using rule 136 (pexp -> CTEI guardaCTE .)
    GTE             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    LTE             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    NE              reduce using rule 136 (pexp -> CTEI guardaCTE .)
    COMPARE         reduce using rule 136 (pexp -> CTEI guardaCTE .)
    AND             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    OR              reduce using rule 136 (pexp -> CTEI guardaCTE .)
    RBRACKET        reduce using rule 136 (pexp -> CTEI guardaCTE .)
    RPAREN          reduce using rule 136 (pexp -> CTEI guardaCTE .)
    COMMA           reduce using rule 136 (pexp -> CTEI guardaCTE .)
    SEMICOLON       reduce using rule 136 (pexp -> CTEI guardaCTE .)
    TO              reduce using rule 136 (pexp -> CTEI guardaCTE .)
    CTEI            reduce using rule 136 (pexp -> CTEI guardaCTE .)
    CTEF            reduce using rule 136 (pexp -> CTEI guardaCTE .)
    CTEC            reduce using rule 136 (pexp -> CTEI guardaCTE .)
    CTESTRING       reduce using rule 136 (pexp -> CTEI guardaCTE .)
    LPAREN          reduce using rule 136 (pexp -> CTEI guardaCTE .)
    ID              reduce using rule 136 (pexp -> CTEI guardaCTE .)


state 91

    (32) arr -> LBRACKET exp RBRACKET .
    (34) mat -> LBRACKET exp RBRACKET . LBRACKET exp RBRACKET
    (35) mat -> LBRACKET exp RBRACKET . LBRACKET CTEI RBRACKET

    COMMA           reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    MUL             reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    DIV             reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    GT              reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    LT              reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    GTE             reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    LTE             reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    NE              reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    AND             reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    OR              reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    TO              reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    CTESTRING       reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    ID              reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    INT             reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 32 (arr -> LBRACKET exp RBRACKET .)
    LBRACKET        shift and go to state 122


state 92

    (113) exp -> nexp OR . addOperadorName nexp cuadruploOr
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    GT              reduce using rule 63 (addOperadorName -> .)
    LT              reduce using rule 63 (addOperadorName -> .)
    GTE             reduce using rule 63 (addOperadorName -> .)
    LTE             reduce using rule 63 (addOperadorName -> .)
    NE              reduce using rule 63 (addOperadorName -> .)
    COMPARE         reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 123

state 93

    (116) nexp -> compexp AND . addOperadorName compexp cuadruploAnd
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    GT              reduce using rule 63 (addOperadorName -> .)
    LT              reduce using rule 63 (addOperadorName -> .)
    GTE             reduce using rule 63 (addOperadorName -> .)
    LTE             reduce using rule 63 (addOperadorName -> .)
    NE              reduce using rule 63 (addOperadorName -> .)
    COMPARE         reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 124

state 94

    (120) compexp1 -> sumexp GT . addOperadorName sumexp cuadruploComparacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 125

state 95

    (121) compexp1 -> sumexp LT . addOperadorName sumexp cuadruploComparacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 126

state 96

    (122) compexp1 -> sumexp GTE . addOperadorName sumexp cuadruploComparacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 127

state 97

    (123) compexp1 -> sumexp LTE . addOperadorName sumexp cuadruploComparacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 128

state 98

    (124) compexp1 -> sumexp NE . addOperadorName sumexp cuadruploComparacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 129

state 99

    (125) compexp1 -> sumexp COMPARE . addOperadorName sumexp cuadruploComparacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 130

state 100

    (119) compexp -> compexp1 sumexp .

    AND             reduce using rule 119 (compexp -> compexp1 sumexp .)
    OR              reduce using rule 119 (compexp -> compexp1 sumexp .)
    RBRACKET        reduce using rule 119 (compexp -> compexp1 sumexp .)
    RPAREN          reduce using rule 119 (compexp -> compexp1 sumexp .)
    COMMA           reduce using rule 119 (compexp -> compexp1 sumexp .)
    SEMICOLON       reduce using rule 119 (compexp -> compexp1 sumexp .)
    TO              reduce using rule 119 (compexp -> compexp1 sumexp .)


state 101

    (136) pexp -> CTEI . guardaCTE
    (96) guardaCTE -> .

    MUL             reduce using rule 96 (guardaCTE -> .)
    DIV             reduce using rule 96 (guardaCTE -> .)
    PLUS            reduce using rule 96 (guardaCTE -> .)
    MINUS           reduce using rule 96 (guardaCTE -> .)
    AND             reduce using rule 96 (guardaCTE -> .)
    OR              reduce using rule 96 (guardaCTE -> .)
    RBRACKET        reduce using rule 96 (guardaCTE -> .)
    RPAREN          reduce using rule 96 (guardaCTE -> .)
    COMMA           reduce using rule 96 (guardaCTE -> .)
    SEMICOLON       reduce using rule 96 (guardaCTE -> .)
    TO              reduce using rule 96 (guardaCTE -> .)
    GT              reduce using rule 96 (guardaCTE -> .)
    LT              reduce using rule 96 (guardaCTE -> .)
    GTE             reduce using rule 96 (guardaCTE -> .)
    LTE             reduce using rule 96 (guardaCTE -> .)
    NE              reduce using rule 96 (guardaCTE -> .)
    COMPARE         reduce using rule 96 (guardaCTE -> .)
    CTEI            reduce using rule 96 (guardaCTE -> .)
    CTEF            reduce using rule 96 (guardaCTE -> .)
    CTEC            reduce using rule 96 (guardaCTE -> .)
    CTESTRING       reduce using rule 96 (guardaCTE -> .)
    LPAREN          reduce using rule 96 (guardaCTE -> .)
    ID              reduce using rule 96 (guardaCTE -> .)

    guardaCTE                      shift and go to state 90

state 102

    (128) sumexp -> mulexp PLUS . addOperadorName mulexp cuadruploSuma
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    GT              reduce using rule 63 (addOperadorName -> .)
    LT              reduce using rule 63 (addOperadorName -> .)
    GTE             reduce using rule 63 (addOperadorName -> .)
    LTE             reduce using rule 63 (addOperadorName -> .)
    NE              reduce using rule 63 (addOperadorName -> .)
    COMPARE         reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 131

state 103

    (129) sumexp -> mulexp MINUS . addOperadorName mulexp cuadruploSuma
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    GT              reduce using rule 63 (addOperadorName -> .)
    LT              reduce using rule 63 (addOperadorName -> .)
    GTE             reduce using rule 63 (addOperadorName -> .)
    LTE             reduce using rule 63 (addOperadorName -> .)
    NE              reduce using rule 63 (addOperadorName -> .)
    COMPARE         reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 132

state 104

    (132) mulexp -> pexp MUL . addOperadorName pexp cuadruploMultiplicacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    GT              reduce using rule 63 (addOperadorName -> .)
    LT              reduce using rule 63 (addOperadorName -> .)
    GTE             reduce using rule 63 (addOperadorName -> .)
    LTE             reduce using rule 63 (addOperadorName -> .)
    NE              reduce using rule 63 (addOperadorName -> .)
    COMPARE         reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 133

state 105

    (133) mulexp -> pexp DIV . addOperadorName pexp cuadruploMultiplicacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    GT              reduce using rule 63 (addOperadorName -> .)
    LT              reduce using rule 63 (addOperadorName -> .)
    GTE             reduce using rule 63 (addOperadorName -> .)
    LTE             reduce using rule 63 (addOperadorName -> .)
    NE              reduce using rule 63 (addOperadorName -> .)
    COMPARE         reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    RBRACKET        reduce using rule 63 (addOperadorName -> .)
    RPAREN          reduce using rule 63 (addOperadorName -> .)
    COMMA           reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 134

state 106

    (135) pexp -> var1 guardaID .

    MUL             reduce using rule 135 (pexp -> var1 guardaID .)
    DIV             reduce using rule 135 (pexp -> var1 guardaID .)
    PLUS            reduce using rule 135 (pexp -> var1 guardaID .)
    MINUS           reduce using rule 135 (pexp -> var1 guardaID .)
    GT              reduce using rule 135 (pexp -> var1 guardaID .)
    LT              reduce using rule 135 (pexp -> var1 guardaID .)
    GTE             reduce using rule 135 (pexp -> var1 guardaID .)
    LTE             reduce using rule 135 (pexp -> var1 guardaID .)
    NE              reduce using rule 135 (pexp -> var1 guardaID .)
    COMPARE         reduce using rule 135 (pexp -> var1 guardaID .)
    AND             reduce using rule 135 (pexp -> var1 guardaID .)
    OR              reduce using rule 135 (pexp -> var1 guardaID .)
    RBRACKET        reduce using rule 135 (pexp -> var1 guardaID .)
    RPAREN          reduce using rule 135 (pexp -> var1 guardaID .)
    COMMA           reduce using rule 135 (pexp -> var1 guardaID .)
    SEMICOLON       reduce using rule 135 (pexp -> var1 guardaID .)
    TO              reduce using rule 135 (pexp -> var1 guardaID .)
    CTEI            reduce using rule 135 (pexp -> var1 guardaID .)
    CTEF            reduce using rule 135 (pexp -> var1 guardaID .)
    CTEC            reduce using rule 135 (pexp -> var1 guardaID .)
    CTESTRING       reduce using rule 135 (pexp -> var1 guardaID .)
    LPAREN          reduce using rule 135 (pexp -> var1 guardaID .)
    ID              reduce using rule 135 (pexp -> var1 guardaID .)


state 107

    (137) pexp -> CTEF guardaCTE .

    MUL             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    DIV             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    PLUS            reduce using rule 137 (pexp -> CTEF guardaCTE .)
    MINUS           reduce using rule 137 (pexp -> CTEF guardaCTE .)
    GT              reduce using rule 137 (pexp -> CTEF guardaCTE .)
    LT              reduce using rule 137 (pexp -> CTEF guardaCTE .)
    GTE             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    LTE             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    NE              reduce using rule 137 (pexp -> CTEF guardaCTE .)
    COMPARE         reduce using rule 137 (pexp -> CTEF guardaCTE .)
    AND             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    OR              reduce using rule 137 (pexp -> CTEF guardaCTE .)
    RBRACKET        reduce using rule 137 (pexp -> CTEF guardaCTE .)
    RPAREN          reduce using rule 137 (pexp -> CTEF guardaCTE .)
    COMMA           reduce using rule 137 (pexp -> CTEF guardaCTE .)
    SEMICOLON       reduce using rule 137 (pexp -> CTEF guardaCTE .)
    TO              reduce using rule 137 (pexp -> CTEF guardaCTE .)
    CTEI            reduce using rule 137 (pexp -> CTEF guardaCTE .)
    CTEF            reduce using rule 137 (pexp -> CTEF guardaCTE .)
    CTEC            reduce using rule 137 (pexp -> CTEF guardaCTE .)
    CTESTRING       reduce using rule 137 (pexp -> CTEF guardaCTE .)
    LPAREN          reduce using rule 137 (pexp -> CTEF guardaCTE .)
    ID              reduce using rule 137 (pexp -> CTEF guardaCTE .)


state 108

    (138) pexp -> CTEC guardaCTE .

    MUL             reduce using rule 138 (pexp -> CTEC guardaCTE .)
    DIV             reduce using rule 138 (pexp -> CTEC guardaCTE .)
    PLUS            reduce using rule 138 (pexp -> CTEC guardaCTE .)
    MINUS           reduce using rule 138 (pexp -> CTEC guardaCTE .)
    GT              reduce using rule 138 (pexp -> CTEC guardaCTE .)
    LT              reduce using rule 138 (pexp -> CTEC guardaCTE .)
    GTE             reduce using rule 138 (pexp -> CTEC guardaCTE .)
    LTE             reduce using rule 138 (pexp -> CTEC guardaCTE .)
    NE              reduce using rule 138 (pexp -> CTEC guardaCTE .)
    COMPARE         reduce using rule 138 (pexp -> CTEC guardaCTE .)
    AND             reduce using rule 138 (pexp -> CTEC guardaCTE .)
    OR              reduce using rule 138 (pexp -> CTEC guardaCTE .)
    RBRACKET        reduce using rule 138 (pexp -> CTEC guardaCTE .)
    RPAREN          reduce using rule 138 (pexp -> CTEC guardaCTE .)
    COMMA           reduce using rule 138 (pexp -> CTEC guardaCTE .)
    SEMICOLON       reduce using rule 138 (pexp -> CTEC guardaCTE .)
    TO              reduce using rule 138 (pexp -> CTEC guardaCTE .)
    CTEI            reduce using rule 138 (pexp -> CTEC guardaCTE .)
    CTEF            reduce using rule 138 (pexp -> CTEC guardaCTE .)
    CTEC            reduce using rule 138 (pexp -> CTEC guardaCTE .)
    CTESTRING       reduce using rule 138 (pexp -> CTEC guardaCTE .)
    LPAREN          reduce using rule 138 (pexp -> CTEC guardaCTE .)
    ID              reduce using rule 138 (pexp -> CTEC guardaCTE .)


state 109

    (139) pexp -> CTESTRING guardaCTE .

    MUL             reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    DIV             reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    PLUS            reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    MINUS           reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    GT              reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    LT              reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    GTE             reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    LTE             reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    NE              reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    COMPARE         reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    AND             reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    OR              reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    RBRACKET        reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    RPAREN          reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    COMMA           reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    SEMICOLON       reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    TO              reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    CTEI            reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    CTEF            reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    CTEC            reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    CTESTRING       reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    LPAREN          reduce using rule 139 (pexp -> CTESTRING guardaCTE .)
    ID              reduce using rule 139 (pexp -> CTESTRING guardaCTE .)


state 110

    (141) pexp -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 135


state 111

    (76) llamada -> ID llamadaEra . LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena

    LPAREN          shift and go to state 136


state 112

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var . estatutos RCURLY END
    (50) estatutos -> . estatutos_2 estatutos
    (51) estatutos -> . empty
    (52) estatutos_2 -> . asignacion SEMICOLON
    (53) estatutos_2 -> . llamada SEMICOLON
    (54) estatutos_2 -> . lectura SEMICOLON
    (55) estatutos_2 -> . escritura SEMICOLON
    (56) estatutos_2 -> . for
    (57) estatutos_2 -> . if
    (58) estatutos_2 -> . while
    (143) empty -> .
    (59) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (97) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (102) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (108) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 143 (empty -> .)
    ID              shift and go to state 147
    READ            shift and go to state 148
    PRINT           shift and go to state 149
    FOR             shift and go to state 150
    IF              shift and go to state 151
    WHILE           shift and go to state 152

    estatutos                      shift and go to state 137
    estatutos_2                    shift and go to state 138
    empty                          shift and go to state 139
    asignacion                     shift and go to state 140
    llamada                        shift and go to state 141
    lectura                        shift and go to state 142
    escritura                      shift and go to state 143
    for                            shift and go to state 144
    if                             shift and go to state 145
    while                          shift and go to state 146

state 113

    (65) param -> ID agregarParametro .

    RPAREN          reduce using rule 65 (param -> ID agregarParametro .)
    INT             reduce using rule 65 (param -> ID agregarParametro .)
    FLOAT           reduce using rule 65 (param -> ID agregarParametro .)
    CHAR            reduce using rule 65 (param -> ID agregarParametro .)


state 114

    (66) param -> ID COMMA . param agregarParametro
    (65) param -> . ID agregarParametro
    (66) param -> . ID COMMA param agregarParametro
    (67) param -> . ID arr
    (68) param -> . ID arr COMMA param
    (69) param -> . ID mat COMMA param
    (70) param -> . ID mat
    (71) param -> . ID mat especial
    (72) param -> . empty
    (143) empty -> .

    ID              shift and go to state 82
    RPAREN          reduce using rule 143 (empty -> .)
    INT             reduce using rule 143 (empty -> .)
    FLOAT           reduce using rule 143 (empty -> .)
    CHAR            reduce using rule 143 (empty -> .)

    param                          shift and go to state 153
    empty                          shift and go to state 83

state 115

    (67) param -> ID arr .
    (68) param -> ID arr . COMMA param

    RPAREN          reduce using rule 67 (param -> ID arr .)
    INT             reduce using rule 67 (param -> ID arr .)
    FLOAT           reduce using rule 67 (param -> ID arr .)
    CHAR            reduce using rule 67 (param -> ID arr .)
    COMMA           shift and go to state 154


state 116

    (69) param -> ID mat . COMMA param
    (70) param -> ID mat .
    (71) param -> ID mat . especial
    (28) especial -> . TRANSPUESTA
    (29) especial -> . INVERSA
    (30) especial -> . DETERMINANTE

    COMMA           shift and go to state 155
    RPAREN          reduce using rule 70 (param -> ID mat .)
    INT             reduce using rule 70 (param -> ID mat .)
    FLOAT           reduce using rule 70 (param -> ID mat .)
    CHAR            reduce using rule 70 (param -> ID mat .)
    TRANSPUESTA     shift and go to state 62
    INVERSA         shift and go to state 63
    DETERMINANTE    shift and go to state 64

    especial                       shift and go to state 156

state 117

    (43) funcion_1 -> ID guardaFuncion LPAREN param2 . RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion
    (74) param2 -> param2 . type param
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    RPAREN          shift and go to state 157
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    type                           shift and go to state 54

state 118

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 . RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (74) param2 -> param2 . type param
    (10) type -> . INT guardaTipoDeVariable
    (11) type -> . FLOAT guardaTipoDeVariable
    (12) type -> . CHAR guardaTipoDeVariable

    RPAREN          shift and go to state 158
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    CHAR            shift and go to state 25

    type                           shift and go to state 54

state 119

    (22) var1 -> ID arr COMMA var1 agregarVar .

    SEMICOLON       reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    MUL             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    DIV             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    PLUS            reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    MINUS           reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    GT              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    LT              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    GTE             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    LTE             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    NE              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    COMPARE         reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    AND             reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    OR              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    RBRACKET        reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    RPAREN          reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    COMMA           reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    TO              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    CTEI            reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    CTEF            reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    CTEC            reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    CTESTRING       reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    LPAREN          reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)
    ID              reduce using rule 22 (var1 -> ID arr COMMA var1 agregarVar .)


state 120

    (23) var1 -> ID mat COMMA var1 agregarVar .

    SEMICOLON       reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    MUL             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    DIV             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    PLUS            reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    MINUS           reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    GT              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    LT              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    GTE             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    LTE             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    NE              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    COMPARE         reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    AND             reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    OR              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    RBRACKET        reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    RPAREN          reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    COMMA           reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    TO              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    CTEI            reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    CTEF            reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    CTEC            reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    CTESTRING       reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    LPAREN          reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)
    ID              reduce using rule 23 (var1 -> ID mat COMMA var1 agregarVar .)


state 121

    (33) mat -> LBRACKET CTEI RBRACKET LBRACKET . CTEI RBRACKET
    (36) mat -> LBRACKET CTEI RBRACKET LBRACKET . exp RBRACKET
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 159
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)

    exp                            shift and go to state 160
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 122

    (34) mat -> LBRACKET exp RBRACKET LBRACKET . exp RBRACKET
    (35) mat -> LBRACKET exp RBRACKET LBRACKET . CTEI RBRACKET
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 162
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)

    exp                            shift and go to state 161
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 123

    (113) exp -> nexp OR addOperadorName . nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

    nexp                           shift and go to state 163
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 124

    (116) nexp -> compexp AND addOperadorName . compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

    compexp                        shift and go to state 164
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 125

    (120) compexp1 -> sumexp GT addOperadorName . sumexp cuadruploComparacion
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    sumexp                         shift and go to state 165
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 126

    (121) compexp1 -> sumexp LT addOperadorName . sumexp cuadruploComparacion
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    sumexp                         shift and go to state 166
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 127

    (122) compexp1 -> sumexp GTE addOperadorName . sumexp cuadruploComparacion
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    sumexp                         shift and go to state 167
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 128

    (123) compexp1 -> sumexp LTE addOperadorName . sumexp cuadruploComparacion
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    sumexp                         shift and go to state 168
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 129

    (124) compexp1 -> sumexp NE addOperadorName . sumexp cuadruploComparacion
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    sumexp                         shift and go to state 169
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 130

    (125) compexp1 -> sumexp COMPARE addOperadorName . sumexp cuadruploComparacion
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    sumexp                         shift and go to state 170
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 131

    (128) sumexp -> mulexp PLUS addOperadorName . mulexp cuadruploSuma
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    mulexp                         shift and go to state 171
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 132

    (129) sumexp -> mulexp MINUS addOperadorName . mulexp cuadruploSuma
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    mulexp                         shift and go to state 172
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 133

    (132) mulexp -> pexp MUL addOperadorName . pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    pexp                           shift and go to state 173
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 134

    (133) mulexp -> pexp DIV addOperadorName . pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

  ! shift/reduce conflict for CTEI resolved as shift
  ! shift/reduce conflict for CTEF resolved as shift
  ! shift/reduce conflict for CTEC resolved as shift
  ! shift/reduce conflict for CTESTRING resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for ID resolved as shift
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RBRACKET        reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)

  ! CTEI            [ reduce using rule 143 (empty -> .) ]
  ! CTEF            [ reduce using rule 143 (empty -> .) ]
  ! CTEC            [ reduce using rule 143 (empty -> .) ]
  ! CTESTRING       [ reduce using rule 143 (empty -> .) ]
  ! LPAREN          [ reduce using rule 143 (empty -> .) ]
  ! ID              [ reduce using rule 143 (empty -> .) ]

    pexp                           shift and go to state 174
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 135

    (141) pexp -> LPAREN exp RPAREN .

    MUL             reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    DIV             reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    GT              reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    LT              reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    GTE             reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    LTE             reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    NE              reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    COMPARE         reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    AND             reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    OR              reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    TO              reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    CTEI            reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    CTEF            reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    CTEC            reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    CTESTRING       reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    LPAREN          reduce using rule 141 (pexp -> LPAREN exp RPAREN .)
    ID              reduce using rule 141 (pexp -> LPAREN exp RPAREN .)


state 136

    (76) llamada -> ID llamadaEra LPAREN . auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (78) auxiliarExp -> . exp
    (79) auxiliarExp -> . exp COMMA auxiliarExp
    (80) auxiliarExp -> . empty
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (143) empty -> .
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena

    RPAREN          reduce using rule 143 (empty -> .)
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79

    auxiliarExp                    shift and go to state 175
    exp                            shift and go to state 176
    empty                          shift and go to state 177
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77

state 137

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos . RCURLY END

    RCURLY          shift and go to state 178


state 138

    (50) estatutos -> estatutos_2 . estatutos
    (50) estatutos -> . estatutos_2 estatutos
    (51) estatutos -> . empty
    (52) estatutos_2 -> . asignacion SEMICOLON
    (53) estatutos_2 -> . llamada SEMICOLON
    (54) estatutos_2 -> . lectura SEMICOLON
    (55) estatutos_2 -> . escritura SEMICOLON
    (56) estatutos_2 -> . for
    (57) estatutos_2 -> . if
    (58) estatutos_2 -> . while
    (143) empty -> .
    (59) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (97) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (102) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (108) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)
    ID              shift and go to state 147
    READ            shift and go to state 148
    PRINT           shift and go to state 149
    FOR             shift and go to state 150
    IF              shift and go to state 151
    WHILE           shift and go to state 152

    estatutos_2                    shift and go to state 138
    estatutos                      shift and go to state 179
    empty                          shift and go to state 139
    asignacion                     shift and go to state 140
    llamada                        shift and go to state 141
    lectura                        shift and go to state 142
    escritura                      shift and go to state 143
    for                            shift and go to state 144
    if                             shift and go to state 145
    while                          shift and go to state 146

state 139

    (51) estatutos -> empty .

    RCURLY          reduce using rule 51 (estatutos -> empty .)
    RETURN          reduce using rule 51 (estatutos -> empty .)


state 140

    (52) estatutos_2 -> asignacion . SEMICOLON

    SEMICOLON       shift and go to state 180


state 141

    (53) estatutos_2 -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 181


state 142

    (54) estatutos_2 -> lectura . SEMICOLON

    SEMICOLON       shift and go to state 182


state 143

    (55) estatutos_2 -> escritura . SEMICOLON

    SEMICOLON       shift and go to state 183


state 144

    (56) estatutos_2 -> for .

    ID              reduce using rule 56 (estatutos_2 -> for .)
    READ            reduce using rule 56 (estatutos_2 -> for .)
    PRINT           reduce using rule 56 (estatutos_2 -> for .)
    FOR             reduce using rule 56 (estatutos_2 -> for .)
    IF              reduce using rule 56 (estatutos_2 -> for .)
    WHILE           reduce using rule 56 (estatutos_2 -> for .)
    RCURLY          reduce using rule 56 (estatutos_2 -> for .)
    RETURN          reduce using rule 56 (estatutos_2 -> for .)


state 145

    (57) estatutos_2 -> if .

    ID              reduce using rule 57 (estatutos_2 -> if .)
    READ            reduce using rule 57 (estatutos_2 -> if .)
    PRINT           reduce using rule 57 (estatutos_2 -> if .)
    FOR             reduce using rule 57 (estatutos_2 -> if .)
    IF              reduce using rule 57 (estatutos_2 -> if .)
    WHILE           reduce using rule 57 (estatutos_2 -> if .)
    RCURLY          reduce using rule 57 (estatutos_2 -> if .)
    RETURN          reduce using rule 57 (estatutos_2 -> if .)


state 146

    (58) estatutos_2 -> while .

    ID              reduce using rule 58 (estatutos_2 -> while .)
    READ            reduce using rule 58 (estatutos_2 -> while .)
    PRINT           reduce using rule 58 (estatutos_2 -> while .)
    FOR             reduce using rule 58 (estatutos_2 -> while .)
    IF              reduce using rule 58 (estatutos_2 -> while .)
    WHILE           reduce using rule 58 (estatutos_2 -> while .)
    RCURLY          reduce using rule 58 (estatutos_2 -> while .)
    RETURN          reduce using rule 58 (estatutos_2 -> while .)


state 147

    (59) asignacion -> ID . guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> ID . guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> ID . guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (76) llamada -> ID . llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (62) guardaVariable_2 -> .
    (77) llamadaEra -> .

    EQUALS          reduce using rule 62 (guardaVariable_2 -> .)
    LBRACKET        reduce using rule 62 (guardaVariable_2 -> .)
    LPAREN          reduce using rule 77 (llamadaEra -> .)

    guardaVariable_2               shift and go to state 184
    llamadaEra                     shift and go to state 111

state 148

    (84) lectura -> READ . operadorRead LPAREN exp cuadruploRead RPAREN
    (85) operadorRead -> .

    LPAREN          reduce using rule 85 (operadorRead -> .)

    operadorRead                   shift and go to state 185

state 149

    (87) escritura -> PRINT . LPAREN operadorPrint escritura1 cuadruploPrint RPAREN

    LPAREN          shift and go to state 186


state 150

    (97) for -> FOR . operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (99) operadorFor -> .

    LPAREN          reduce using rule 99 (operadorFor -> .)

    operadorFor                    shift and go to state 187

state 151

    (102) if -> IF . LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf

    LPAREN          shift and go to state 188


state 152

    (108) while -> WHILE . operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
    (109) operadorWhile -> .

    LPAREN          reduce using rule 109 (operadorWhile -> .)

    operadorWhile                  shift and go to state 189

state 153

    (66) param -> ID COMMA param . agregarParametro
    (73) agregarParametro -> .

    RPAREN          reduce using rule 73 (agregarParametro -> .)
    INT             reduce using rule 73 (agregarParametro -> .)
    FLOAT           reduce using rule 73 (agregarParametro -> .)
    CHAR            reduce using rule 73 (agregarParametro -> .)

    agregarParametro               shift and go to state 190

state 154

    (68) param -> ID arr COMMA . param
    (65) param -> . ID agregarParametro
    (66) param -> . ID COMMA param agregarParametro
    (67) param -> . ID arr
    (68) param -> . ID arr COMMA param
    (69) param -> . ID mat COMMA param
    (70) param -> . ID mat
    (71) param -> . ID mat especial
    (72) param -> . empty
    (143) empty -> .

    ID              shift and go to state 82
    RPAREN          reduce using rule 143 (empty -> .)
    INT             reduce using rule 143 (empty -> .)
    FLOAT           reduce using rule 143 (empty -> .)
    CHAR            reduce using rule 143 (empty -> .)

    param                          shift and go to state 191
    empty                          shift and go to state 83

state 155

    (69) param -> ID mat COMMA . param
    (65) param -> . ID agregarParametro
    (66) param -> . ID COMMA param agregarParametro
    (67) param -> . ID arr
    (68) param -> . ID arr COMMA param
    (69) param -> . ID mat COMMA param
    (70) param -> . ID mat
    (71) param -> . ID mat especial
    (72) param -> . empty
    (143) empty -> .

    ID              shift and go to state 82
    RPAREN          reduce using rule 143 (empty -> .)
    INT             reduce using rule 143 (empty -> .)
    FLOAT           reduce using rule 143 (empty -> .)
    CHAR            reduce using rule 143 (empty -> .)

    param                          shift and go to state 192
    empty                          shift and go to state 83

state 156

    (71) param -> ID mat especial .

    RPAREN          reduce using rule 71 (param -> ID mat especial .)
    INT             reduce using rule 71 (param -> ID mat especial .)
    FLOAT           reduce using rule 71 (param -> ID mat especial .)
    CHAR            reduce using rule 71 (param -> ID mat especial .)


state 157

    (43) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN . SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion

    SEMICOLON       shift and go to state 193


state 158

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN . SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    SEMICOLON       shift and go to state 194


state 159

    (33) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI . RBRACKET
    (136) pexp -> CTEI . guardaCTE
    (96) guardaCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 195
    MUL             reduce using rule 96 (guardaCTE -> .)
    DIV             reduce using rule 96 (guardaCTE -> .)
    PLUS            reduce using rule 96 (guardaCTE -> .)
    MINUS           reduce using rule 96 (guardaCTE -> .)
    GT              reduce using rule 96 (guardaCTE -> .)
    LT              reduce using rule 96 (guardaCTE -> .)
    GTE             reduce using rule 96 (guardaCTE -> .)
    LTE             reduce using rule 96 (guardaCTE -> .)
    NE              reduce using rule 96 (guardaCTE -> .)
    COMPARE         reduce using rule 96 (guardaCTE -> .)
    AND             reduce using rule 96 (guardaCTE -> .)
    OR              reduce using rule 96 (guardaCTE -> .)

  ! RBRACKET        [ reduce using rule 96 (guardaCTE -> .) ]

    guardaCTE                      shift and go to state 90

state 160

    (36) mat -> LBRACKET CTEI RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 196


state 161

    (34) mat -> LBRACKET exp RBRACKET LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 197


state 162

    (35) mat -> LBRACKET exp RBRACKET LBRACKET CTEI . RBRACKET
    (136) pexp -> CTEI . guardaCTE
    (96) guardaCTE -> .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 198
    MUL             reduce using rule 96 (guardaCTE -> .)
    DIV             reduce using rule 96 (guardaCTE -> .)
    PLUS            reduce using rule 96 (guardaCTE -> .)
    MINUS           reduce using rule 96 (guardaCTE -> .)
    GT              reduce using rule 96 (guardaCTE -> .)
    LT              reduce using rule 96 (guardaCTE -> .)
    GTE             reduce using rule 96 (guardaCTE -> .)
    LTE             reduce using rule 96 (guardaCTE -> .)
    NE              reduce using rule 96 (guardaCTE -> .)
    COMPARE         reduce using rule 96 (guardaCTE -> .)
    AND             reduce using rule 96 (guardaCTE -> .)
    OR              reduce using rule 96 (guardaCTE -> .)

  ! RBRACKET        [ reduce using rule 96 (guardaCTE -> .) ]

    guardaCTE                      shift and go to state 90

state 163

    (113) exp -> nexp OR addOperadorName nexp . cuadruploOr
    (114) cuadruploOr -> .

    RBRACKET        reduce using rule 114 (cuadruploOr -> .)
    RPAREN          reduce using rule 114 (cuadruploOr -> .)
    COMMA           reduce using rule 114 (cuadruploOr -> .)
    SEMICOLON       reduce using rule 114 (cuadruploOr -> .)
    TO              reduce using rule 114 (cuadruploOr -> .)

    cuadruploOr                    shift and go to state 199

state 164

    (116) nexp -> compexp AND addOperadorName compexp . cuadruploAnd
    (117) cuadruploAnd -> .

    OR              reduce using rule 117 (cuadruploAnd -> .)
    RBRACKET        reduce using rule 117 (cuadruploAnd -> .)
    RPAREN          reduce using rule 117 (cuadruploAnd -> .)
    COMMA           reduce using rule 117 (cuadruploAnd -> .)
    SEMICOLON       reduce using rule 117 (cuadruploAnd -> .)
    TO              reduce using rule 117 (cuadruploAnd -> .)

    cuadruploAnd                   shift and go to state 200

state 165

    (120) compexp1 -> sumexp GT addOperadorName sumexp . cuadruploComparacion
    (126) cuadruploComparacion -> .

    CTEI            reduce using rule 126 (cuadruploComparacion -> .)
    CTEF            reduce using rule 126 (cuadruploComparacion -> .)
    CTEC            reduce using rule 126 (cuadruploComparacion -> .)
    CTESTRING       reduce using rule 126 (cuadruploComparacion -> .)
    LPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    ID              reduce using rule 126 (cuadruploComparacion -> .)
    PLUS            reduce using rule 126 (cuadruploComparacion -> .)
    MINUS           reduce using rule 126 (cuadruploComparacion -> .)
    MUL             reduce using rule 126 (cuadruploComparacion -> .)
    DIV             reduce using rule 126 (cuadruploComparacion -> .)
    AND             reduce using rule 126 (cuadruploComparacion -> .)
    OR              reduce using rule 126 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 126 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    COMMA           reduce using rule 126 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 126 (cuadruploComparacion -> .)
    TO              reduce using rule 126 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 201

state 166

    (121) compexp1 -> sumexp LT addOperadorName sumexp . cuadruploComparacion
    (126) cuadruploComparacion -> .

    CTEI            reduce using rule 126 (cuadruploComparacion -> .)
    CTEF            reduce using rule 126 (cuadruploComparacion -> .)
    CTEC            reduce using rule 126 (cuadruploComparacion -> .)
    CTESTRING       reduce using rule 126 (cuadruploComparacion -> .)
    LPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    ID              reduce using rule 126 (cuadruploComparacion -> .)
    PLUS            reduce using rule 126 (cuadruploComparacion -> .)
    MINUS           reduce using rule 126 (cuadruploComparacion -> .)
    MUL             reduce using rule 126 (cuadruploComparacion -> .)
    DIV             reduce using rule 126 (cuadruploComparacion -> .)
    AND             reduce using rule 126 (cuadruploComparacion -> .)
    OR              reduce using rule 126 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 126 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    COMMA           reduce using rule 126 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 126 (cuadruploComparacion -> .)
    TO              reduce using rule 126 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 202

state 167

    (122) compexp1 -> sumexp GTE addOperadorName sumexp . cuadruploComparacion
    (126) cuadruploComparacion -> .

    CTEI            reduce using rule 126 (cuadruploComparacion -> .)
    CTEF            reduce using rule 126 (cuadruploComparacion -> .)
    CTEC            reduce using rule 126 (cuadruploComparacion -> .)
    CTESTRING       reduce using rule 126 (cuadruploComparacion -> .)
    LPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    ID              reduce using rule 126 (cuadruploComparacion -> .)
    PLUS            reduce using rule 126 (cuadruploComparacion -> .)
    MINUS           reduce using rule 126 (cuadruploComparacion -> .)
    MUL             reduce using rule 126 (cuadruploComparacion -> .)
    DIV             reduce using rule 126 (cuadruploComparacion -> .)
    AND             reduce using rule 126 (cuadruploComparacion -> .)
    OR              reduce using rule 126 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 126 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    COMMA           reduce using rule 126 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 126 (cuadruploComparacion -> .)
    TO              reduce using rule 126 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 203

state 168

    (123) compexp1 -> sumexp LTE addOperadorName sumexp . cuadruploComparacion
    (126) cuadruploComparacion -> .

    CTEI            reduce using rule 126 (cuadruploComparacion -> .)
    CTEF            reduce using rule 126 (cuadruploComparacion -> .)
    CTEC            reduce using rule 126 (cuadruploComparacion -> .)
    CTESTRING       reduce using rule 126 (cuadruploComparacion -> .)
    LPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    ID              reduce using rule 126 (cuadruploComparacion -> .)
    PLUS            reduce using rule 126 (cuadruploComparacion -> .)
    MINUS           reduce using rule 126 (cuadruploComparacion -> .)
    MUL             reduce using rule 126 (cuadruploComparacion -> .)
    DIV             reduce using rule 126 (cuadruploComparacion -> .)
    AND             reduce using rule 126 (cuadruploComparacion -> .)
    OR              reduce using rule 126 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 126 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    COMMA           reduce using rule 126 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 126 (cuadruploComparacion -> .)
    TO              reduce using rule 126 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 204

state 169

    (124) compexp1 -> sumexp NE addOperadorName sumexp . cuadruploComparacion
    (126) cuadruploComparacion -> .

    CTEI            reduce using rule 126 (cuadruploComparacion -> .)
    CTEF            reduce using rule 126 (cuadruploComparacion -> .)
    CTEC            reduce using rule 126 (cuadruploComparacion -> .)
    CTESTRING       reduce using rule 126 (cuadruploComparacion -> .)
    LPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    ID              reduce using rule 126 (cuadruploComparacion -> .)
    PLUS            reduce using rule 126 (cuadruploComparacion -> .)
    MINUS           reduce using rule 126 (cuadruploComparacion -> .)
    MUL             reduce using rule 126 (cuadruploComparacion -> .)
    DIV             reduce using rule 126 (cuadruploComparacion -> .)
    AND             reduce using rule 126 (cuadruploComparacion -> .)
    OR              reduce using rule 126 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 126 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    COMMA           reduce using rule 126 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 126 (cuadruploComparacion -> .)
    TO              reduce using rule 126 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 205

state 170

    (125) compexp1 -> sumexp COMPARE addOperadorName sumexp . cuadruploComparacion
    (126) cuadruploComparacion -> .

    CTEI            reduce using rule 126 (cuadruploComparacion -> .)
    CTEF            reduce using rule 126 (cuadruploComparacion -> .)
    CTEC            reduce using rule 126 (cuadruploComparacion -> .)
    CTESTRING       reduce using rule 126 (cuadruploComparacion -> .)
    LPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    ID              reduce using rule 126 (cuadruploComparacion -> .)
    PLUS            reduce using rule 126 (cuadruploComparacion -> .)
    MINUS           reduce using rule 126 (cuadruploComparacion -> .)
    MUL             reduce using rule 126 (cuadruploComparacion -> .)
    DIV             reduce using rule 126 (cuadruploComparacion -> .)
    AND             reduce using rule 126 (cuadruploComparacion -> .)
    OR              reduce using rule 126 (cuadruploComparacion -> .)
    RBRACKET        reduce using rule 126 (cuadruploComparacion -> .)
    RPAREN          reduce using rule 126 (cuadruploComparacion -> .)
    COMMA           reduce using rule 126 (cuadruploComparacion -> .)
    SEMICOLON       reduce using rule 126 (cuadruploComparacion -> .)
    TO              reduce using rule 126 (cuadruploComparacion -> .)

    cuadruploComparacion           shift and go to state 206

state 171

    (128) sumexp -> mulexp PLUS addOperadorName mulexp . cuadruploSuma
    (130) cuadruploSuma -> .

    GT              reduce using rule 130 (cuadruploSuma -> .)
    LT              reduce using rule 130 (cuadruploSuma -> .)
    GTE             reduce using rule 130 (cuadruploSuma -> .)
    LTE             reduce using rule 130 (cuadruploSuma -> .)
    NE              reduce using rule 130 (cuadruploSuma -> .)
    COMPARE         reduce using rule 130 (cuadruploSuma -> .)
    AND             reduce using rule 130 (cuadruploSuma -> .)
    OR              reduce using rule 130 (cuadruploSuma -> .)
    RBRACKET        reduce using rule 130 (cuadruploSuma -> .)
    RPAREN          reduce using rule 130 (cuadruploSuma -> .)
    COMMA           reduce using rule 130 (cuadruploSuma -> .)
    SEMICOLON       reduce using rule 130 (cuadruploSuma -> .)
    TO              reduce using rule 130 (cuadruploSuma -> .)
    CTEI            reduce using rule 130 (cuadruploSuma -> .)
    CTEF            reduce using rule 130 (cuadruploSuma -> .)
    CTEC            reduce using rule 130 (cuadruploSuma -> .)
    CTESTRING       reduce using rule 130 (cuadruploSuma -> .)
    LPAREN          reduce using rule 130 (cuadruploSuma -> .)
    ID              reduce using rule 130 (cuadruploSuma -> .)
    PLUS            reduce using rule 130 (cuadruploSuma -> .)
    MINUS           reduce using rule 130 (cuadruploSuma -> .)
    MUL             reduce using rule 130 (cuadruploSuma -> .)
    DIV             reduce using rule 130 (cuadruploSuma -> .)

    cuadruploSuma                  shift and go to state 207

state 172

    (129) sumexp -> mulexp MINUS addOperadorName mulexp . cuadruploSuma
    (130) cuadruploSuma -> .

    GT              reduce using rule 130 (cuadruploSuma -> .)
    LT              reduce using rule 130 (cuadruploSuma -> .)
    GTE             reduce using rule 130 (cuadruploSuma -> .)
    LTE             reduce using rule 130 (cuadruploSuma -> .)
    NE              reduce using rule 130 (cuadruploSuma -> .)
    COMPARE         reduce using rule 130 (cuadruploSuma -> .)
    AND             reduce using rule 130 (cuadruploSuma -> .)
    OR              reduce using rule 130 (cuadruploSuma -> .)
    RBRACKET        reduce using rule 130 (cuadruploSuma -> .)
    RPAREN          reduce using rule 130 (cuadruploSuma -> .)
    COMMA           reduce using rule 130 (cuadruploSuma -> .)
    SEMICOLON       reduce using rule 130 (cuadruploSuma -> .)
    TO              reduce using rule 130 (cuadruploSuma -> .)
    CTEI            reduce using rule 130 (cuadruploSuma -> .)
    CTEF            reduce using rule 130 (cuadruploSuma -> .)
    CTEC            reduce using rule 130 (cuadruploSuma -> .)
    CTESTRING       reduce using rule 130 (cuadruploSuma -> .)
    LPAREN          reduce using rule 130 (cuadruploSuma -> .)
    ID              reduce using rule 130 (cuadruploSuma -> .)
    PLUS            reduce using rule 130 (cuadruploSuma -> .)
    MINUS           reduce using rule 130 (cuadruploSuma -> .)
    MUL             reduce using rule 130 (cuadruploSuma -> .)
    DIV             reduce using rule 130 (cuadruploSuma -> .)

    cuadruploSuma                  shift and go to state 208

state 173

    (132) mulexp -> pexp MUL addOperadorName pexp . cuadruploMultiplicacion
    (134) cuadruploMultiplicacion -> .

    PLUS            reduce using rule 134 (cuadruploMultiplicacion -> .)
    MINUS           reduce using rule 134 (cuadruploMultiplicacion -> .)
    GT              reduce using rule 134 (cuadruploMultiplicacion -> .)
    LT              reduce using rule 134 (cuadruploMultiplicacion -> .)
    GTE             reduce using rule 134 (cuadruploMultiplicacion -> .)
    LTE             reduce using rule 134 (cuadruploMultiplicacion -> .)
    NE              reduce using rule 134 (cuadruploMultiplicacion -> .)
    COMPARE         reduce using rule 134 (cuadruploMultiplicacion -> .)
    AND             reduce using rule 134 (cuadruploMultiplicacion -> .)
    OR              reduce using rule 134 (cuadruploMultiplicacion -> .)
    RBRACKET        reduce using rule 134 (cuadruploMultiplicacion -> .)
    RPAREN          reduce using rule 134 (cuadruploMultiplicacion -> .)
    COMMA           reduce using rule 134 (cuadruploMultiplicacion -> .)
    SEMICOLON       reduce using rule 134 (cuadruploMultiplicacion -> .)
    TO              reduce using rule 134 (cuadruploMultiplicacion -> .)
    CTEI            reduce using rule 134 (cuadruploMultiplicacion -> .)
    CTEF            reduce using rule 134 (cuadruploMultiplicacion -> .)
    CTEC            reduce using rule 134 (cuadruploMultiplicacion -> .)
    CTESTRING       reduce using rule 134 (cuadruploMultiplicacion -> .)
    LPAREN          reduce using rule 134 (cuadruploMultiplicacion -> .)
    ID              reduce using rule 134 (cuadruploMultiplicacion -> .)
    MUL             reduce using rule 134 (cuadruploMultiplicacion -> .)
    DIV             reduce using rule 134 (cuadruploMultiplicacion -> .)

    cuadruploMultiplicacion        shift and go to state 209

state 174

    (133) mulexp -> pexp DIV addOperadorName pexp . cuadruploMultiplicacion
    (134) cuadruploMultiplicacion -> .

    PLUS            reduce using rule 134 (cuadruploMultiplicacion -> .)
    MINUS           reduce using rule 134 (cuadruploMultiplicacion -> .)
    GT              reduce using rule 134 (cuadruploMultiplicacion -> .)
    LT              reduce using rule 134 (cuadruploMultiplicacion -> .)
    GTE             reduce using rule 134 (cuadruploMultiplicacion -> .)
    LTE             reduce using rule 134 (cuadruploMultiplicacion -> .)
    NE              reduce using rule 134 (cuadruploMultiplicacion -> .)
    COMPARE         reduce using rule 134 (cuadruploMultiplicacion -> .)
    AND             reduce using rule 134 (cuadruploMultiplicacion -> .)
    OR              reduce using rule 134 (cuadruploMultiplicacion -> .)
    RBRACKET        reduce using rule 134 (cuadruploMultiplicacion -> .)
    RPAREN          reduce using rule 134 (cuadruploMultiplicacion -> .)
    COMMA           reduce using rule 134 (cuadruploMultiplicacion -> .)
    SEMICOLON       reduce using rule 134 (cuadruploMultiplicacion -> .)
    TO              reduce using rule 134 (cuadruploMultiplicacion -> .)
    CTEI            reduce using rule 134 (cuadruploMultiplicacion -> .)
    CTEF            reduce using rule 134 (cuadruploMultiplicacion -> .)
    CTEC            reduce using rule 134 (cuadruploMultiplicacion -> .)
    CTESTRING       reduce using rule 134 (cuadruploMultiplicacion -> .)
    LPAREN          reduce using rule 134 (cuadruploMultiplicacion -> .)
    ID              reduce using rule 134 (cuadruploMultiplicacion -> .)
    MUL             reduce using rule 134 (cuadruploMultiplicacion -> .)
    DIV             reduce using rule 134 (cuadruploMultiplicacion -> .)

    cuadruploMultiplicacion        shift and go to state 210

state 175

    (76) llamada -> ID llamadaEra LPAREN auxiliarExp . cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (81) cuadruploParametros -> .

    RPAREN          reduce using rule 81 (cuadruploParametros -> .)

    cuadruploParametros            shift and go to state 211

state 176

    (78) auxiliarExp -> exp .
    (79) auxiliarExp -> exp . COMMA auxiliarExp

    RPAREN          reduce using rule 78 (auxiliarExp -> exp .)
    COMMA           shift and go to state 212


state 177

    (80) auxiliarExp -> empty .
    (26) var1 -> empty .

  ! reduce/reduce conflict for RPAREN resolved using rule 26 (var1 -> empty .)
    MUL             reduce using rule 26 (var1 -> empty .)
    DIV             reduce using rule 26 (var1 -> empty .)
    PLUS            reduce using rule 26 (var1 -> empty .)
    MINUS           reduce using rule 26 (var1 -> empty .)
    GT              reduce using rule 26 (var1 -> empty .)
    LT              reduce using rule 26 (var1 -> empty .)
    GTE             reduce using rule 26 (var1 -> empty .)
    LTE             reduce using rule 26 (var1 -> empty .)
    NE              reduce using rule 26 (var1 -> empty .)
    COMPARE         reduce using rule 26 (var1 -> empty .)
    AND             reduce using rule 26 (var1 -> empty .)
    OR              reduce using rule 26 (var1 -> empty .)
    COMMA           reduce using rule 26 (var1 -> empty .)
    RPAREN          reduce using rule 26 (var1 -> empty .)

  ! RPAREN          [ reduce using rule 80 (auxiliarExp -> empty .) ]


state 178

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY . END

    END             shift and go to state 213


state 179

    (50) estatutos -> estatutos_2 estatutos .

    RCURLY          reduce using rule 50 (estatutos -> estatutos_2 estatutos .)
    RETURN          reduce using rule 50 (estatutos -> estatutos_2 estatutos .)


state 180

    (52) estatutos_2 -> asignacion SEMICOLON .

    ID              reduce using rule 52 (estatutos_2 -> asignacion SEMICOLON .)
    READ            reduce using rule 52 (estatutos_2 -> asignacion SEMICOLON .)
    PRINT           reduce using rule 52 (estatutos_2 -> asignacion SEMICOLON .)
    FOR             reduce using rule 52 (estatutos_2 -> asignacion SEMICOLON .)
    IF              reduce using rule 52 (estatutos_2 -> asignacion SEMICOLON .)
    WHILE           reduce using rule 52 (estatutos_2 -> asignacion SEMICOLON .)
    RCURLY          reduce using rule 52 (estatutos_2 -> asignacion SEMICOLON .)
    RETURN          reduce using rule 52 (estatutos_2 -> asignacion SEMICOLON .)


state 181

    (53) estatutos_2 -> llamada SEMICOLON .

    ID              reduce using rule 53 (estatutos_2 -> llamada SEMICOLON .)
    READ            reduce using rule 53 (estatutos_2 -> llamada SEMICOLON .)
    PRINT           reduce using rule 53 (estatutos_2 -> llamada SEMICOLON .)
    FOR             reduce using rule 53 (estatutos_2 -> llamada SEMICOLON .)
    IF              reduce using rule 53 (estatutos_2 -> llamada SEMICOLON .)
    WHILE           reduce using rule 53 (estatutos_2 -> llamada SEMICOLON .)
    RCURLY          reduce using rule 53 (estatutos_2 -> llamada SEMICOLON .)
    RETURN          reduce using rule 53 (estatutos_2 -> llamada SEMICOLON .)


state 182

    (54) estatutos_2 -> lectura SEMICOLON .

    ID              reduce using rule 54 (estatutos_2 -> lectura SEMICOLON .)
    READ            reduce using rule 54 (estatutos_2 -> lectura SEMICOLON .)
    PRINT           reduce using rule 54 (estatutos_2 -> lectura SEMICOLON .)
    FOR             reduce using rule 54 (estatutos_2 -> lectura SEMICOLON .)
    IF              reduce using rule 54 (estatutos_2 -> lectura SEMICOLON .)
    WHILE           reduce using rule 54 (estatutos_2 -> lectura SEMICOLON .)
    RCURLY          reduce using rule 54 (estatutos_2 -> lectura SEMICOLON .)
    RETURN          reduce using rule 54 (estatutos_2 -> lectura SEMICOLON .)


state 183

    (55) estatutos_2 -> escritura SEMICOLON .

    ID              reduce using rule 55 (estatutos_2 -> escritura SEMICOLON .)
    READ            reduce using rule 55 (estatutos_2 -> escritura SEMICOLON .)
    PRINT           reduce using rule 55 (estatutos_2 -> escritura SEMICOLON .)
    FOR             reduce using rule 55 (estatutos_2 -> escritura SEMICOLON .)
    IF              reduce using rule 55 (estatutos_2 -> escritura SEMICOLON .)
    WHILE           reduce using rule 55 (estatutos_2 -> escritura SEMICOLON .)
    RCURLY          reduce using rule 55 (estatutos_2 -> escritura SEMICOLON .)
    RETURN          reduce using rule 55 (estatutos_2 -> escritura SEMICOLON .)


state 184

    (59) asignacion -> ID guardaVariable_2 . EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> ID guardaVariable_2 . arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> ID guardaVariable_2 . mat EQUALS addOperadorName exp cuadruploAsignacion
    (31) arr -> . LBRACKET CTEI RBRACKET
    (32) arr -> . LBRACKET exp RBRACKET
    (33) mat -> . LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET
    (34) mat -> . LBRACKET exp RBRACKET LBRACKET exp RBRACKET
    (35) mat -> . LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET
    (36) mat -> . LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET

    EQUALS          shift and go to state 214
    LBRACKET        shift and go to state 52

    arr                            shift and go to state 215
    mat                            shift and go to state 216

state 185

    (84) lectura -> READ operadorRead . LPAREN exp cuadruploRead RPAREN

    LPAREN          shift and go to state 217


state 186

    (87) escritura -> PRINT LPAREN . operadorPrint escritura1 cuadruploPrint RPAREN
    (94) operadorPrint -> .

    COMILLA         reduce using rule 94 (operadorPrint -> .)
    CTEI            reduce using rule 94 (operadorPrint -> .)
    CTEF            reduce using rule 94 (operadorPrint -> .)
    CTEC            reduce using rule 94 (operadorPrint -> .)
    CTESTRING       reduce using rule 94 (operadorPrint -> .)
    LPAREN          reduce using rule 94 (operadorPrint -> .)
    ID              reduce using rule 94 (operadorPrint -> .)
    RPAREN          reduce using rule 94 (operadorPrint -> .)
    COMMA           reduce using rule 94 (operadorPrint -> .)
    OR              reduce using rule 94 (operadorPrint -> .)
    AND             reduce using rule 94 (operadorPrint -> .)
    GT              reduce using rule 94 (operadorPrint -> .)
    LT              reduce using rule 94 (operadorPrint -> .)
    GTE             reduce using rule 94 (operadorPrint -> .)
    LTE             reduce using rule 94 (operadorPrint -> .)
    NE              reduce using rule 94 (operadorPrint -> .)
    COMPARE         reduce using rule 94 (operadorPrint -> .)
    PLUS            reduce using rule 94 (operadorPrint -> .)
    MINUS           reduce using rule 94 (operadorPrint -> .)
    MUL             reduce using rule 94 (operadorPrint -> .)
    DIV             reduce using rule 94 (operadorPrint -> .)

    operadorPrint                  shift and go to state 218

state 187

    (97) for -> FOR operadorFor . LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor

    LPAREN          shift and go to state 219


state 188

    (102) if -> IF LPAREN . exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)

    exp                            shift and go to state 220
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 189

    (108) while -> WHILE operadorWhile . LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    LPAREN          shift and go to state 221


state 190

    (66) param -> ID COMMA param agregarParametro .

    RPAREN          reduce using rule 66 (param -> ID COMMA param agregarParametro .)
    INT             reduce using rule 66 (param -> ID COMMA param agregarParametro .)
    FLOAT           reduce using rule 66 (param -> ID COMMA param agregarParametro .)
    CHAR            reduce using rule 66 (param -> ID COMMA param agregarParametro .)


state 191

    (68) param -> ID arr COMMA param .

    RPAREN          reduce using rule 68 (param -> ID arr COMMA param .)
    INT             reduce using rule 68 (param -> ID arr COMMA param .)
    FLOAT           reduce using rule 68 (param -> ID arr COMMA param .)
    CHAR            reduce using rule 68 (param -> ID arr COMMA param .)


state 192

    (69) param -> ID mat COMMA param .

    RPAREN          reduce using rule 69 (param -> ID mat COMMA param .)
    INT             reduce using rule 69 (param -> ID mat COMMA param .)
    FLOAT           reduce using rule 69 (param -> ID mat COMMA param .)
    CHAR            reduce using rule 69 (param -> ID mat COMMA param .)


state 193

    (43) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON . LCURLY var funcionGOTO estatutos RCURLY endFuncion

    LCURLY          shift and go to state 222


state 194

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON . LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    LCURLY          shift and go to state 223


state 195

    (33) mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CTESTRING       reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 33 (mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET .)


state 196

    (36) mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CTESTRING       reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 36 (mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET .)


state 197

    (34) mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .

    COMMA           reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TRANSPUESTA     reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INVERSA         reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DETERMINANTE    reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    SEMICOLON       reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MUL             reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    DIV             reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    PLUS            reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    MINUS           reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GT              reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LT              reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    GTE             reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LTE             reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    NE              reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    COMPARE         reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    AND             reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    OR              reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RBRACKET        reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    RPAREN          reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    TO              reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEI            reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEF            reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTEC            reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CTESTRING       reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    LPAREN          reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    ID              reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    INT             reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    FLOAT           reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    CHAR            reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)
    EQUALS          reduce using rule 34 (mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET .)


state 198

    (35) mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .

    COMMA           reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TRANSPUESTA     reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INVERSA         reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DETERMINANTE    reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    SEMICOLON       reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MUL             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    DIV             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    PLUS            reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    MINUS           reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GT              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LT              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    GTE             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LTE             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    NE              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    COMPARE         reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    AND             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    OR              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RBRACKET        reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    RPAREN          reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    TO              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEI            reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEF            reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTEC            reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CTESTRING       reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    LPAREN          reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    ID              reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    INT             reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    FLOAT           reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    CHAR            reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)
    EQUALS          reduce using rule 35 (mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET .)


state 199

    (113) exp -> nexp OR addOperadorName nexp cuadruploOr .

    RBRACKET        reduce using rule 113 (exp -> nexp OR addOperadorName nexp cuadruploOr .)
    RPAREN          reduce using rule 113 (exp -> nexp OR addOperadorName nexp cuadruploOr .)
    COMMA           reduce using rule 113 (exp -> nexp OR addOperadorName nexp cuadruploOr .)
    SEMICOLON       reduce using rule 113 (exp -> nexp OR addOperadorName nexp cuadruploOr .)
    TO              reduce using rule 113 (exp -> nexp OR addOperadorName nexp cuadruploOr .)


state 200

    (116) nexp -> compexp AND addOperadorName compexp cuadruploAnd .

    OR              reduce using rule 116 (nexp -> compexp AND addOperadorName compexp cuadruploAnd .)
    RBRACKET        reduce using rule 116 (nexp -> compexp AND addOperadorName compexp cuadruploAnd .)
    RPAREN          reduce using rule 116 (nexp -> compexp AND addOperadorName compexp cuadruploAnd .)
    COMMA           reduce using rule 116 (nexp -> compexp AND addOperadorName compexp cuadruploAnd .)
    SEMICOLON       reduce using rule 116 (nexp -> compexp AND addOperadorName compexp cuadruploAnd .)
    TO              reduce using rule 116 (nexp -> compexp AND addOperadorName compexp cuadruploAnd .)


state 201

    (120) compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .

    CTEI            reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    CTEF            reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    CTEC            reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    CTESTRING       reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    LPAREN          reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    ID              reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    PLUS            reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    MINUS           reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    MUL             reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    DIV             reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 120 (compexp1 -> sumexp GT addOperadorName sumexp cuadruploComparacion .)


state 202

    (121) compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .

    CTEI            reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    CTEF            reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    CTEC            reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    CTESTRING       reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    LPAREN          reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    ID              reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    PLUS            reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    MINUS           reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    MUL             reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    DIV             reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 121 (compexp1 -> sumexp LT addOperadorName sumexp cuadruploComparacion .)


state 203

    (122) compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .

    CTEI            reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    CTEF            reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    CTEC            reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    CTESTRING       reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    LPAREN          reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    ID              reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    PLUS            reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    MINUS           reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    MUL             reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    DIV             reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 122 (compexp1 -> sumexp GTE addOperadorName sumexp cuadruploComparacion .)


state 204

    (123) compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .

    CTEI            reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    CTEF            reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    CTEC            reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    CTESTRING       reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    LPAREN          reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    ID              reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    PLUS            reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    MINUS           reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    MUL             reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    DIV             reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 123 (compexp1 -> sumexp LTE addOperadorName sumexp cuadruploComparacion .)


state 205

    (124) compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .

    CTEI            reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    CTEF            reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    CTEC            reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    CTESTRING       reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    LPAREN          reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    ID              reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    PLUS            reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    MINUS           reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    MUL             reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    DIV             reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 124 (compexp1 -> sumexp NE addOperadorName sumexp cuadruploComparacion .)


state 206

    (125) compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .

    CTEI            reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    CTEF            reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    CTEC            reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    CTESTRING       reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    LPAREN          reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    ID              reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    PLUS            reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    MINUS           reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    MUL             reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    DIV             reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    AND             reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    OR              reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    RBRACKET        reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    RPAREN          reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    COMMA           reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    SEMICOLON       reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)
    TO              reduce using rule 125 (compexp1 -> sumexp COMPARE addOperadorName sumexp cuadruploComparacion .)


state 207

    (128) sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .

    GT              reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    LT              reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    GTE             reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    LTE             reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    NE              reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    COMPARE         reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    AND             reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    OR              reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    RBRACKET        reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    RPAREN          reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    COMMA           reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    SEMICOLON       reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    TO              reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    CTEI            reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    CTEF            reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    CTEC            reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    CTESTRING       reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    LPAREN          reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    ID              reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    PLUS            reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    MINUS           reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    MUL             reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)
    DIV             reduce using rule 128 (sumexp -> mulexp PLUS addOperadorName mulexp cuadruploSuma .)


state 208

    (129) sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .

    GT              reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    LT              reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    GTE             reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    LTE             reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    NE              reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    COMPARE         reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    AND             reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    OR              reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    RBRACKET        reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    RPAREN          reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    COMMA           reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    SEMICOLON       reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    TO              reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    CTEI            reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    CTEF            reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    CTEC            reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    CTESTRING       reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    LPAREN          reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    ID              reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    PLUS            reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    MINUS           reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    MUL             reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)
    DIV             reduce using rule 129 (sumexp -> mulexp MINUS addOperadorName mulexp cuadruploSuma .)


state 209

    (132) mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .

    PLUS            reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    MINUS           reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    GT              reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    LT              reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    GTE             reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    LTE             reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    NE              reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    COMPARE         reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    AND             reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    OR              reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    RBRACKET        reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    RPAREN          reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    COMMA           reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    SEMICOLON       reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    TO              reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    CTEI            reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    CTEF            reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    CTEC            reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    CTESTRING       reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    LPAREN          reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    ID              reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    MUL             reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)
    DIV             reduce using rule 132 (mulexp -> pexp MUL addOperadorName pexp cuadruploMultiplicacion .)


state 210

    (133) mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .

    PLUS            reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    MINUS           reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    GT              reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    LT              reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    GTE             reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    LTE             reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    NE              reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    COMPARE         reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    AND             reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    OR              reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    RBRACKET        reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    RPAREN          reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    COMMA           reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    SEMICOLON       reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    TO              reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    CTEI            reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    CTEF            reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    CTEC            reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    CTESTRING       reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    LPAREN          reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    ID              reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    MUL             reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)
    DIV             reduce using rule 133 (mulexp -> pexp DIV addOperadorName pexp cuadruploMultiplicacion .)


state 211

    (76) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros . RPAREN cuadruploGoSub endProcesoLlena

    RPAREN          shift and go to state 224


state 212

    (79) auxiliarExp -> exp COMMA . auxiliarExp
    (78) auxiliarExp -> . exp
    (79) auxiliarExp -> . exp COMMA auxiliarExp
    (80) auxiliarExp -> . empty
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (143) empty -> .
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena

    RPAREN          reduce using rule 143 (empty -> .)
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79

    exp                            shift and go to state 176
    auxiliarExp                    shift and go to state 225
    empty                          shift and go to state 177
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77

state 213

    (7) main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END .

    $end            reduce using rule 7 (main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END .)


state 214

    (59) asignacion -> ID guardaVariable_2 EQUALS . addOperadorName exp cuadruploAsignacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    GT              reduce using rule 63 (addOperadorName -> .)
    LT              reduce using rule 63 (addOperadorName -> .)
    GTE             reduce using rule 63 (addOperadorName -> .)
    LTE             reduce using rule 63 (addOperadorName -> .)
    NE              reduce using rule 63 (addOperadorName -> .)
    COMPARE         reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 226

state 215

    (60) asignacion -> ID guardaVariable_2 arr . EQUALS addOperadorName exp cuadruploAsignacion

    EQUALS          shift and go to state 227


state 216

    (61) asignacion -> ID guardaVariable_2 mat . EQUALS addOperadorName exp cuadruploAsignacion

    EQUALS          shift and go to state 228


state 217

    (84) lectura -> READ operadorRead LPAREN . exp cuadruploRead RPAREN
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)

    exp                            shift and go to state 229
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 218

    (87) escritura -> PRINT LPAREN operadorPrint . escritura1 cuadruploPrint RPAREN
    (88) escritura1 -> . escritura2 COMMA escritura2
    (89) escritura1 -> . escritura2
    (90) escritura2 -> . COMILLA CTESTRING COMILLA
    (91) escritura2 -> . CTEI guardaCTE cuadruploPrint
    (92) escritura2 -> . CTEF guardaCTE cuadruploPrint
    (93) escritura2 -> . exp
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    COMILLA         shift and go to state 232
    CTEI            shift and go to state 233
    CTEF            shift and go to state 234
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    COMMA           reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)

    escritura1                     shift and go to state 230
    escritura2                     shift and go to state 231
    exp                            shift and go to state 235
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 219

    (97) for -> FOR operadorFor LPAREN . for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (98) for1 -> . FROM asignacion TO exp

    FROM            shift and go to state 237

    for1                           shift and go to state 236

state 220

    (102) if -> IF LPAREN exp . RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf

    RPAREN          shift and go to state 238


state 221

    (108) while -> WHILE operadorWhile LPAREN . exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)

    exp                            shift and go to state 239
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 222

    (43) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY . var funcionGOTO estatutos RCURLY endFuncion
    (14) var -> . vars
    (15) var -> . empty
    (16) vars -> . VAR var_2
    (143) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RCURLY          reduce using rule 143 (empty -> .)

    var                            shift and go to state 240
    vars                           shift and go to state 9
    empty                          shift and go to state 10

state 223

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY . var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (14) var -> . vars
    (15) var -> . empty
    (16) vars -> . VAR var_2
    (143) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)

    var                            shift and go to state 241
    vars                           shift and go to state 9
    empty                          shift and go to state 10

state 224

    (76) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN . cuadruploGoSub endProcesoLlena
    (82) cuadruploGoSub -> .

    MUL             reduce using rule 82 (cuadruploGoSub -> .)
    DIV             reduce using rule 82 (cuadruploGoSub -> .)
    PLUS            reduce using rule 82 (cuadruploGoSub -> .)
    MINUS           reduce using rule 82 (cuadruploGoSub -> .)
    GT              reduce using rule 82 (cuadruploGoSub -> .)
    LT              reduce using rule 82 (cuadruploGoSub -> .)
    GTE             reduce using rule 82 (cuadruploGoSub -> .)
    LTE             reduce using rule 82 (cuadruploGoSub -> .)
    NE              reduce using rule 82 (cuadruploGoSub -> .)
    COMPARE         reduce using rule 82 (cuadruploGoSub -> .)
    AND             reduce using rule 82 (cuadruploGoSub -> .)
    OR              reduce using rule 82 (cuadruploGoSub -> .)
    RBRACKET        reduce using rule 82 (cuadruploGoSub -> .)
    RPAREN          reduce using rule 82 (cuadruploGoSub -> .)
    COMMA           reduce using rule 82 (cuadruploGoSub -> .)
    SEMICOLON       reduce using rule 82 (cuadruploGoSub -> .)
    TO              reduce using rule 82 (cuadruploGoSub -> .)
    CTEI            reduce using rule 82 (cuadruploGoSub -> .)
    CTEF            reduce using rule 82 (cuadruploGoSub -> .)
    CTEC            reduce using rule 82 (cuadruploGoSub -> .)
    CTESTRING       reduce using rule 82 (cuadruploGoSub -> .)
    LPAREN          reduce using rule 82 (cuadruploGoSub -> .)
    ID              reduce using rule 82 (cuadruploGoSub -> .)

    cuadruploGoSub                 shift and go to state 242

state 225

    (79) auxiliarExp -> exp COMMA auxiliarExp .

    RPAREN          reduce using rule 79 (auxiliarExp -> exp COMMA auxiliarExp .)


state 226

    (59) asignacion -> ID guardaVariable_2 EQUALS addOperadorName . exp cuadruploAsignacion
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

    exp                            shift and go to state 243
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 227

    (60) asignacion -> ID guardaVariable_2 arr EQUALS . addOperadorName exp cuadruploAsignacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    GT              reduce using rule 63 (addOperadorName -> .)
    LT              reduce using rule 63 (addOperadorName -> .)
    GTE             reduce using rule 63 (addOperadorName -> .)
    LTE             reduce using rule 63 (addOperadorName -> .)
    NE              reduce using rule 63 (addOperadorName -> .)
    COMPARE         reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 244

state 228

    (61) asignacion -> ID guardaVariable_2 mat EQUALS . addOperadorName exp cuadruploAsignacion
    (63) addOperadorName -> .

    CTEI            reduce using rule 63 (addOperadorName -> .)
    CTEF            reduce using rule 63 (addOperadorName -> .)
    CTEC            reduce using rule 63 (addOperadorName -> .)
    CTESTRING       reduce using rule 63 (addOperadorName -> .)
    LPAREN          reduce using rule 63 (addOperadorName -> .)
    ID              reduce using rule 63 (addOperadorName -> .)
    OR              reduce using rule 63 (addOperadorName -> .)
    AND             reduce using rule 63 (addOperadorName -> .)
    GT              reduce using rule 63 (addOperadorName -> .)
    LT              reduce using rule 63 (addOperadorName -> .)
    GTE             reduce using rule 63 (addOperadorName -> .)
    LTE             reduce using rule 63 (addOperadorName -> .)
    NE              reduce using rule 63 (addOperadorName -> .)
    COMPARE         reduce using rule 63 (addOperadorName -> .)
    PLUS            reduce using rule 63 (addOperadorName -> .)
    MINUS           reduce using rule 63 (addOperadorName -> .)
    MUL             reduce using rule 63 (addOperadorName -> .)
    DIV             reduce using rule 63 (addOperadorName -> .)
    SEMICOLON       reduce using rule 63 (addOperadorName -> .)
    TO              reduce using rule 63 (addOperadorName -> .)

    addOperadorName                shift and go to state 245

state 229

    (84) lectura -> READ operadorRead LPAREN exp . cuadruploRead RPAREN
    (86) cuadruploRead -> .

    RPAREN          reduce using rule 86 (cuadruploRead -> .)

    cuadruploRead                  shift and go to state 246

state 230

    (87) escritura -> PRINT LPAREN operadorPrint escritura1 . cuadruploPrint RPAREN
    (95) cuadruploPrint -> .

    RPAREN          reduce using rule 95 (cuadruploPrint -> .)

    cuadruploPrint                 shift and go to state 247

state 231

    (88) escritura1 -> escritura2 . COMMA escritura2
    (89) escritura1 -> escritura2 .

    COMMA           shift and go to state 248
    RPAREN          reduce using rule 89 (escritura1 -> escritura2 .)


state 232

    (90) escritura2 -> COMILLA . CTESTRING COMILLA

    CTESTRING       shift and go to state 249


state 233

    (91) escritura2 -> CTEI . guardaCTE cuadruploPrint
    (136) pexp -> CTEI . guardaCTE
    (96) guardaCTE -> .

    COMMA           reduce using rule 96 (guardaCTE -> .)
    RPAREN          reduce using rule 96 (guardaCTE -> .)
    MUL             reduce using rule 96 (guardaCTE -> .)
    DIV             reduce using rule 96 (guardaCTE -> .)
    PLUS            reduce using rule 96 (guardaCTE -> .)
    MINUS           reduce using rule 96 (guardaCTE -> .)
    GT              reduce using rule 96 (guardaCTE -> .)
    LT              reduce using rule 96 (guardaCTE -> .)
    GTE             reduce using rule 96 (guardaCTE -> .)
    LTE             reduce using rule 96 (guardaCTE -> .)
    NE              reduce using rule 96 (guardaCTE -> .)
    COMPARE         reduce using rule 96 (guardaCTE -> .)
    AND             reduce using rule 96 (guardaCTE -> .)
    OR              reduce using rule 96 (guardaCTE -> .)

    guardaCTE                      shift and go to state 250

state 234

    (92) escritura2 -> CTEF . guardaCTE cuadruploPrint
    (137) pexp -> CTEF . guardaCTE
    (96) guardaCTE -> .

    COMMA           reduce using rule 96 (guardaCTE -> .)
    RPAREN          reduce using rule 96 (guardaCTE -> .)
    MUL             reduce using rule 96 (guardaCTE -> .)
    DIV             reduce using rule 96 (guardaCTE -> .)
    PLUS            reduce using rule 96 (guardaCTE -> .)
    MINUS           reduce using rule 96 (guardaCTE -> .)
    GT              reduce using rule 96 (guardaCTE -> .)
    LT              reduce using rule 96 (guardaCTE -> .)
    GTE             reduce using rule 96 (guardaCTE -> .)
    LTE             reduce using rule 96 (guardaCTE -> .)
    NE              reduce using rule 96 (guardaCTE -> .)
    COMPARE         reduce using rule 96 (guardaCTE -> .)
    AND             reduce using rule 96 (guardaCTE -> .)
    OR              reduce using rule 96 (guardaCTE -> .)

    guardaCTE                      shift and go to state 251

state 235

    (93) escritura2 -> exp .

    COMMA           reduce using rule 93 (escritura2 -> exp .)
    RPAREN          reduce using rule 93 (escritura2 -> exp .)


state 236

    (97) for -> FOR operadorFor LPAREN for1 . RPAREN cuadruploFor LCURLY estatutos RCURLY endFor

    RPAREN          shift and go to state 252


state 237

    (98) for1 -> FROM . asignacion TO exp
    (59) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion

    ID              shift and go to state 254

    asignacion                     shift and go to state 253

state 238

    (102) if -> IF LPAREN exp RPAREN . cuadruploIf LCURLY estatutos RCURLY else endIf
    (103) cuadruploIf -> .

    LCURLY          reduce using rule 103 (cuadruploIf -> .)

    cuadruploIf                    shift and go to state 255

state 239

    (108) while -> WHILE operadorWhile LPAREN exp . RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RPAREN          shift and go to state 256


state 240

    (43) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var . funcionGOTO estatutos RCURLY endFuncion
    (46) funcionGOTO -> .

    ID              reduce using rule 46 (funcionGOTO -> .)
    READ            reduce using rule 46 (funcionGOTO -> .)
    PRINT           reduce using rule 46 (funcionGOTO -> .)
    FOR             reduce using rule 46 (funcionGOTO -> .)
    IF              reduce using rule 46 (funcionGOTO -> .)
    WHILE           reduce using rule 46 (funcionGOTO -> .)
    RCURLY          reduce using rule 46 (funcionGOTO -> .)

    funcionGOTO                    shift and go to state 257

state 241

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var . funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (46) funcionGOTO -> .

    ID              reduce using rule 46 (funcionGOTO -> .)
    READ            reduce using rule 46 (funcionGOTO -> .)
    PRINT           reduce using rule 46 (funcionGOTO -> .)
    FOR             reduce using rule 46 (funcionGOTO -> .)
    IF              reduce using rule 46 (funcionGOTO -> .)
    WHILE           reduce using rule 46 (funcionGOTO -> .)
    RETURN          reduce using rule 46 (funcionGOTO -> .)

    funcionGOTO                    shift and go to state 258

state 242

    (76) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub . endProcesoLlena
    (83) endProcesoLlena -> .

    MUL             reduce using rule 83 (endProcesoLlena -> .)
    DIV             reduce using rule 83 (endProcesoLlena -> .)
    PLUS            reduce using rule 83 (endProcesoLlena -> .)
    MINUS           reduce using rule 83 (endProcesoLlena -> .)
    GT              reduce using rule 83 (endProcesoLlena -> .)
    LT              reduce using rule 83 (endProcesoLlena -> .)
    GTE             reduce using rule 83 (endProcesoLlena -> .)
    LTE             reduce using rule 83 (endProcesoLlena -> .)
    NE              reduce using rule 83 (endProcesoLlena -> .)
    COMPARE         reduce using rule 83 (endProcesoLlena -> .)
    AND             reduce using rule 83 (endProcesoLlena -> .)
    OR              reduce using rule 83 (endProcesoLlena -> .)
    RBRACKET        reduce using rule 83 (endProcesoLlena -> .)
    RPAREN          reduce using rule 83 (endProcesoLlena -> .)
    COMMA           reduce using rule 83 (endProcesoLlena -> .)
    SEMICOLON       reduce using rule 83 (endProcesoLlena -> .)
    TO              reduce using rule 83 (endProcesoLlena -> .)
    CTEI            reduce using rule 83 (endProcesoLlena -> .)
    CTEF            reduce using rule 83 (endProcesoLlena -> .)
    CTEC            reduce using rule 83 (endProcesoLlena -> .)
    CTESTRING       reduce using rule 83 (endProcesoLlena -> .)
    LPAREN          reduce using rule 83 (endProcesoLlena -> .)
    ID              reduce using rule 83 (endProcesoLlena -> .)

    endProcesoLlena                shift and go to state 259

state 243

    (59) asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp . cuadruploAsignacion
    (64) cuadruploAsignacion -> .

    SEMICOLON       reduce using rule 64 (cuadruploAsignacion -> .)
    TO              reduce using rule 64 (cuadruploAsignacion -> .)

    cuadruploAsignacion            shift and go to state 260

state 244

    (60) asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName . exp cuadruploAsignacion
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

    exp                            shift and go to state 261
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 245

    (61) asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName . exp cuadruploAsignacion
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)
    TO              reduce using rule 143 (empty -> .)

    exp                            shift and go to state 262
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 246

    (84) lectura -> READ operadorRead LPAREN exp cuadruploRead . RPAREN

    RPAREN          shift and go to state 263


state 247

    (87) escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint . RPAREN

    RPAREN          shift and go to state 264


state 248

    (88) escritura1 -> escritura2 COMMA . escritura2
    (90) escritura2 -> . COMILLA CTESTRING COMILLA
    (91) escritura2 -> . CTEI guardaCTE cuadruploPrint
    (92) escritura2 -> . CTEF guardaCTE cuadruploPrint
    (93) escritura2 -> . exp
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    COMILLA         shift and go to state 232
    CTEI            shift and go to state 233
    CTEF            shift and go to state 234
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)

    escritura2                     shift and go to state 265
    exp                            shift and go to state 235
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 249

    (90) escritura2 -> COMILLA CTESTRING . COMILLA

    COMILLA         shift and go to state 266


state 250

    (91) escritura2 -> CTEI guardaCTE . cuadruploPrint
    (136) pexp -> CTEI guardaCTE .
    (95) cuadruploPrint -> .

  ! reduce/reduce conflict for COMMA resolved using rule 95 (cuadruploPrint -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 95 (cuadruploPrint -> .)
    MUL             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    DIV             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    PLUS            reduce using rule 136 (pexp -> CTEI guardaCTE .)
    MINUS           reduce using rule 136 (pexp -> CTEI guardaCTE .)
    GT              reduce using rule 136 (pexp -> CTEI guardaCTE .)
    LT              reduce using rule 136 (pexp -> CTEI guardaCTE .)
    GTE             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    LTE             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    NE              reduce using rule 136 (pexp -> CTEI guardaCTE .)
    COMPARE         reduce using rule 136 (pexp -> CTEI guardaCTE .)
    AND             reduce using rule 136 (pexp -> CTEI guardaCTE .)
    OR              reduce using rule 136 (pexp -> CTEI guardaCTE .)
    COMMA           reduce using rule 95 (cuadruploPrint -> .)
    RPAREN          reduce using rule 95 (cuadruploPrint -> .)

  ! COMMA           [ reduce using rule 136 (pexp -> CTEI guardaCTE .) ]
  ! RPAREN          [ reduce using rule 136 (pexp -> CTEI guardaCTE .) ]

    cuadruploPrint                 shift and go to state 267

state 251

    (92) escritura2 -> CTEF guardaCTE . cuadruploPrint
    (137) pexp -> CTEF guardaCTE .
    (95) cuadruploPrint -> .

  ! reduce/reduce conflict for COMMA resolved using rule 95 (cuadruploPrint -> .)
  ! reduce/reduce conflict for RPAREN resolved using rule 95 (cuadruploPrint -> .)
    MUL             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    DIV             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    PLUS            reduce using rule 137 (pexp -> CTEF guardaCTE .)
    MINUS           reduce using rule 137 (pexp -> CTEF guardaCTE .)
    GT              reduce using rule 137 (pexp -> CTEF guardaCTE .)
    LT              reduce using rule 137 (pexp -> CTEF guardaCTE .)
    GTE             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    LTE             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    NE              reduce using rule 137 (pexp -> CTEF guardaCTE .)
    COMPARE         reduce using rule 137 (pexp -> CTEF guardaCTE .)
    AND             reduce using rule 137 (pexp -> CTEF guardaCTE .)
    OR              reduce using rule 137 (pexp -> CTEF guardaCTE .)
    COMMA           reduce using rule 95 (cuadruploPrint -> .)
    RPAREN          reduce using rule 95 (cuadruploPrint -> .)

  ! COMMA           [ reduce using rule 137 (pexp -> CTEF guardaCTE .) ]
  ! RPAREN          [ reduce using rule 137 (pexp -> CTEF guardaCTE .) ]

    cuadruploPrint                 shift and go to state 268

state 252

    (97) for -> FOR operadorFor LPAREN for1 RPAREN . cuadruploFor LCURLY estatutos RCURLY endFor
    (100) cuadruploFor -> .

    LCURLY          reduce using rule 100 (cuadruploFor -> .)

    cuadruploFor                   shift and go to state 269

state 253

    (98) for1 -> FROM asignacion . TO exp

    TO              shift and go to state 270


state 254

    (59) asignacion -> ID . guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> ID . guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> ID . guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (62) guardaVariable_2 -> .

    EQUALS          reduce using rule 62 (guardaVariable_2 -> .)
    LBRACKET        reduce using rule 62 (guardaVariable_2 -> .)

    guardaVariable_2               shift and go to state 184

state 255

    (102) if -> IF LPAREN exp RPAREN cuadruploIf . LCURLY estatutos RCURLY else endIf

    LCURLY          shift and go to state 271


state 256

    (108) while -> WHILE operadorWhile LPAREN exp RPAREN . cuadruploWhile LCURLY estatutos RCURLY endWhile
    (110) cuadruploWhile -> .

    LCURLY          reduce using rule 110 (cuadruploWhile -> .)

    cuadruploWhile                 shift and go to state 272

state 257

    (43) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO . estatutos RCURLY endFuncion
    (50) estatutos -> . estatutos_2 estatutos
    (51) estatutos -> . empty
    (52) estatutos_2 -> . asignacion SEMICOLON
    (53) estatutos_2 -> . llamada SEMICOLON
    (54) estatutos_2 -> . lectura SEMICOLON
    (55) estatutos_2 -> . escritura SEMICOLON
    (56) estatutos_2 -> . for
    (57) estatutos_2 -> . if
    (58) estatutos_2 -> . while
    (143) empty -> .
    (59) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (97) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (102) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (108) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 143 (empty -> .)
    ID              shift and go to state 147
    READ            shift and go to state 148
    PRINT           shift and go to state 149
    FOR             shift and go to state 150
    IF              shift and go to state 151
    WHILE           shift and go to state 152

    estatutos                      shift and go to state 273
    estatutos_2                    shift and go to state 138
    empty                          shift and go to state 139
    asignacion                     shift and go to state 140
    llamada                        shift and go to state 141
    lectura                        shift and go to state 142
    escritura                      shift and go to state 143
    for                            shift and go to state 144
    if                             shift and go to state 145
    while                          shift and go to state 146

state 258

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO . estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (50) estatutos -> . estatutos_2 estatutos
    (51) estatutos -> . empty
    (52) estatutos_2 -> . asignacion SEMICOLON
    (53) estatutos_2 -> . llamada SEMICOLON
    (54) estatutos_2 -> . lectura SEMICOLON
    (55) estatutos_2 -> . escritura SEMICOLON
    (56) estatutos_2 -> . for
    (57) estatutos_2 -> . if
    (58) estatutos_2 -> . while
    (143) empty -> .
    (59) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (97) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (102) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (108) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RETURN          reduce using rule 143 (empty -> .)
    ID              shift and go to state 147
    READ            shift and go to state 148
    PRINT           shift and go to state 149
    FOR             shift and go to state 150
    IF              shift and go to state 151
    WHILE           shift and go to state 152

    estatutos                      shift and go to state 274
    estatutos_2                    shift and go to state 138
    empty                          shift and go to state 139
    asignacion                     shift and go to state 140
    llamada                        shift and go to state 141
    lectura                        shift and go to state 142
    escritura                      shift and go to state 143
    for                            shift and go to state 144
    if                             shift and go to state 145
    while                          shift and go to state 146

state 259

    (76) llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .

    MUL             reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    DIV             reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    PLUS            reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    MINUS           reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    GT              reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    LT              reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    GTE             reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    LTE             reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    NE              reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    COMPARE         reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    AND             reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    OR              reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    RBRACKET        reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    RPAREN          reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    COMMA           reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    SEMICOLON       reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    TO              reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    CTEI            reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    CTEF            reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    CTEC            reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    CTESTRING       reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    LPAREN          reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)
    ID              reduce using rule 76 (llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena .)


state 260

    (59) asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion .

    SEMICOLON       reduce using rule 59 (asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion .)
    TO              reduce using rule 59 (asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion .)


state 261

    (60) asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp . cuadruploAsignacion
    (64) cuadruploAsignacion -> .

    SEMICOLON       reduce using rule 64 (cuadruploAsignacion -> .)
    TO              reduce using rule 64 (cuadruploAsignacion -> .)

    cuadruploAsignacion            shift and go to state 275

state 262

    (61) asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp . cuadruploAsignacion
    (64) cuadruploAsignacion -> .

    SEMICOLON       reduce using rule 64 (cuadruploAsignacion -> .)
    TO              reduce using rule 64 (cuadruploAsignacion -> .)

    cuadruploAsignacion            shift and go to state 276

state 263

    (84) lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN .

    SEMICOLON       reduce using rule 84 (lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN .)


state 264

    (87) escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN .

    SEMICOLON       reduce using rule 87 (escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN .)


state 265

    (88) escritura1 -> escritura2 COMMA escritura2 .

    RPAREN          reduce using rule 88 (escritura1 -> escritura2 COMMA escritura2 .)


state 266

    (90) escritura2 -> COMILLA CTESTRING COMILLA .

    COMMA           reduce using rule 90 (escritura2 -> COMILLA CTESTRING COMILLA .)
    RPAREN          reduce using rule 90 (escritura2 -> COMILLA CTESTRING COMILLA .)


state 267

    (91) escritura2 -> CTEI guardaCTE cuadruploPrint .

    COMMA           reduce using rule 91 (escritura2 -> CTEI guardaCTE cuadruploPrint .)
    RPAREN          reduce using rule 91 (escritura2 -> CTEI guardaCTE cuadruploPrint .)


state 268

    (92) escritura2 -> CTEF guardaCTE cuadruploPrint .

    COMMA           reduce using rule 92 (escritura2 -> CTEF guardaCTE cuadruploPrint .)
    RPAREN          reduce using rule 92 (escritura2 -> CTEF guardaCTE cuadruploPrint .)


state 269

    (97) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor . LCURLY estatutos RCURLY endFor

    LCURLY          shift and go to state 277


state 270

    (98) for1 -> FROM asignacion TO . exp
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    RPAREN          reduce using rule 143 (empty -> .)

    exp                            shift and go to state 278
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 271

    (102) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY . estatutos RCURLY else endIf
    (50) estatutos -> . estatutos_2 estatutos
    (51) estatutos -> . empty
    (52) estatutos_2 -> . asignacion SEMICOLON
    (53) estatutos_2 -> . llamada SEMICOLON
    (54) estatutos_2 -> . lectura SEMICOLON
    (55) estatutos_2 -> . escritura SEMICOLON
    (56) estatutos_2 -> . for
    (57) estatutos_2 -> . if
    (58) estatutos_2 -> . while
    (143) empty -> .
    (59) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (97) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (102) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (108) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 143 (empty -> .)
    ID              shift and go to state 147
    READ            shift and go to state 148
    PRINT           shift and go to state 149
    FOR             shift and go to state 150
    IF              shift and go to state 151
    WHILE           shift and go to state 152

    estatutos                      shift and go to state 279
    estatutos_2                    shift and go to state 138
    empty                          shift and go to state 139
    asignacion                     shift and go to state 140
    llamada                        shift and go to state 141
    lectura                        shift and go to state 142
    escritura                      shift and go to state 143
    for                            shift and go to state 144
    if                             shift and go to state 145
    while                          shift and go to state 146

state 272

    (108) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile . LCURLY estatutos RCURLY endWhile

    LCURLY          shift and go to state 280


state 273

    (43) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos . RCURLY endFuncion

    RCURLY          shift and go to state 281


state 274

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos . RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion

    RETURN          shift and go to state 282


state 275

    (60) asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion .

    SEMICOLON       reduce using rule 60 (asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion .)
    TO              reduce using rule 60 (asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion .)


state 276

    (61) asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion .

    SEMICOLON       reduce using rule 61 (asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion .)
    TO              reduce using rule 61 (asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion .)


state 277

    (97) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY . estatutos RCURLY endFor
    (50) estatutos -> . estatutos_2 estatutos
    (51) estatutos -> . empty
    (52) estatutos_2 -> . asignacion SEMICOLON
    (53) estatutos_2 -> . llamada SEMICOLON
    (54) estatutos_2 -> . lectura SEMICOLON
    (55) estatutos_2 -> . escritura SEMICOLON
    (56) estatutos_2 -> . for
    (57) estatutos_2 -> . if
    (58) estatutos_2 -> . while
    (143) empty -> .
    (59) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (97) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (102) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (108) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 143 (empty -> .)
    ID              shift and go to state 147
    READ            shift and go to state 148
    PRINT           shift and go to state 149
    FOR             shift and go to state 150
    IF              shift and go to state 151
    WHILE           shift and go to state 152

    estatutos                      shift and go to state 283
    estatutos_2                    shift and go to state 138
    empty                          shift and go to state 139
    asignacion                     shift and go to state 140
    llamada                        shift and go to state 141
    lectura                        shift and go to state 142
    escritura                      shift and go to state 143
    for                            shift and go to state 144
    if                             shift and go to state 145
    while                          shift and go to state 146

state 278

    (98) for1 -> FROM asignacion TO exp .

    RPAREN          reduce using rule 98 (for1 -> FROM asignacion TO exp .)


state 279

    (102) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos . RCURLY else endIf

    RCURLY          shift and go to state 284


state 280

    (108) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY . estatutos RCURLY endWhile
    (50) estatutos -> . estatutos_2 estatutos
    (51) estatutos -> . empty
    (52) estatutos_2 -> . asignacion SEMICOLON
    (53) estatutos_2 -> . llamada SEMICOLON
    (54) estatutos_2 -> . lectura SEMICOLON
    (55) estatutos_2 -> . escritura SEMICOLON
    (56) estatutos_2 -> . for
    (57) estatutos_2 -> . if
    (58) estatutos_2 -> . while
    (143) empty -> .
    (59) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (97) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (102) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (108) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 143 (empty -> .)
    ID              shift and go to state 147
    READ            shift and go to state 148
    PRINT           shift and go to state 149
    FOR             shift and go to state 150
    IF              shift and go to state 151
    WHILE           shift and go to state 152

    estatutos                      shift and go to state 285
    estatutos_2                    shift and go to state 138
    empty                          shift and go to state 139
    asignacion                     shift and go to state 140
    llamada                        shift and go to state 141
    lectura                        shift and go to state 142
    escritura                      shift and go to state 143
    for                            shift and go to state 144
    if                             shift and go to state 145
    while                          shift and go to state 146

state 281

    (43) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY . endFuncion
    (47) endFuncion -> .

    FUNCION         reduce using rule 47 (endFuncion -> .)
    MAIN            reduce using rule 47 (endFuncion -> .)
    $end            reduce using rule 47 (endFuncion -> .)

    endFuncion                     shift and go to state 286

state 282

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN . operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (48) operadorReturn -> .

    CTEI            reduce using rule 48 (operadorReturn -> .)
    CTEF            reduce using rule 48 (operadorReturn -> .)
    CTEC            reduce using rule 48 (operadorReturn -> .)
    CTESTRING       reduce using rule 48 (operadorReturn -> .)
    LPAREN          reduce using rule 48 (operadorReturn -> .)
    ID              reduce using rule 48 (operadorReturn -> .)
    SEMICOLON       reduce using rule 48 (operadorReturn -> .)
    OR              reduce using rule 48 (operadorReturn -> .)
    AND             reduce using rule 48 (operadorReturn -> .)
    GT              reduce using rule 48 (operadorReturn -> .)
    LT              reduce using rule 48 (operadorReturn -> .)
    GTE             reduce using rule 48 (operadorReturn -> .)
    LTE             reduce using rule 48 (operadorReturn -> .)
    NE              reduce using rule 48 (operadorReturn -> .)
    COMPARE         reduce using rule 48 (operadorReturn -> .)
    PLUS            reduce using rule 48 (operadorReturn -> .)
    MINUS           reduce using rule 48 (operadorReturn -> .)
    MUL             reduce using rule 48 (operadorReturn -> .)
    DIV             reduce using rule 48 (operadorReturn -> .)

    operadorReturn                 shift and go to state 287

state 283

    (97) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos . RCURLY endFor

    RCURLY          shift and go to state 288


state 284

    (102) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY . else endIf
    (105) else -> . ELSE cuadruploElse LCURLY estatutos RCURLY
    (106) else -> . empty
    (143) empty -> .

    ELSE            shift and go to state 290
    ID              reduce using rule 143 (empty -> .)
    READ            reduce using rule 143 (empty -> .)
    PRINT           reduce using rule 143 (empty -> .)
    FOR             reduce using rule 143 (empty -> .)
    IF              reduce using rule 143 (empty -> .)
    WHILE           reduce using rule 143 (empty -> .)
    RCURLY          reduce using rule 143 (empty -> .)
    RETURN          reduce using rule 143 (empty -> .)

    else                           shift and go to state 289
    empty                          shift and go to state 291

state 285

    (108) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos . RCURLY endWhile

    RCURLY          shift and go to state 292


state 286

    (43) funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .

    FUNCION         reduce using rule 43 (funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .)
    MAIN            reduce using rule 43 (funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .)
    $end            reduce using rule 43 (funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion .)


state 287

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn . exp cuadruploReturn SEMICOLON RCURLY endFuncion
    (112) exp -> . nexp
    (113) exp -> . nexp OR addOperadorName nexp cuadruploOr
    (115) nexp -> . compexp
    (116) nexp -> . compexp AND addOperadorName compexp cuadruploAnd
    (118) compexp -> . sumexp
    (119) compexp -> . compexp1 sumexp
    (127) sumexp -> . mulexp
    (128) sumexp -> . mulexp PLUS addOperadorName mulexp cuadruploSuma
    (129) sumexp -> . mulexp MINUS addOperadorName mulexp cuadruploSuma
    (120) compexp1 -> . sumexp GT addOperadorName sumexp cuadruploComparacion
    (121) compexp1 -> . sumexp LT addOperadorName sumexp cuadruploComparacion
    (122) compexp1 -> . sumexp GTE addOperadorName sumexp cuadruploComparacion
    (123) compexp1 -> . sumexp LTE addOperadorName sumexp cuadruploComparacion
    (124) compexp1 -> . sumexp NE addOperadorName sumexp cuadruploComparacion
    (125) compexp1 -> . sumexp COMPARE addOperadorName sumexp cuadruploComparacion
    (131) mulexp -> . pexp
    (132) mulexp -> . pexp MUL addOperadorName pexp cuadruploMultiplicacion
    (133) mulexp -> . pexp DIV addOperadorName pexp cuadruploMultiplicacion
    (135) pexp -> . var1 guardaID
    (136) pexp -> . CTEI guardaCTE
    (137) pexp -> . CTEF guardaCTE
    (138) pexp -> . CTEC guardaCTE
    (139) pexp -> . CTESTRING guardaCTE
    (140) pexp -> . llamada
    (141) pexp -> . LPAREN exp RPAREN
    (19) var1 -> . ID
    (20) var1 -> . ID COMMA var1 agregarVar
    (21) var1 -> . ID arr
    (22) var1 -> . ID arr COMMA var1 agregarVar
    (23) var1 -> . ID mat COMMA var1 agregarVar
    (24) var1 -> . ID mat
    (25) var1 -> . ID mat especial
    (26) var1 -> . empty
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (143) empty -> .

    CTEI            shift and go to state 101
    CTEF            shift and go to state 74
    CTEC            shift and go to state 75
    CTESTRING       shift and go to state 76
    LPAREN          shift and go to state 78
    ID              shift and go to state 79
    MUL             reduce using rule 143 (empty -> .)
    DIV             reduce using rule 143 (empty -> .)
    PLUS            reduce using rule 143 (empty -> .)
    MINUS           reduce using rule 143 (empty -> .)
    GT              reduce using rule 143 (empty -> .)
    LT              reduce using rule 143 (empty -> .)
    GTE             reduce using rule 143 (empty -> .)
    LTE             reduce using rule 143 (empty -> .)
    NE              reduce using rule 143 (empty -> .)
    COMPARE         reduce using rule 143 (empty -> .)
    AND             reduce using rule 143 (empty -> .)
    OR              reduce using rule 143 (empty -> .)
    SEMICOLON       reduce using rule 143 (empty -> .)

    exp                            shift and go to state 293
    nexp                           shift and go to state 67
    compexp                        shift and go to state 68
    sumexp                         shift and go to state 69
    compexp1                       shift and go to state 70
    mulexp                         shift and go to state 71
    pexp                           shift and go to state 72
    var1                           shift and go to state 73
    llamada                        shift and go to state 77
    empty                          shift and go to state 35

state 288

    (97) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY . endFor
    (101) endFor -> .

    ID              reduce using rule 101 (endFor -> .)
    READ            reduce using rule 101 (endFor -> .)
    PRINT           reduce using rule 101 (endFor -> .)
    FOR             reduce using rule 101 (endFor -> .)
    IF              reduce using rule 101 (endFor -> .)
    WHILE           reduce using rule 101 (endFor -> .)
    RCURLY          reduce using rule 101 (endFor -> .)
    RETURN          reduce using rule 101 (endFor -> .)

    endFor                         shift and go to state 294

state 289

    (102) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else . endIf
    (104) endIf -> .

    ID              reduce using rule 104 (endIf -> .)
    READ            reduce using rule 104 (endIf -> .)
    PRINT           reduce using rule 104 (endIf -> .)
    FOR             reduce using rule 104 (endIf -> .)
    IF              reduce using rule 104 (endIf -> .)
    WHILE           reduce using rule 104 (endIf -> .)
    RCURLY          reduce using rule 104 (endIf -> .)
    RETURN          reduce using rule 104 (endIf -> .)

    endIf                          shift and go to state 295

state 290

    (105) else -> ELSE . cuadruploElse LCURLY estatutos RCURLY
    (107) cuadruploElse -> .

    LCURLY          reduce using rule 107 (cuadruploElse -> .)

    cuadruploElse                  shift and go to state 296

state 291

    (106) else -> empty .

    ID              reduce using rule 106 (else -> empty .)
    READ            reduce using rule 106 (else -> empty .)
    PRINT           reduce using rule 106 (else -> empty .)
    FOR             reduce using rule 106 (else -> empty .)
    IF              reduce using rule 106 (else -> empty .)
    WHILE           reduce using rule 106 (else -> empty .)
    RCURLY          reduce using rule 106 (else -> empty .)
    RETURN          reduce using rule 106 (else -> empty .)


state 292

    (108) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY . endWhile
    (111) endWhile -> .

    ID              reduce using rule 111 (endWhile -> .)
    READ            reduce using rule 111 (endWhile -> .)
    PRINT           reduce using rule 111 (endWhile -> .)
    FOR             reduce using rule 111 (endWhile -> .)
    IF              reduce using rule 111 (endWhile -> .)
    WHILE           reduce using rule 111 (endWhile -> .)
    RCURLY          reduce using rule 111 (endWhile -> .)
    RETURN          reduce using rule 111 (endWhile -> .)

    endWhile                       shift and go to state 297

state 293

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp . cuadruploReturn SEMICOLON RCURLY endFuncion
    (49) cuadruploReturn -> .

    SEMICOLON       reduce using rule 49 (cuadruploReturn -> .)

    cuadruploReturn                shift and go to state 298

state 294

    (97) for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .

    ID              reduce using rule 97 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    READ            reduce using rule 97 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    PRINT           reduce using rule 97 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    FOR             reduce using rule 97 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    IF              reduce using rule 97 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    WHILE           reduce using rule 97 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    RCURLY          reduce using rule 97 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)
    RETURN          reduce using rule 97 (for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor .)


state 295

    (102) if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .

    ID              reduce using rule 102 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    READ            reduce using rule 102 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    PRINT           reduce using rule 102 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    FOR             reduce using rule 102 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    IF              reduce using rule 102 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    WHILE           reduce using rule 102 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    RCURLY          reduce using rule 102 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)
    RETURN          reduce using rule 102 (if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf .)


state 296

    (105) else -> ELSE cuadruploElse . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 299


state 297

    (108) while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .

    ID              reduce using rule 108 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    READ            reduce using rule 108 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    PRINT           reduce using rule 108 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    FOR             reduce using rule 108 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    IF              reduce using rule 108 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    WHILE           reduce using rule 108 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    RCURLY          reduce using rule 108 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)
    RETURN          reduce using rule 108 (while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile .)


state 298

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn . SEMICOLON RCURLY endFuncion

    SEMICOLON       shift and go to state 300


state 299

    (105) else -> ELSE cuadruploElse LCURLY . estatutos RCURLY
    (50) estatutos -> . estatutos_2 estatutos
    (51) estatutos -> . empty
    (52) estatutos_2 -> . asignacion SEMICOLON
    (53) estatutos_2 -> . llamada SEMICOLON
    (54) estatutos_2 -> . lectura SEMICOLON
    (55) estatutos_2 -> . escritura SEMICOLON
    (56) estatutos_2 -> . for
    (57) estatutos_2 -> . if
    (58) estatutos_2 -> . while
    (143) empty -> .
    (59) asignacion -> . ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion
    (60) asignacion -> . ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion
    (61) asignacion -> . ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion
    (76) llamada -> . ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena
    (84) lectura -> . READ operadorRead LPAREN exp cuadruploRead RPAREN
    (87) escritura -> . PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN
    (97) for -> . FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor
    (102) if -> . IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf
    (108) while -> . WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile

    RCURLY          reduce using rule 143 (empty -> .)
    ID              shift and go to state 147
    READ            shift and go to state 148
    PRINT           shift and go to state 149
    FOR             shift and go to state 150
    IF              shift and go to state 151
    WHILE           shift and go to state 152

    estatutos                      shift and go to state 301
    estatutos_2                    shift and go to state 138
    empty                          shift and go to state 139
    asignacion                     shift and go to state 140
    llamada                        shift and go to state 141
    lectura                        shift and go to state 142
    escritura                      shift and go to state 143
    for                            shift and go to state 144
    if                             shift and go to state 145
    while                          shift and go to state 146

state 300

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON . RCURLY endFuncion

    RCURLY          shift and go to state 302


state 301

    (105) else -> ELSE cuadruploElse LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 303


state 302

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY . endFuncion
    (47) endFuncion -> .

    FUNCION         reduce using rule 47 (endFuncion -> .)
    MAIN            reduce using rule 47 (endFuncion -> .)
    $end            reduce using rule 47 (endFuncion -> .)

    endFuncion                     shift and go to state 304

state 303

    (105) else -> ELSE cuadruploElse LCURLY estatutos RCURLY .

    ID              reduce using rule 105 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    READ            reduce using rule 105 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    PRINT           reduce using rule 105 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    FOR             reduce using rule 105 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    IF              reduce using rule 105 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    WHILE           reduce using rule 105 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 105 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)
    RETURN          reduce using rule 105 (else -> ELSE cuadruploElse LCURLY estatutos RCURLY .)


state 304

    (44) funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .

    FUNCION         reduce using rule 44 (funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .)
    MAIN            reduce using rule 44 (funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .)
    $end            reduce using rule 44 (funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for MAIN in state 5 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 34 resolved as shift
WARNING: shift/reduce conflict for ID in state 49 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 50 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 51 resolved as shift
WARNING: shift/reduce conflict for ID in state 59 resolved as shift
WARNING: shift/reduce conflict for ID in state 60 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 65 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 71 resolved as shift
WARNING: shift/reduce conflict for MUL in state 72 resolved as shift
WARNING: shift/reduce conflict for DIV in state 72 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 79 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 125 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 125 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 125 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 125 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 125 resolved as shift
WARNING: shift/reduce conflict for ID in state 125 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 126 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 126 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 126 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 126 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 126 resolved as shift
WARNING: shift/reduce conflict for ID in state 126 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 127 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 127 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 127 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 127 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 127 resolved as shift
WARNING: shift/reduce conflict for ID in state 127 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 128 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 128 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 128 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 128 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 128 resolved as shift
WARNING: shift/reduce conflict for ID in state 128 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 129 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 129 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 129 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 129 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 129 resolved as shift
WARNING: shift/reduce conflict for ID in state 129 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 130 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 130 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 130 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 130 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 130 resolved as shift
WARNING: shift/reduce conflict for ID in state 130 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 131 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 131 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 131 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 131 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 131 resolved as shift
WARNING: shift/reduce conflict for ID in state 131 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 132 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 132 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 132 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 132 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 132 resolved as shift
WARNING: shift/reduce conflict for ID in state 132 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 133 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 133 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 133 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 133 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 133 resolved as shift
WARNING: shift/reduce conflict for ID in state 133 resolved as shift
WARNING: shift/reduce conflict for CTEI in state 134 resolved as shift
WARNING: shift/reduce conflict for CTEF in state 134 resolved as shift
WARNING: shift/reduce conflict for CTEC in state 134 resolved as shift
WARNING: shift/reduce conflict for CTESTRING in state 134 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 134 resolved as shift
WARNING: shift/reduce conflict for ID in state 134 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 159 resolved as shift
WARNING: shift/reduce conflict for RBRACKET in state 162 resolved as shift
WARNING: reduce/reduce conflict in state 79 resolved using rule (var1 -> ID)
WARNING: rejected rule (llamadaEra -> <empty>) in state 79
WARNING: reduce/reduce conflict in state 177 resolved using rule (var1 -> empty)
WARNING: rejected rule (auxiliarExp -> empty) in state 177
WARNING: reduce/reduce conflict in state 250 resolved using rule (cuadruploPrint -> <empty>)
WARNING: rejected rule (pexp -> CTEI guardaCTE) in state 250
WARNING: reduce/reduce conflict in state 251 resolved using rule (cuadruploPrint -> <empty>)
WARNING: rejected rule (pexp -> CTEF guardaCTE) in state 251
WARNING: Rule (auxiliarExp -> empty) is never reduced
