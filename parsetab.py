
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND CHAR COMILLA COMMA COMPARE CTEC CTEF CTEI CTESTRING DETERMINANTE DIV ELSE END EQUALS FLOAT FOR FROM FUNCION GT GTE ID IF INT INVERSA LBRACKET LCURLY LPAREN LT LTE MAIN MINUS MUL NE OR PLUS PRINT PROGRAM RBRACKET RCURLY READ RETURN RPAREN SEMICOLON TO TRANSPUESTA VAR VOID WHILE\n        prog : PROGRAM ID SEMICOLON agregarProg prog_1\n        agregarProg :\n\tprog_1 : var cuadruploMain metodos mainEnd prog_2\n\tprog_1 : var cuadruploMain metodos\n\t       | prog_2\n\t\n    prog_2 : main\n    \n\tmain : MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END\n\tcuadruploMain : mainEnd : \n    type : INT guardaTipoDeVariable\n         | FLOAT guardaTipoDeVariable\n         | CHAR guardaTipoDeVariable\n    guardaTipoDeVariable : \n    var : vars\n        | \n    \n    vars : VAR var_2\n    \n        var_2 : var_2 type var1 SEMICOLON agregarVar\n              |\n    \n    var1 : ID\n         | ID COMMA var1 agregarVar\n         | ID arr\n         | ID arr COMMA var1 agregarVar\n         | ID mat COMMA var1 agregarVar\n         | ID mat\n         | ID mat especial\n         | empty\n    \n    empty :\n    agregarVar :\n    especial : TRANSPUESTA\n             | INVERSA\n             | DETERMINANTE\n    \n    arr : LBRACKET CTEI RBRACKET\n        | LBRACKET exp RBRACKET\n\n    \n    mat : LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET\n        | LBRACKET exp RBRACKET LBRACKET exp RBRACKET\n        | LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET\n        | LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET\n    \n    metodos : funcion metodos\n            | \n\n    \n    funcion : FUNCION VOID funcion_1\n            | FUNCION INT funcion_2\n            | FUNCION CHAR funcion_2\n            | FUNCION FLOAT funcion_2\n    \n    funcion_1 : ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion\n    \n    funcion_2 : ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion\n     guardaFuncion : funcionGOTO : endFuncion : operadorReturn : \n    cuadruploReturn :\n    \n    estatutos : estatutos_2 estatutos\n              | \n    \n    estatutos_2 : asignacion SEMICOLON\n                | llamada SEMICOLON\n                | lectura SEMICOLON\n                | escritura SEMICOLON\n                | for\n                | if\n                | while\n    \n    asignacion : ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion\n               | ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion\n               | ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion\n    guardaVariable_2 : addOperadorName : cuadruploAsignacion : \n    param   : ID agregarParametro\n            | ID COMMA param agregarParametro\n            | ID arr\n            | ID arr COMMA param\n            | ID mat COMMA param\n            | ID mat\n            | ID mat especial\n            | \n    agregarParametro :\n    param2 : param2 type param\n           | \n    \n    llamada : ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena\n    llamadaEra : \n    auxiliarExp : exp\n                | exp  COMMA  exp\n    cuadruploParametros : cuadruploGoSub :  endProcesoLlena : \n    lectura : READ operadorRead LPAREN exp cuadruploRead RPAREN\n    operadorRead : cuadruploRead : \n    escritura : PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN\n    \n    escritura1 : escritura2 COMMA escritura2\n               | escritura2\n    \n    escritura2 : COMILLA CTESTRING COMILLA\n               | exp cuadruploPrint\n    operadorPrint : cuadruploPrint : guardaCTE : \n    for : FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor\n    \n    for1 : FROM asignacion TO exp\n    operadorFor :cuadruploFor : endFor : \n    if : IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf\n    cuadruploIf : endIf : \n    else : ELSE cuadruploElse LCURLY estatutos RCURLY\n         | \n    cuadruploElse : \n    while : WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile\n    operadorWhile :cuadruploWhile : endWhile : \n    exp : nexp\n        | exp OR addOperadorName nexp cuadruploOr\n    cuadruploOr : \n    nexp : compexp1\n         | nexp AND addOperadorName compexp1 cuadruploAnd\n    cuadruploAnd : \n    compexp : sumexp\n            | compexp1 sumexp\n    \n    compexp1 : compexp1 GT addOperadorName sumexp cuadruploComparacion\n             | compexp1 LT addOperadorName sumexp cuadruploComparacion\n             | compexp1 GTE addOperadorName sumexp cuadruploComparacion\n             | compexp1 LTE addOperadorName sumexp cuadruploComparacion\n             | compexp1 NE addOperadorName sumexp cuadruploComparacion\n             | compexp1 COMPARE addOperadorName sumexp cuadruploComparacion\n             | sumexp\n    cuadruploComparacion : \n    sumexp : mulexp\n           | sumexp PLUS addOperadorName mulexp cuadruploSuma\n           | sumexp MINUS addOperadorName mulexp cuadruploSuma\n    cuadruploSuma : \n    mulexp : pexp\n           | mulexp MUL addOperadorName pexp cuadruploMultiplicacion\n           | mulexp DIV addOperadorName pexp cuadruploMultiplicacion\n    cuadruploMultiplicacion : \n    pexp : var1 guardaID\n         | CTEI guardaCTE\n         | CTEF guardaCTE\n         | CTEC guardaCTE\n         | CTESTRING guardaCTE\n         | llamada\n         | LPAREN exp RPAREN\n    guardaID : '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'prog':([0,],[1,]),'agregarProg':([4,],[5,]),'prog_1':([5,],[6,]),'var':([5,75,213,214,],[7,105,229,230,]),'prog_2':([5,24,],[8,37,]),'vars':([5,75,213,214,],[9,9,9,9,]),'main':([5,24,],[10,10,]),'cuadruploMain':([7,],[13,]),'var_2':([11,],[14,]),'guardaFuncion':([12,39,41,],[15,51,52,]),'metodos':([13,17,],[16,25,]),'funcion':([13,17,],[17,17,]),'type':([14,36,110,111,],[19,50,50,50,]),'mainEnd':([16,],[24,]),'var1':([19,45,48,55,56,73,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,179,203,208,209,212,217,233,234,237,256,273,],[30,54,68,81,82,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,]),'empty':([19,45,48,55,56,73,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,179,203,208,209,212,217,233,234,237,256,273,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'guardaTipoDeVariable':([20,21,22,],[33,34,35,]),'param2':([23,78,79,],[36,110,111,]),'funcion_1':([26,],[38,]),'funcion_2':([27,28,29,],[40,42,43,]),'arr':([31,74,77,175,],[46,46,108,206,]),'mat':([31,74,77,175,],[47,47,109,207,]),'agregarVar':([44,54,81,82,],[53,80,112,113,]),'especial':([47,109,],[57,148,]),'exp':([48,73,114,115,129,179,203,208,209,212,217,233,234,237,256,273,],[62,102,152,153,168,211,216,220,224,228,232,249,250,224,264,278,]),'nexp':([48,73,114,115,116,129,179,203,208,209,212,217,233,234,237,256,273,],[63,63,63,63,155,63,63,63,63,63,63,63,63,63,63,63,63,]),'compexp1':([48,73,114,115,116,117,129,179,203,208,209,212,217,233,234,237,256,273,],[64,64,64,64,64,156,64,64,64,64,64,64,64,64,64,64,64,64,]),'sumexp':([48,73,114,115,116,117,118,119,120,121,122,123,129,179,203,208,209,212,217,233,234,237,256,273,],[65,65,65,65,65,65,157,158,159,160,161,162,65,65,65,65,65,65,65,65,65,65,65,65,]),'mulexp':([48,73,114,115,116,117,118,119,120,121,122,123,124,125,129,179,203,208,209,212,217,233,234,237,256,273,],[66,66,66,66,66,66,66,66,66,66,66,66,163,164,66,66,66,66,66,66,66,66,66,66,66,66,]),'pexp':([48,73,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,179,203,208,209,212,217,233,234,237,256,273,],[67,67,67,67,67,67,67,67,67,67,67,67,67,67,165,166,67,67,67,67,67,67,67,67,67,67,67,67,]),'llamada':([48,73,105,114,115,116,117,118,119,120,121,122,123,124,125,126,127,129,131,179,203,208,209,212,217,233,234,237,245,246,256,257,263,266,273,284,],[72,72,133,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,133,72,72,72,72,72,72,72,72,72,133,133,72,133,133,133,72,133,]),'param':([50,107,146,147,],[76,145,182,183,]),'guardaCTE':([61,69,70,71,103,151,154,],[84,99,100,101,84,84,84,]),'guardaID':([68,],[98,]),'llamadaEra':([74,139,],[104,104,]),'agregarParametro':([77,145,],[106,181,]),'addOperadorName':([86,87,88,89,90,91,92,93,94,95,96,97,205,218,219,],[116,117,118,119,120,121,122,123,124,125,126,127,217,233,234,]),'estatutos':([105,131,245,246,257,263,266,284,],[130,170,259,260,265,269,271,286,]),'estatutos_2':([105,131,245,246,257,263,266,284,],[131,131,131,131,131,131,131,131,]),'asignacion':([105,131,226,245,246,257,263,266,284,],[132,132,241,132,132,132,132,132,132,]),'lectura':([105,131,245,246,257,263,266,284,],[134,134,134,134,134,134,134,134,]),'escritura':([105,131,245,246,257,263,266,284,],[135,135,135,135,135,135,135,135,]),'for':([105,131,245,246,257,263,266,284,],[136,136,136,136,136,136,136,136,]),'if':([105,131,245,246,257,263,266,284,],[137,137,137,137,137,137,137,137,]),'while':([105,131,245,246,257,263,266,284,],[138,138,138,138,138,138,138,138,]),'auxiliarExp':([129,],[167,]),'guardaVariable_2':([139,242,],[175,175,]),'operadorRead':([140,],[176,]),'operadorFor':([142,],[178,]),'operadorWhile':([144,],[180,]),'cuadruploOr':([155,],[190,]),'cuadruploAnd':([156,],[191,]),'cuadruploComparacion':([157,158,159,160,161,162,],[192,193,194,195,196,197,]),'cuadruploSuma':([163,164,],[198,199,]),'cuadruploMultiplicacion':([165,166,],[200,201,]),'cuadruploParametros':([167,],[202,]),'operadorPrint':([177,],[209,]),'escritura1':([209,],[221,]),'escritura2':([209,237,],[222,253,]),'for1':([210,],[225,]),'cuadruploGoSub':([215,],[231,]),'cuadruploRead':([220,],[235,]),'cuadruploPrint':([221,224,],[236,239,]),'cuadruploIf':([227,],[243,]),'funcionGOTO':([229,230,],[245,246,]),'endProcesoLlena':([231,],[247,]),'cuadruploAsignacion':([232,249,250,],[248,261,262,]),'cuadruploFor':([240,],[255,]),'cuadruploWhile':([244,],[258,]),'endFuncion':([267,287,],[272,289,]),'operadorReturn':([268,],[273,]),'else':([270,],[275,]),'endFor':([274,],[279,]),'endIf':([275,],[280,]),'cuadruploElse':([276,],[281,]),'endWhile':([277,],[282,]),'cuadruploReturn':([278,],[283,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> prog","S'",1,None,None,None),
  ('prog -> PROGRAM ID SEMICOLON agregarProg prog_1','prog',5,'p_prog','main.py',169),
  ('agregarProg -> <empty>','agregarProg',0,'p_agregarProg','main.py',177),
  ('prog_1 -> var cuadruploMain metodos mainEnd prog_2','prog_1',5,'p_prog_1','main.py',186),
  ('prog_1 -> var cuadruploMain metodos','prog_1',3,'p_prog_1','main.py',187),
  ('prog_1 -> prog_2','prog_1',1,'p_prog_1','main.py',188),
  ('prog_2 -> main','prog_2',1,'p_prog2','main.py',193),
  ('main -> MAIN guardaFuncion LPAREN param2 RPAREN LCURLY var estatutos RCURLY END','main',10,'p_main','main.py',198),
  ('cuadruploMain -> <empty>','cuadruploMain',0,'p_cuadruploMain','main.py',210),
  ('mainEnd -> <empty>','mainEnd',0,'p_mainEnd','main.py',217),
  ('type -> INT guardaTipoDeVariable','type',2,'p_type','main.py',228),
  ('type -> FLOAT guardaTipoDeVariable','type',2,'p_type','main.py',229),
  ('type -> CHAR guardaTipoDeVariable','type',2,'p_type','main.py',230),
  ('guardaTipoDeVariable -> <empty>','guardaTipoDeVariable',0,'p_guardaTipoDeVariable','main.py',234),
  ('var -> vars','var',1,'p_var','main.py',240),
  ('var -> <empty>','var',0,'p_var','main.py',241),
  ('vars -> VAR var_2','vars',2,'p_vars','main.py',246),
  ('var_2 -> var_2 type var1 SEMICOLON agregarVar','var_2',5,'p_var_2','main.py',251),
  ('var_2 -> <empty>','var_2',0,'p_var_2','main.py',252),
  ('var1 -> ID','var1',1,'p_var1','main.py',258),
  ('var1 -> ID COMMA var1 agregarVar','var1',4,'p_var1','main.py',259),
  ('var1 -> ID arr','var1',2,'p_var1','main.py',260),
  ('var1 -> ID arr COMMA var1 agregarVar','var1',5,'p_var1','main.py',261),
  ('var1 -> ID mat COMMA var1 agregarVar','var1',5,'p_var1','main.py',262),
  ('var1 -> ID mat','var1',2,'p_var1','main.py',263),
  ('var1 -> ID mat especial','var1',3,'p_var1','main.py',264),
  ('var1 -> empty','var1',1,'p_var1','main.py',265),
  ('empty -> <empty>','empty',0,'p_empty','main.py',273),
  ('agregarVar -> <empty>','agregarVar',0,'p_agregarVar','main.py',278),
  ('especial -> TRANSPUESTA','especial',1,'p_especial','main.py',291),
  ('especial -> INVERSA','especial',1,'p_especial','main.py',292),
  ('especial -> DETERMINANTE','especial',1,'p_especial','main.py',293),
  ('arr -> LBRACKET CTEI RBRACKET','arr',3,'p_arr','main.py',298),
  ('arr -> LBRACKET exp RBRACKET','arr',3,'p_arr','main.py',299),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','main.py',305),
  ('mat -> LBRACKET exp RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','main.py',306),
  ('mat -> LBRACKET exp RBRACKET LBRACKET CTEI RBRACKET','mat',6,'p_mat','main.py',307),
  ('mat -> LBRACKET CTEI RBRACKET LBRACKET exp RBRACKET','mat',6,'p_mat','main.py',308),
  ('metodos -> funcion metodos','metodos',2,'p_metodos','main.py',317),
  ('metodos -> <empty>','metodos',0,'p_metodos','main.py',318),
  ('funcion -> FUNCION VOID funcion_1','funcion',3,'p_funcion','main.py',324),
  ('funcion -> FUNCION INT funcion_2','funcion',3,'p_funcion','main.py',325),
  ('funcion -> FUNCION CHAR funcion_2','funcion',3,'p_funcion','main.py',326),
  ('funcion -> FUNCION FLOAT funcion_2','funcion',3,'p_funcion','main.py',327),
  ('funcion_1 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RCURLY endFuncion','funcion_1',12,'p_funcion_1','main.py',331),
  ('funcion_2 -> ID guardaFuncion LPAREN param2 RPAREN SEMICOLON LCURLY var funcionGOTO estatutos RETURN operadorReturn exp cuadruploReturn SEMICOLON RCURLY endFuncion','funcion_2',17,'p_funcion_2','main.py',336),
  ('guardaFuncion -> <empty>','guardaFuncion',0,'p_guardaFuncion','main.py',340),
  ('funcionGOTO -> <empty>','funcionGOTO',0,'p_funcionGOTO','main.py',354),
  ('endFuncion -> <empty>','endFuncion',0,'p_endFuncion','main.py',361),
  ('operadorReturn -> <empty>','operadorReturn',0,'p_operadorReturn','main.py',370),
  ('cuadruploReturn -> <empty>','cuadruploReturn',0,'p_cuadruploReturn','main.py',376),
  ('estatutos -> estatutos_2 estatutos','estatutos',2,'p_estatutos','main.py',395),
  ('estatutos -> <empty>','estatutos',0,'p_estatutos','main.py',396),
  ('estatutos_2 -> asignacion SEMICOLON','estatutos_2',2,'p_estatutos_2','main.py',402),
  ('estatutos_2 -> llamada SEMICOLON','estatutos_2',2,'p_estatutos_2','main.py',403),
  ('estatutos_2 -> lectura SEMICOLON','estatutos_2',2,'p_estatutos_2','main.py',404),
  ('estatutos_2 -> escritura SEMICOLON','estatutos_2',2,'p_estatutos_2','main.py',405),
  ('estatutos_2 -> for','estatutos_2',1,'p_estatutos_2','main.py',406),
  ('estatutos_2 -> if','estatutos_2',1,'p_estatutos_2','main.py',407),
  ('estatutos_2 -> while','estatutos_2',1,'p_estatutos_2','main.py',408),
  ('asignacion -> ID guardaVariable_2 EQUALS addOperadorName exp cuadruploAsignacion','asignacion',6,'p_asignacion','main.py',417),
  ('asignacion -> ID guardaVariable_2 arr EQUALS addOperadorName exp cuadruploAsignacion','asignacion',7,'p_asignacion','main.py',418),
  ('asignacion -> ID guardaVariable_2 mat EQUALS addOperadorName exp cuadruploAsignacion','asignacion',7,'p_asignacion','main.py',419),
  ('guardaVariable_2 -> <empty>','guardaVariable_2',0,'p_guardaVariable_2','main.py',423),
  ('addOperadorName -> <empty>','addOperadorName',0,'p_addOperadorName','main.py',442),
  ('cuadruploAsignacion -> <empty>','cuadruploAsignacion',0,'p_cuadruploAsignacion','main.py',448),
  ('param -> ID agregarParametro','param',2,'p_param','main.py',489),
  ('param -> ID COMMA param agregarParametro','param',4,'p_param','main.py',490),
  ('param -> ID arr','param',2,'p_param','main.py',491),
  ('param -> ID arr COMMA param','param',4,'p_param','main.py',492),
  ('param -> ID mat COMMA param','param',4,'p_param','main.py',493),
  ('param -> ID mat','param',2,'p_param','main.py',494),
  ('param -> ID mat especial','param',3,'p_param','main.py',495),
  ('param -> <empty>','param',0,'p_param','main.py',496),
  ('agregarParametro -> <empty>','agregarParametro',0,'p_agregarParametro','main.py',502),
  ('param2 -> param2 type param','param2',3,'p_param2','main.py',522),
  ('param2 -> <empty>','param2',0,'p_param2','main.py',523),
  ('llamada -> ID llamadaEra LPAREN auxiliarExp cuadruploParametros RPAREN cuadruploGoSub endProcesoLlena','llamada',8,'p_llamada','main.py',532),
  ('llamadaEra -> <empty>','llamadaEra',0,'p_llamadaEra','main.py',536),
  ('auxiliarExp -> exp','auxiliarExp',1,'p_auxiliarExp','main.py',546),
  ('auxiliarExp -> exp COMMA exp','auxiliarExp',3,'p_auxiliarExp','main.py',547),
  ('cuadruploParametros -> <empty>','cuadruploParametros',0,'p_cuadruploParametros','main.py',551),
  ('cuadruploGoSub -> <empty>','cuadruploGoSub',0,'p_cuadruploGoSub','main.py',573),
  ('endProcesoLlena -> <empty>','endProcesoLlena',0,'p_endProcesoLlena','main.py',585),
  ('lectura -> READ operadorRead LPAREN exp cuadruploRead RPAREN','lectura',6,'p_lectura','main.py',601),
  ('operadorRead -> <empty>','operadorRead',0,'p_operadorRead','main.py',605),
  ('cuadruploRead -> <empty>','cuadruploRead',0,'p_cuadruploRead','main.py',610),
  ('escritura -> PRINT LPAREN operadorPrint escritura1 cuadruploPrint RPAREN','escritura',6,'p_escritura','main.py',627),
  ('escritura1 -> escritura2 COMMA escritura2','escritura1',3,'p_escritura1','main.py',632),
  ('escritura1 -> escritura2','escritura1',1,'p_escritura1','main.py',633),
  ('escritura2 -> COMILLA CTESTRING COMILLA','escritura2',3,'p_escritura2','main.py',638),
  ('escritura2 -> exp cuadruploPrint','escritura2',2,'p_escritura2','main.py',639),
  ('operadorPrint -> <empty>','operadorPrint',0,'p_operadorPrint','main.py',643),
  ('cuadruploPrint -> <empty>','cuadruploPrint',0,'p_cuadruploPrint','main.py',648),
  ('guardaCTE -> <empty>','guardaCTE',0,'p_guardaCTE','main.py',661),
  ('for -> FOR operadorFor LPAREN for1 RPAREN cuadruploFor LCURLY estatutos RCURLY endFor','for',10,'p_for','main.py',696),
  ('for1 -> FROM asignacion TO exp','for1',4,'p_for1','main.py',701),
  ('operadorFor -> <empty>','operadorFor',0,'p_operadorFor','main.py',705),
  ('cuadruploFor -> <empty>','cuadruploFor',0,'p_cuadruploFor','main.py',713),
  ('endFor -> <empty>','endFor',0,'p_endFor','main.py',728),
  ('if -> IF LPAREN exp RPAREN cuadruploIf LCURLY estatutos RCURLY else endIf','if',10,'p_if','main.py',749),
  ('cuadruploIf -> <empty>','cuadruploIf',0,'p_cuadruploIf','main.py',753),
  ('endIf -> <empty>','endIf',0,'p_endIf','main.py',768),
  ('else -> ELSE cuadruploElse LCURLY estatutos RCURLY','else',5,'p_else','main.py',775),
  ('else -> <empty>','else',0,'p_else','main.py',776),
  ('cuadruploElse -> <empty>','cuadruploElse',0,'p_cuadruploElse','main.py',780),
  ('while -> WHILE operadorWhile LPAREN exp RPAREN cuadruploWhile LCURLY estatutos RCURLY endWhile','while',10,'p_while','main.py',795),
  ('operadorWhile -> <empty>','operadorWhile',0,'p_operadorWhile','main.py',799),
  ('cuadruploWhile -> <empty>','cuadruploWhile',0,'p_cuadruploWhile','main.py',806),
  ('endWhile -> <empty>','endWhile',0,'p_endWhile','main.py',821),
  ('exp -> nexp','exp',1,'p_exp','main.py',835),
  ('exp -> exp OR addOperadorName nexp cuadruploOr','exp',5,'p_exp','main.py',836),
  ('cuadruploOr -> <empty>','cuadruploOr',0,'p_cuadruploOr','main.py',840),
  ('nexp -> compexp1','nexp',1,'p_nexp','main.py',848),
  ('nexp -> nexp AND addOperadorName compexp1 cuadruploAnd','nexp',5,'p_nexp','main.py',849),
  ('cuadruploAnd -> <empty>','cuadruploAnd',0,'p_cuadruploAnd','main.py',853),
  ('compexp -> sumexp','compexp',1,'p_compexp','main.py',861),
  ('compexp -> compexp1 sumexp','compexp',2,'p_compexp','main.py',862),
  ('compexp1 -> compexp1 GT addOperadorName sumexp cuadruploComparacion','compexp1',5,'p_compexp1','main.py',867),
  ('compexp1 -> compexp1 LT addOperadorName sumexp cuadruploComparacion','compexp1',5,'p_compexp1','main.py',868),
  ('compexp1 -> compexp1 GTE addOperadorName sumexp cuadruploComparacion','compexp1',5,'p_compexp1','main.py',869),
  ('compexp1 -> compexp1 LTE addOperadorName sumexp cuadruploComparacion','compexp1',5,'p_compexp1','main.py',870),
  ('compexp1 -> compexp1 NE addOperadorName sumexp cuadruploComparacion','compexp1',5,'p_compexp1','main.py',871),
  ('compexp1 -> compexp1 COMPARE addOperadorName sumexp cuadruploComparacion','compexp1',5,'p_compexp1','main.py',872),
  ('compexp1 -> sumexp','compexp1',1,'p_compexp1','main.py',873),
  ('cuadruploComparacion -> <empty>','cuadruploComparacion',0,'p_cuadruploComparacion','main.py',877),
  ('sumexp -> mulexp','sumexp',1,'p_sumexp','main.py',885),
  ('sumexp -> sumexp PLUS addOperadorName mulexp cuadruploSuma','sumexp',5,'p_sumexp','main.py',886),
  ('sumexp -> sumexp MINUS addOperadorName mulexp cuadruploSuma','sumexp',5,'p_sumexp','main.py',887),
  ('cuadruploSuma -> <empty>','cuadruploSuma',0,'p_cuadruploSuma','main.py',891),
  ('mulexp -> pexp','mulexp',1,'p_mulexp','main.py',899),
  ('mulexp -> mulexp MUL addOperadorName pexp cuadruploMultiplicacion','mulexp',5,'p_mulexp','main.py',900),
  ('mulexp -> mulexp DIV addOperadorName pexp cuadruploMultiplicacion','mulexp',5,'p_mulexp','main.py',901),
  ('cuadruploMultiplicacion -> <empty>','cuadruploMultiplicacion',0,'p_cuadruploMultiplicacion','main.py',905),
  ('pexp -> var1 guardaID','pexp',2,'p_pexp','main.py',913),
  ('pexp -> CTEI guardaCTE','pexp',2,'p_pexp','main.py',914),
  ('pexp -> CTEF guardaCTE','pexp',2,'p_pexp','main.py',915),
  ('pexp -> CTEC guardaCTE','pexp',2,'p_pexp','main.py',916),
  ('pexp -> CTESTRING guardaCTE','pexp',2,'p_pexp','main.py',917),
  ('pexp -> llamada','pexp',1,'p_pexp','main.py',918),
  ('pexp -> LPAREN exp RPAREN','pexp',3,'p_pexp','main.py',919),
  ('guardaID -> <empty>','guardaID',0,'p_guardaID','main.py',923),
]
