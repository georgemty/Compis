Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LTE
    MUL
    DIV
    MINUS
    NE
    LT
    PLUS
    GT
    GTE
    AND
    FROM
    CTEC
    OR

Grammar

Rule 0     S' -> prog
Rule 1     prog -> PROGRAM ID SEMICOLON prog_1 END
Rule 2     prog_1 -> var methods main_1
Rule 3     main_1 -> MAIN LPAREN RPAREN LCURLY estatutos RCURLY
Rule 4     estatutos -> asignacion SEMICOLON estatutos
Rule 5     estatutos -> llamadaFun estatutos
Rule 6     estatutos -> lectura estatutos
Rule 7     estatutos -> escritura estatutos
Rule 8     estatutos -> for estatutos
Rule 9     estatutos -> while estatutos
Rule 10    estatutos -> if estatutos
Rule 11    estatutos -> empty
Rule 12    for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY
Rule 13    while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
Rule 14    if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
Rule 15    else -> ELSE LCURLY estatutos RCURLY
Rule 16    else -> empty
Rule 17    return -> RETURN expresion SEMICOLON
Rule 18    expresion -> CTEI
Rule 19    expresion -> CTEF
Rule 20    arreglos -> type ID LBRACKET CTEI RBRACKET arrAux SEMICOLON
Rule 21    arrAux -> COMMA ID LBRACKET CTEI RBRACKET
Rule 22    arrAux -> empty
Rule 23    escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON
Rule 24    escrituraAux -> ID
Rule 25    escrituraAux -> COMILLA CTESTRING COMILLA
Rule 26    escrituraAux -> COMILLA CTESTRING COMILLA COMMA ID
Rule 27    lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON
Rule 28    lecturaAux -> ID lecturaAux2
Rule 29    lecturaAux2 -> COMMA lecturaAux
Rule 30    lecturaAux2 -> empty
Rule 31    asignacion -> ID EQUALS expresion
Rule 32    llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON
Rule 33    var -> VAR var1
Rule 34    var -> empty
Rule 35    var1 -> type ID varMulti SEMICOLON var2
Rule 36    var1 -> arreglos
Rule 37    var2 -> var1
Rule 38    var2 -> empty
Rule 39    varMulti -> COMMA ID varMulti
Rule 40    varMulti -> empty
Rule 41    type -> INT
Rule 42    type -> FLOAT
Rule 43    type -> CHAR
Rule 44    methods -> FUNCION VOID ID LPAREN argumentos RPAREN var LCURLY estatutos RCURLY methods
Rule 45    methods -> FUNCION type ID LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY methods
Rule 46    methods -> empty
Rule 47    argumentos -> type ID multiArg
Rule 48    argumentos -> empty
Rule 49    multiArg -> COMMA argumentos
Rule 50    multiArg -> empty
Rule 51    empty -> <empty>

Terminals, with rules where they appear

AND                  : 
CHAR                 : 43
COMILLA              : 25 25 26 26
COMMA                : 21 26 29 39 49
CTEC                 : 
CTEF                 : 19
CTEI                 : 12 18 20 21
CTESTRING            : 25 26
DIV                  : 
ELSE                 : 15
END                  : 1
EQUALS               : 31
FLOAT                : 42
FOR                  : 12
FROM                 : 
FUNCION              : 44 45
GT                   : 
GTE                  : 
ID                   : 1 20 21 24 26 28 31 32 35 39 44 45 47
IF                   : 14
INT                  : 41
LBRACKET             : 20 21
LCURLY               : 3 12 13 14 15 44 45
LPAREN               : 3 13 14 23 27 32 44 45
LT                   : 
LTE                  : 
MAIN                 : 3
MINUS                : 
MUL                  : 
NE                   : 
OR                   : 
PLUS                 : 
PRINT                : 23
PROGRAM              : 1
RBRACKET             : 20 21
RCURLY               : 3 12 13 14 15 44 45
READ                 : 27
RETURN               : 17
RPAREN               : 3 13 14 23 27 32 44 45
SEMICOLON            : 1 4 17 20 23 27 32 35
THEN                 : 14
TO                   : 12
VAR                  : 33
VOID                 : 44
WHILE                : 13
error                : 

Nonterminals, with rules where they appear

argumentos           : 44 45 49
arrAux               : 20
arreglos             : 36
asignacion           : 4 12
else                 : 14
empty                : 11 16 22 30 34 38 40 46 48 50
escritura            : 7
escrituraAux         : 23
estatutos            : 3 4 5 6 7 8 9 10 12 13 14 15 44 45
expresion            : 13 14 17 31 32
for                  : 8
if                   : 10
lectura              : 6
lecturaAux           : 27 29
lecturaAux2          : 28
llamadaFun           : 5
main_1               : 2
methods              : 2 44 45
multiArg             : 47
prog                 : 0
prog_1               : 1
return               : 45
type                 : 20 35 45 47
var                  : 2 44 45
var1                 : 33 37
var2                 : 35
varMulti             : 35 39
while                : 9

Parsing method: LALR

state 0

    (0) S' -> . prog
    (1) prog -> . PROGRAM ID SEMICOLON prog_1 END

    PROGRAM         shift and go to state 1

    prog                           shift and go to state 2

state 1

    (1) prog -> PROGRAM . ID SEMICOLON prog_1 END

    ID              shift and go to state 3


state 2

    (0) S' -> prog .



state 3

    (1) prog -> PROGRAM ID . SEMICOLON prog_1 END

    SEMICOLON       shift and go to state 4


state 4

    (1) prog -> PROGRAM ID SEMICOLON . prog_1 END
    (2) prog_1 -> . var methods main_1
    (33) var -> . VAR var1
    (34) var -> . empty
    (51) empty -> .

    VAR             shift and go to state 7
    FUNCION         reduce using rule 51 (empty -> .)
    MAIN            reduce using rule 51 (empty -> .)

    prog_1                         shift and go to state 5
    var                            shift and go to state 6
    empty                          shift and go to state 8

state 5

    (1) prog -> PROGRAM ID SEMICOLON prog_1 . END

    END             shift and go to state 9


state 6

    (2) prog_1 -> var . methods main_1
    (44) methods -> . FUNCION VOID ID LPAREN argumentos RPAREN var LCURLY estatutos RCURLY methods
    (45) methods -> . FUNCION type ID LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY methods
    (46) methods -> . empty
    (51) empty -> .

    FUNCION         shift and go to state 12
    MAIN            reduce using rule 51 (empty -> .)

    methods                        shift and go to state 10
    empty                          shift and go to state 11

state 7

    (33) var -> VAR . var1
    (35) var1 -> . type ID varMulti SEMICOLON var2
    (36) var1 -> . arreglos
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR
    (20) arreglos -> . type ID LBRACKET CTEI RBRACKET arrAux SEMICOLON

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    var1                           shift and go to state 13
    arreglos                       shift and go to state 17
    type                           shift and go to state 18

state 8

    (34) var -> empty .

    FUNCION         reduce using rule 34 (var -> empty .)
    MAIN            reduce using rule 34 (var -> empty .)
    LCURLY          reduce using rule 34 (var -> empty .)


state 9

    (1) prog -> PROGRAM ID SEMICOLON prog_1 END .

    $end            reduce using rule 1 (prog -> PROGRAM ID SEMICOLON prog_1 END .)


state 10

    (2) prog_1 -> var methods . main_1
    (3) main_1 -> . MAIN LPAREN RPAREN LCURLY estatutos RCURLY

    MAIN            shift and go to state 20

    main_1                         shift and go to state 19

state 11

    (46) methods -> empty .

    MAIN            reduce using rule 46 (methods -> empty .)


state 12

    (44) methods -> FUNCION . VOID ID LPAREN argumentos RPAREN var LCURLY estatutos RCURLY methods
    (45) methods -> FUNCION . type ID LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY methods
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR

    VOID            shift and go to state 21
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    type                           shift and go to state 22

state 13

    (33) var -> VAR var1 .

    FUNCION         reduce using rule 33 (var -> VAR var1 .)
    MAIN            reduce using rule 33 (var -> VAR var1 .)
    LCURLY          reduce using rule 33 (var -> VAR var1 .)


state 14

    (41) type -> INT .

    ID              reduce using rule 41 (type -> INT .)


state 15

    (42) type -> FLOAT .

    ID              reduce using rule 42 (type -> FLOAT .)


state 16

    (43) type -> CHAR .

    ID              reduce using rule 43 (type -> CHAR .)


state 17

    (36) var1 -> arreglos .

    FUNCION         reduce using rule 36 (var1 -> arreglos .)
    MAIN            reduce using rule 36 (var1 -> arreglos .)
    LCURLY          reduce using rule 36 (var1 -> arreglos .)


state 18

    (35) var1 -> type . ID varMulti SEMICOLON var2
    (20) arreglos -> type . ID LBRACKET CTEI RBRACKET arrAux SEMICOLON

    ID              shift and go to state 23


state 19

    (2) prog_1 -> var methods main_1 .

    END             reduce using rule 2 (prog_1 -> var methods main_1 .)


state 20

    (3) main_1 -> MAIN . LPAREN RPAREN LCURLY estatutos RCURLY

    LPAREN          shift and go to state 24


state 21

    (44) methods -> FUNCION VOID . ID LPAREN argumentos RPAREN var LCURLY estatutos RCURLY methods

    ID              shift and go to state 25


state 22

    (45) methods -> FUNCION type . ID LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY methods

    ID              shift and go to state 26


state 23

    (35) var1 -> type ID . varMulti SEMICOLON var2
    (20) arreglos -> type ID . LBRACKET CTEI RBRACKET arrAux SEMICOLON
    (39) varMulti -> . COMMA ID varMulti
    (40) varMulti -> . empty
    (51) empty -> .

    LBRACKET        shift and go to state 28
    COMMA           shift and go to state 29
    SEMICOLON       reduce using rule 51 (empty -> .)

    varMulti                       shift and go to state 27
    empty                          shift and go to state 30

state 24

    (3) main_1 -> MAIN LPAREN . RPAREN LCURLY estatutos RCURLY

    RPAREN          shift and go to state 31


state 25

    (44) methods -> FUNCION VOID ID . LPAREN argumentos RPAREN var LCURLY estatutos RCURLY methods

    LPAREN          shift and go to state 32


state 26

    (45) methods -> FUNCION type ID . LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY methods

    LPAREN          shift and go to state 33


state 27

    (35) var1 -> type ID varMulti . SEMICOLON var2

    SEMICOLON       shift and go to state 34


state 28

    (20) arreglos -> type ID LBRACKET . CTEI RBRACKET arrAux SEMICOLON

    CTEI            shift and go to state 35


state 29

    (39) varMulti -> COMMA . ID varMulti

    ID              shift and go to state 36


state 30

    (40) varMulti -> empty .

    SEMICOLON       reduce using rule 40 (varMulti -> empty .)


state 31

    (3) main_1 -> MAIN LPAREN RPAREN . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 37


state 32

    (44) methods -> FUNCION VOID ID LPAREN . argumentos RPAREN var LCURLY estatutos RCURLY methods
    (47) argumentos -> . type ID multiArg
    (48) argumentos -> . empty
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR
    (51) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    RPAREN          reduce using rule 51 (empty -> .)

    argumentos                     shift and go to state 38
    type                           shift and go to state 39
    empty                          shift and go to state 40

state 33

    (45) methods -> FUNCION type ID LPAREN . argumentos RPAREN var LCURLY estatutos return RCURLY methods
    (47) argumentos -> . type ID multiArg
    (48) argumentos -> . empty
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR
    (51) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    RPAREN          reduce using rule 51 (empty -> .)

    argumentos                     shift and go to state 41
    type                           shift and go to state 39
    empty                          shift and go to state 40

state 34

    (35) var1 -> type ID varMulti SEMICOLON . var2
    (37) var2 -> . var1
    (38) var2 -> . empty
    (35) var1 -> . type ID varMulti SEMICOLON var2
    (36) var1 -> . arreglos
    (51) empty -> .
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR
    (20) arreglos -> . type ID LBRACKET CTEI RBRACKET arrAux SEMICOLON

    FUNCION         reduce using rule 51 (empty -> .)
    MAIN            reduce using rule 51 (empty -> .)
    LCURLY          reduce using rule 51 (empty -> .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    var1                           shift and go to state 42
    var2                           shift and go to state 43
    arreglos                       shift and go to state 17
    type                           shift and go to state 18
    empty                          shift and go to state 44

state 35

    (20) arreglos -> type ID LBRACKET CTEI . RBRACKET arrAux SEMICOLON

    RBRACKET        shift and go to state 45


state 36

    (39) varMulti -> COMMA ID . varMulti
    (39) varMulti -> . COMMA ID varMulti
    (40) varMulti -> . empty
    (51) empty -> .

    COMMA           shift and go to state 29
    SEMICOLON       reduce using rule 51 (empty -> .)

    varMulti                       shift and go to state 46
    empty                          shift and go to state 30

state 37

    (3) main_1 -> MAIN LPAREN RPAREN LCURLY . estatutos RCURLY
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)

    asignacion                     shift and go to state 59
    for                            shift and go to state 58
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 55
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 38

    (44) methods -> FUNCION VOID ID LPAREN argumentos . RPAREN var LCURLY estatutos RCURLY methods

    RPAREN          shift and go to state 62


state 39

    (47) argumentos -> type . ID multiArg

    ID              shift and go to state 63


state 40

    (48) argumentos -> empty .

    RPAREN          reduce using rule 48 (argumentos -> empty .)


state 41

    (45) methods -> FUNCION type ID LPAREN argumentos . RPAREN var LCURLY estatutos return RCURLY methods

    RPAREN          shift and go to state 64


state 42

    (37) var2 -> var1 .

    FUNCION         reduce using rule 37 (var2 -> var1 .)
    MAIN            reduce using rule 37 (var2 -> var1 .)
    LCURLY          reduce using rule 37 (var2 -> var1 .)


state 43

    (35) var1 -> type ID varMulti SEMICOLON var2 .

    FUNCION         reduce using rule 35 (var1 -> type ID varMulti SEMICOLON var2 .)
    MAIN            reduce using rule 35 (var1 -> type ID varMulti SEMICOLON var2 .)
    LCURLY          reduce using rule 35 (var1 -> type ID varMulti SEMICOLON var2 .)


state 44

    (38) var2 -> empty .

    FUNCION         reduce using rule 38 (var2 -> empty .)
    MAIN            reduce using rule 38 (var2 -> empty .)
    LCURLY          reduce using rule 38 (var2 -> empty .)


state 45

    (20) arreglos -> type ID LBRACKET CTEI RBRACKET . arrAux SEMICOLON
    (21) arrAux -> . COMMA ID LBRACKET CTEI RBRACKET
    (22) arrAux -> . empty
    (51) empty -> .

    COMMA           shift and go to state 66
    SEMICOLON       reduce using rule 51 (empty -> .)

    empty                          shift and go to state 67
    arrAux                         shift and go to state 65

state 46

    (39) varMulti -> COMMA ID varMulti .

    SEMICOLON       reduce using rule 39 (varMulti -> COMMA ID varMulti .)


state 47

    (27) lectura -> READ . LPAREN lecturaAux RPAREN SEMICOLON

    LPAREN          shift and go to state 68


state 48

    (13) while -> WHILE . LPAREN expresion RPAREN LCURLY estatutos RCURLY

    LPAREN          shift and go to state 69


state 49

    (23) escritura -> PRINT . LPAREN escrituraAux RPAREN SEMICOLON

    LPAREN          shift and go to state 70


state 50

    (10) estatutos -> if . estatutos
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)
    RETURN          reduce using rule 51 (empty -> .)

    for                            shift and go to state 58
    asignacion                     shift and go to state 59
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 71
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 51

    (5) estatutos -> llamadaFun . estatutos
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)
    RETURN          reduce using rule 51 (empty -> .)

    asignacion                     shift and go to state 59
    for                            shift and go to state 58
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 72
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 52

    (6) estatutos -> lectura . estatutos
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)
    RETURN          reduce using rule 51 (empty -> .)

    asignacion                     shift and go to state 59
    for                            shift and go to state 58
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 73
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 53

    (11) estatutos -> empty .

    RCURLY          reduce using rule 11 (estatutos -> empty .)
    RETURN          reduce using rule 11 (estatutos -> empty .)


state 54

    (12) for -> FOR . asignacion TO CTEI LCURLY estatutos RCURLY
    (31) asignacion -> . ID EQUALS expresion

    ID              shift and go to state 75

    asignacion                     shift and go to state 74

state 55

    (3) main_1 -> MAIN LPAREN RPAREN LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 76


state 56

    (31) asignacion -> ID . EQUALS expresion
    (32) llamadaFun -> ID . LPAREN expresion RPAREN SEMICOLON

    EQUALS          shift and go to state 77
    LPAREN          shift and go to state 78


state 57

    (14) if -> IF . LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else

    LPAREN          shift and go to state 79


state 58

    (8) estatutos -> for . estatutos
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)
    RETURN          reduce using rule 51 (empty -> .)

    for                            shift and go to state 58
    asignacion                     shift and go to state 59
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 80
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 59

    (4) estatutos -> asignacion . SEMICOLON estatutos

    SEMICOLON       shift and go to state 81


state 60

    (9) estatutos -> while . estatutos
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)
    RETURN          reduce using rule 51 (empty -> .)

    for                            shift and go to state 58
    asignacion                     shift and go to state 59
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 82
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 61

    (7) estatutos -> escritura . estatutos
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)
    RETURN          reduce using rule 51 (empty -> .)

    asignacion                     shift and go to state 59
    for                            shift and go to state 58
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 83
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 62

    (44) methods -> FUNCION VOID ID LPAREN argumentos RPAREN . var LCURLY estatutos RCURLY methods
    (33) var -> . VAR var1
    (34) var -> . empty
    (51) empty -> .

    VAR             shift and go to state 7
    LCURLY          reduce using rule 51 (empty -> .)

    var                            shift and go to state 84
    empty                          shift and go to state 8

state 63

    (47) argumentos -> type ID . multiArg
    (49) multiArg -> . COMMA argumentos
    (50) multiArg -> . empty
    (51) empty -> .

    COMMA           shift and go to state 86
    RPAREN          reduce using rule 51 (empty -> .)

    multiArg                       shift and go to state 85
    empty                          shift and go to state 87

state 64

    (45) methods -> FUNCION type ID LPAREN argumentos RPAREN . var LCURLY estatutos return RCURLY methods
    (33) var -> . VAR var1
    (34) var -> . empty
    (51) empty -> .

    VAR             shift and go to state 7
    LCURLY          reduce using rule 51 (empty -> .)

    var                            shift and go to state 88
    empty                          shift and go to state 8

state 65

    (20) arreglos -> type ID LBRACKET CTEI RBRACKET arrAux . SEMICOLON

    SEMICOLON       shift and go to state 89


state 66

    (21) arrAux -> COMMA . ID LBRACKET CTEI RBRACKET

    ID              shift and go to state 90


state 67

    (22) arrAux -> empty .

    SEMICOLON       reduce using rule 22 (arrAux -> empty .)


state 68

    (27) lectura -> READ LPAREN . lecturaAux RPAREN SEMICOLON
    (28) lecturaAux -> . ID lecturaAux2

    ID              shift and go to state 92

    lecturaAux                     shift and go to state 91

state 69

    (13) while -> WHILE LPAREN . expresion RPAREN LCURLY estatutos RCURLY
    (18) expresion -> . CTEI
    (19) expresion -> . CTEF

    CTEI            shift and go to state 95
    CTEF            shift and go to state 94

    expresion                      shift and go to state 93

state 70

    (23) escritura -> PRINT LPAREN . escrituraAux RPAREN SEMICOLON
    (24) escrituraAux -> . ID
    (25) escrituraAux -> . COMILLA CTESTRING COMILLA
    (26) escrituraAux -> . COMILLA CTESTRING COMILLA COMMA ID

    ID              shift and go to state 98
    COMILLA         shift and go to state 97

    escrituraAux                   shift and go to state 96

state 71

    (10) estatutos -> if estatutos .

    RCURLY          reduce using rule 10 (estatutos -> if estatutos .)
    RETURN          reduce using rule 10 (estatutos -> if estatutos .)


state 72

    (5) estatutos -> llamadaFun estatutos .

    RCURLY          reduce using rule 5 (estatutos -> llamadaFun estatutos .)
    RETURN          reduce using rule 5 (estatutos -> llamadaFun estatutos .)


state 73

    (6) estatutos -> lectura estatutos .

    RCURLY          reduce using rule 6 (estatutos -> lectura estatutos .)
    RETURN          reduce using rule 6 (estatutos -> lectura estatutos .)


state 74

    (12) for -> FOR asignacion . TO CTEI LCURLY estatutos RCURLY

    TO              shift and go to state 99


state 75

    (31) asignacion -> ID . EQUALS expresion

    EQUALS          shift and go to state 77


state 76

    (3) main_1 -> MAIN LPAREN RPAREN LCURLY estatutos RCURLY .

    END             reduce using rule 3 (main_1 -> MAIN LPAREN RPAREN LCURLY estatutos RCURLY .)


state 77

    (31) asignacion -> ID EQUALS . expresion
    (18) expresion -> . CTEI
    (19) expresion -> . CTEF

    CTEI            shift and go to state 95
    CTEF            shift and go to state 94

    expresion                      shift and go to state 100

state 78

    (32) llamadaFun -> ID LPAREN . expresion RPAREN SEMICOLON
    (18) expresion -> . CTEI
    (19) expresion -> . CTEF

    CTEI            shift and go to state 95
    CTEF            shift and go to state 94

    expresion                      shift and go to state 101

state 79

    (14) if -> IF LPAREN . expresion RPAREN THEN LCURLY estatutos RCURLY else
    (18) expresion -> . CTEI
    (19) expresion -> . CTEF

    CTEI            shift and go to state 95
    CTEF            shift and go to state 94

    expresion                      shift and go to state 102

state 80

    (8) estatutos -> for estatutos .

    RCURLY          reduce using rule 8 (estatutos -> for estatutos .)
    RETURN          reduce using rule 8 (estatutos -> for estatutos .)


state 81

    (4) estatutos -> asignacion SEMICOLON . estatutos
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)
    RETURN          reduce using rule 51 (empty -> .)

    asignacion                     shift and go to state 59
    for                            shift and go to state 58
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 103
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 82

    (9) estatutos -> while estatutos .

    RCURLY          reduce using rule 9 (estatutos -> while estatutos .)
    RETURN          reduce using rule 9 (estatutos -> while estatutos .)


state 83

    (7) estatutos -> escritura estatutos .

    RCURLY          reduce using rule 7 (estatutos -> escritura estatutos .)
    RETURN          reduce using rule 7 (estatutos -> escritura estatutos .)


state 84

    (44) methods -> FUNCION VOID ID LPAREN argumentos RPAREN var . LCURLY estatutos RCURLY methods

    LCURLY          shift and go to state 104


state 85

    (47) argumentos -> type ID multiArg .

    RPAREN          reduce using rule 47 (argumentos -> type ID multiArg .)


state 86

    (49) multiArg -> COMMA . argumentos
    (47) argumentos -> . type ID multiArg
    (48) argumentos -> . empty
    (41) type -> . INT
    (42) type -> . FLOAT
    (43) type -> . CHAR
    (51) empty -> .

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16
    RPAREN          reduce using rule 51 (empty -> .)

    argumentos                     shift and go to state 105
    type                           shift and go to state 39
    empty                          shift and go to state 40

state 87

    (50) multiArg -> empty .

    RPAREN          reduce using rule 50 (multiArg -> empty .)


state 88

    (45) methods -> FUNCION type ID LPAREN argumentos RPAREN var . LCURLY estatutos return RCURLY methods

    LCURLY          shift and go to state 106


state 89

    (20) arreglos -> type ID LBRACKET CTEI RBRACKET arrAux SEMICOLON .

    FUNCION         reduce using rule 20 (arreglos -> type ID LBRACKET CTEI RBRACKET arrAux SEMICOLON .)
    MAIN            reduce using rule 20 (arreglos -> type ID LBRACKET CTEI RBRACKET arrAux SEMICOLON .)
    LCURLY          reduce using rule 20 (arreglos -> type ID LBRACKET CTEI RBRACKET arrAux SEMICOLON .)


state 90

    (21) arrAux -> COMMA ID . LBRACKET CTEI RBRACKET

    LBRACKET        shift and go to state 107


state 91

    (27) lectura -> READ LPAREN lecturaAux . RPAREN SEMICOLON

    RPAREN          shift and go to state 108


state 92

    (28) lecturaAux -> ID . lecturaAux2
    (29) lecturaAux2 -> . COMMA lecturaAux
    (30) lecturaAux2 -> . empty
    (51) empty -> .

    COMMA           shift and go to state 110
    RPAREN          reduce using rule 51 (empty -> .)

    lecturaAux2                    shift and go to state 109
    empty                          shift and go to state 111

state 93

    (13) while -> WHILE LPAREN expresion . RPAREN LCURLY estatutos RCURLY

    RPAREN          shift and go to state 112


state 94

    (19) expresion -> CTEF .

    RPAREN          reduce using rule 19 (expresion -> CTEF .)
    SEMICOLON       reduce using rule 19 (expresion -> CTEF .)
    TO              reduce using rule 19 (expresion -> CTEF .)


state 95

    (18) expresion -> CTEI .

    RPAREN          reduce using rule 18 (expresion -> CTEI .)
    SEMICOLON       reduce using rule 18 (expresion -> CTEI .)
    TO              reduce using rule 18 (expresion -> CTEI .)


state 96

    (23) escritura -> PRINT LPAREN escrituraAux . RPAREN SEMICOLON

    RPAREN          shift and go to state 113


state 97

    (25) escrituraAux -> COMILLA . CTESTRING COMILLA
    (26) escrituraAux -> COMILLA . CTESTRING COMILLA COMMA ID

    CTESTRING       shift and go to state 114


state 98

    (24) escrituraAux -> ID .

    RPAREN          reduce using rule 24 (escrituraAux -> ID .)


state 99

    (12) for -> FOR asignacion TO . CTEI LCURLY estatutos RCURLY

    CTEI            shift and go to state 115


state 100

    (31) asignacion -> ID EQUALS expresion .

    SEMICOLON       reduce using rule 31 (asignacion -> ID EQUALS expresion .)
    TO              reduce using rule 31 (asignacion -> ID EQUALS expresion .)


state 101

    (32) llamadaFun -> ID LPAREN expresion . RPAREN SEMICOLON

    RPAREN          shift and go to state 116


state 102

    (14) if -> IF LPAREN expresion . RPAREN THEN LCURLY estatutos RCURLY else

    RPAREN          shift and go to state 117


state 103

    (4) estatutos -> asignacion SEMICOLON estatutos .

    RCURLY          reduce using rule 4 (estatutos -> asignacion SEMICOLON estatutos .)
    RETURN          reduce using rule 4 (estatutos -> asignacion SEMICOLON estatutos .)


state 104

    (44) methods -> FUNCION VOID ID LPAREN argumentos RPAREN var LCURLY . estatutos RCURLY methods
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)

    asignacion                     shift and go to state 59
    for                            shift and go to state 58
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 118
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 105

    (49) multiArg -> COMMA argumentos .

    RPAREN          reduce using rule 49 (multiArg -> COMMA argumentos .)


state 106

    (45) methods -> FUNCION type ID LPAREN argumentos RPAREN var LCURLY . estatutos return RCURLY methods
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RETURN          reduce using rule 51 (empty -> .)

    asignacion                     shift and go to state 59
    for                            shift and go to state 58
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 119
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 107

    (21) arrAux -> COMMA ID LBRACKET . CTEI RBRACKET

    CTEI            shift and go to state 120


state 108

    (27) lectura -> READ LPAREN lecturaAux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 121


state 109

    (28) lecturaAux -> ID lecturaAux2 .

    RPAREN          reduce using rule 28 (lecturaAux -> ID lecturaAux2 .)


state 110

    (29) lecturaAux2 -> COMMA . lecturaAux
    (28) lecturaAux -> . ID lecturaAux2

    ID              shift and go to state 92

    lecturaAux                     shift and go to state 122

state 111

    (30) lecturaAux2 -> empty .

    RPAREN          reduce using rule 30 (lecturaAux2 -> empty .)


state 112

    (13) while -> WHILE LPAREN expresion RPAREN . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 123


state 113

    (23) escritura -> PRINT LPAREN escrituraAux RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 124


state 114

    (25) escrituraAux -> COMILLA CTESTRING . COMILLA
    (26) escrituraAux -> COMILLA CTESTRING . COMILLA COMMA ID

    COMILLA         shift and go to state 125


state 115

    (12) for -> FOR asignacion TO CTEI . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 126


state 116

    (32) llamadaFun -> ID LPAREN expresion RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 127


state 117

    (14) if -> IF LPAREN expresion RPAREN . THEN LCURLY estatutos RCURLY else

    THEN            shift and go to state 128


state 118

    (44) methods -> FUNCION VOID ID LPAREN argumentos RPAREN var LCURLY estatutos . RCURLY methods

    RCURLY          shift and go to state 129


state 119

    (45) methods -> FUNCION type ID LPAREN argumentos RPAREN var LCURLY estatutos . return RCURLY methods
    (17) return -> . RETURN expresion SEMICOLON

    RETURN          shift and go to state 130

    return                         shift and go to state 131

state 120

    (21) arrAux -> COMMA ID LBRACKET CTEI . RBRACKET

    RBRACKET        shift and go to state 132


state 121

    (27) lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON .

    ID              reduce using rule 27 (lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON .)
    READ            reduce using rule 27 (lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON .)
    PRINT           reduce using rule 27 (lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON .)
    FOR             reduce using rule 27 (lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON .)
    WHILE           reduce using rule 27 (lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON .)
    IF              reduce using rule 27 (lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON .)
    RCURLY          reduce using rule 27 (lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON .)
    RETURN          reduce using rule 27 (lectura -> READ LPAREN lecturaAux RPAREN SEMICOLON .)


state 122

    (29) lecturaAux2 -> COMMA lecturaAux .

    RPAREN          reduce using rule 29 (lecturaAux2 -> COMMA lecturaAux .)


state 123

    (13) while -> WHILE LPAREN expresion RPAREN LCURLY . estatutos RCURLY
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)

    for                            shift and go to state 58
    asignacion                     shift and go to state 59
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 133
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 124

    (23) escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .

    ID              reduce using rule 23 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    READ            reduce using rule 23 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    PRINT           reduce using rule 23 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    FOR             reduce using rule 23 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    WHILE           reduce using rule 23 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    IF              reduce using rule 23 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    RCURLY          reduce using rule 23 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)
    RETURN          reduce using rule 23 (escritura -> PRINT LPAREN escrituraAux RPAREN SEMICOLON .)


state 125

    (25) escrituraAux -> COMILLA CTESTRING COMILLA .
    (26) escrituraAux -> COMILLA CTESTRING COMILLA . COMMA ID

    RPAREN          reduce using rule 25 (escrituraAux -> COMILLA CTESTRING COMILLA .)
    COMMA           shift and go to state 134


state 126

    (12) for -> FOR asignacion TO CTEI LCURLY . estatutos RCURLY
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)

    asignacion                     shift and go to state 59
    for                            shift and go to state 58
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 135
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 127

    (32) llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON .

    ID              reduce using rule 32 (llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON .)
    READ            reduce using rule 32 (llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON .)
    PRINT           reduce using rule 32 (llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON .)
    FOR             reduce using rule 32 (llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON .)
    WHILE           reduce using rule 32 (llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON .)
    IF              reduce using rule 32 (llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON .)
    RCURLY          reduce using rule 32 (llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON .)
    RETURN          reduce using rule 32 (llamadaFun -> ID LPAREN expresion RPAREN SEMICOLON .)


state 128

    (14) if -> IF LPAREN expresion RPAREN THEN . LCURLY estatutos RCURLY else

    LCURLY          shift and go to state 136


state 129

    (44) methods -> FUNCION VOID ID LPAREN argumentos RPAREN var LCURLY estatutos RCURLY . methods
    (44) methods -> . FUNCION VOID ID LPAREN argumentos RPAREN var LCURLY estatutos RCURLY methods
    (45) methods -> . FUNCION type ID LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY methods
    (46) methods -> . empty
    (51) empty -> .

    FUNCION         shift and go to state 12
    MAIN            reduce using rule 51 (empty -> .)

    methods                        shift and go to state 137
    empty                          shift and go to state 11

state 130

    (17) return -> RETURN . expresion SEMICOLON
    (18) expresion -> . CTEI
    (19) expresion -> . CTEF

    CTEI            shift and go to state 95
    CTEF            shift and go to state 94

    expresion                      shift and go to state 138

state 131

    (45) methods -> FUNCION type ID LPAREN argumentos RPAREN var LCURLY estatutos return . RCURLY methods

    RCURLY          shift and go to state 139


state 132

    (21) arrAux -> COMMA ID LBRACKET CTEI RBRACKET .

    SEMICOLON       reduce using rule 21 (arrAux -> COMMA ID LBRACKET CTEI RBRACKET .)


state 133

    (13) while -> WHILE LPAREN expresion RPAREN LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 140


state 134

    (26) escrituraAux -> COMILLA CTESTRING COMILLA COMMA . ID

    ID              shift and go to state 141


state 135

    (12) for -> FOR asignacion TO CTEI LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 142


state 136

    (14) if -> IF LPAREN expresion RPAREN THEN LCURLY . estatutos RCURLY else
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)

    for                            shift and go to state 58
    asignacion                     shift and go to state 59
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 143
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 137

    (44) methods -> FUNCION VOID ID LPAREN argumentos RPAREN var LCURLY estatutos RCURLY methods .

    MAIN            reduce using rule 44 (methods -> FUNCION VOID ID LPAREN argumentos RPAREN var LCURLY estatutos RCURLY methods .)


state 138

    (17) return -> RETURN expresion . SEMICOLON

    SEMICOLON       shift and go to state 144


state 139

    (45) methods -> FUNCION type ID LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY . methods
    (44) methods -> . FUNCION VOID ID LPAREN argumentos RPAREN var LCURLY estatutos RCURLY methods
    (45) methods -> . FUNCION type ID LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY methods
    (46) methods -> . empty
    (51) empty -> .

    FUNCION         shift and go to state 12
    MAIN            reduce using rule 51 (empty -> .)

    methods                        shift and go to state 145
    empty                          shift and go to state 11

state 140

    (13) while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY .

    ID              reduce using rule 13 (while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY .)
    READ            reduce using rule 13 (while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY .)
    PRINT           reduce using rule 13 (while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY .)
    FOR             reduce using rule 13 (while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY .)
    WHILE           reduce using rule 13 (while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY .)
    IF              reduce using rule 13 (while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 13 (while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY .)
    RETURN          reduce using rule 13 (while -> WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY .)


state 141

    (26) escrituraAux -> COMILLA CTESTRING COMILLA COMMA ID .

    RPAREN          reduce using rule 26 (escrituraAux -> COMILLA CTESTRING COMILLA COMMA ID .)


state 142

    (12) for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY .

    ID              reduce using rule 12 (for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY .)
    READ            reduce using rule 12 (for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY .)
    PRINT           reduce using rule 12 (for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY .)
    FOR             reduce using rule 12 (for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY .)
    WHILE           reduce using rule 12 (for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY .)
    IF              reduce using rule 12 (for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 12 (for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY .)
    RETURN          reduce using rule 12 (for -> FOR asignacion TO CTEI LCURLY estatutos RCURLY .)


state 143

    (14) if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos . RCURLY else

    RCURLY          shift and go to state 146


state 144

    (17) return -> RETURN expresion SEMICOLON .

    RCURLY          reduce using rule 17 (return -> RETURN expresion SEMICOLON .)


state 145

    (45) methods -> FUNCION type ID LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY methods .

    MAIN            reduce using rule 45 (methods -> FUNCION type ID LPAREN argumentos RPAREN var LCURLY estatutos return RCURLY methods .)


state 146

    (14) if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY . else
    (15) else -> . ELSE LCURLY estatutos RCURLY
    (16) else -> . empty
    (51) empty -> .

    ELSE            shift and go to state 148
    ID              reduce using rule 51 (empty -> .)
    READ            reduce using rule 51 (empty -> .)
    PRINT           reduce using rule 51 (empty -> .)
    FOR             reduce using rule 51 (empty -> .)
    WHILE           reduce using rule 51 (empty -> .)
    IF              reduce using rule 51 (empty -> .)
    RCURLY          reduce using rule 51 (empty -> .)
    RETURN          reduce using rule 51 (empty -> .)

    empty                          shift and go to state 149
    else                           shift and go to state 147

state 147

    (14) if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else .

    ID              reduce using rule 14 (if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else .)
    READ            reduce using rule 14 (if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else .)
    PRINT           reduce using rule 14 (if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else .)
    FOR             reduce using rule 14 (if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else .)
    WHILE           reduce using rule 14 (if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else .)
    IF              reduce using rule 14 (if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else .)
    RCURLY          reduce using rule 14 (if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else .)
    RETURN          reduce using rule 14 (if -> IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else .)


state 148

    (15) else -> ELSE . LCURLY estatutos RCURLY

    LCURLY          shift and go to state 150


state 149

    (16) else -> empty .

    ID              reduce using rule 16 (else -> empty .)
    READ            reduce using rule 16 (else -> empty .)
    PRINT           reduce using rule 16 (else -> empty .)
    FOR             reduce using rule 16 (else -> empty .)
    WHILE           reduce using rule 16 (else -> empty .)
    IF              reduce using rule 16 (else -> empty .)
    RCURLY          reduce using rule 16 (else -> empty .)
    RETURN          reduce using rule 16 (else -> empty .)


state 150

    (15) else -> ELSE LCURLY . estatutos RCURLY
    (4) estatutos -> . asignacion SEMICOLON estatutos
    (5) estatutos -> . llamadaFun estatutos
    (6) estatutos -> . lectura estatutos
    (7) estatutos -> . escritura estatutos
    (8) estatutos -> . for estatutos
    (9) estatutos -> . while estatutos
    (10) estatutos -> . if estatutos
    (11) estatutos -> . empty
    (31) asignacion -> . ID EQUALS expresion
    (32) llamadaFun -> . ID LPAREN expresion RPAREN SEMICOLON
    (27) lectura -> . READ LPAREN lecturaAux RPAREN SEMICOLON
    (23) escritura -> . PRINT LPAREN escrituraAux RPAREN SEMICOLON
    (12) for -> . FOR asignacion TO CTEI LCURLY estatutos RCURLY
    (13) while -> . WHILE LPAREN expresion RPAREN LCURLY estatutos RCURLY
    (14) if -> . IF LPAREN expresion RPAREN THEN LCURLY estatutos RCURLY else
    (51) empty -> .

    ID              shift and go to state 56
    READ            shift and go to state 47
    PRINT           shift and go to state 49
    FOR             shift and go to state 54
    WHILE           shift and go to state 48
    IF              shift and go to state 57
    RCURLY          reduce using rule 51 (empty -> .)

    asignacion                     shift and go to state 59
    for                            shift and go to state 58
    llamadaFun                     shift and go to state 51
    while                          shift and go to state 60
    estatutos                      shift and go to state 151
    if                             shift and go to state 50
    lectura                        shift and go to state 52
    empty                          shift and go to state 53
    escritura                      shift and go to state 61

state 151

    (15) else -> ELSE LCURLY estatutos . RCURLY

    RCURLY          shift and go to state 152


state 152

    (15) else -> ELSE LCURLY estatutos RCURLY .

    ID              reduce using rule 15 (else -> ELSE LCURLY estatutos RCURLY .)
    READ            reduce using rule 15 (else -> ELSE LCURLY estatutos RCURLY .)
    PRINT           reduce using rule 15 (else -> ELSE LCURLY estatutos RCURLY .)
    FOR             reduce using rule 15 (else -> ELSE LCURLY estatutos RCURLY .)
    WHILE           reduce using rule 15 (else -> ELSE LCURLY estatutos RCURLY .)
    IF              reduce using rule 15 (else -> ELSE LCURLY estatutos RCURLY .)
    RCURLY          reduce using rule 15 (else -> ELSE LCURLY estatutos RCURLY .)
    RETURN          reduce using rule 15 (else -> ELSE LCURLY estatutos RCURLY .)

